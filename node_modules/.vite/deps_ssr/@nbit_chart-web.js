import { createRequire } from 'module';const require = createRequire(import.meta.url);
import {
  Modal_default,
  Table_default
} from "./chunk-WGWT464H.js";
import {
  DeptChartSpecieEnum,
  KLineChartType,
  LanguageMapToChartMap,
  ThemeChartMap,
  ThemeEnum,
  TimeSharingType,
  WSThrottleTypeEnum,
  bollKList,
  calBoll,
  calKdj,
  calRsi,
  calWr,
  calcAmp,
  calcChg,
  calculateMACD,
  calculateSMA,
  checkIsUp,
  getCurrentQuoteShowCoin,
  getTheme,
  kdjKList,
  macdKList,
  showFormatTime,
  sortMarketChartData,
  timeLocaleLanguageMap,
  tradingviewTimeMap
} from "./chunk-ZQGJVGBE.js";
import "./chunk-IZR6T5NO.js";
import {
  o
} from "./chunk-3HMZA6FS.js";
import "./chunk-K4VFO4KF.js";
import {
  require_dayjs_min
} from "./chunk-7POEUJBM.js";
import {
  require_react
} from "./chunk-CO5AYZXT.js";
import {
  __commonJS,
  __toESM
} from "./chunk-UGZAMUD3.js";

// node_modules/.pnpm/classnames@2.3.2/node_modules/classnames/index.js
var require_classnames = __commonJS({
  "node_modules/.pnpm/classnames@2.3.2/node_modules/classnames/index.js"(exports, module) {
    (function() {
      "use strict";
      var hasOwn = {}.hasOwnProperty;
      var nativeCodeString = "[native code]";
      function classNames2() {
        var classes = [];
        for (var i = 0; i < arguments.length; i++) {
          var arg = arguments[i];
          if (!arg)
            continue;
          var argType = typeof arg;
          if (argType === "string" || argType === "number") {
            classes.push(arg);
          } else if (Array.isArray(arg)) {
            if (arg.length) {
              var inner = classNames2.apply(null, arg);
              if (inner) {
                classes.push(inner);
              }
            }
          } else if (argType === "object") {
            if (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes("[native code]")) {
              classes.push(arg.toString());
              continue;
            }
            for (var key in arg) {
              if (hasOwn.call(arg, key) && arg[key]) {
                classes.push(key);
              }
            }
          }
        }
        return classes.join(" ");
      }
      if (typeof module !== "undefined" && module.exports) {
        classNames2.default = classNames2;
        module.exports = classNames2;
      } else if (typeof define === "function" && typeof define.amd === "object" && define.amd) {
        define("classnames", [], function() {
          return classNames2;
        });
      } else {
        window.classNames = classNames2;
      }
    })();
  }
});

// node_modules/.pnpm/@nbit+chart-web@1.0.0-beta.109/node_modules/@nbit/chart-web/src/components/k-line/k-line-chart.tsx
var import_dayjs = __toESM(require_dayjs_min());

// node_modules/.pnpm/fancy-canvas@2.1.0/node_modules/fancy-canvas/size.mjs
function size(_a) {
  var width = _a.width, height = _a.height;
  if (width < 0) {
    throw new Error("Negative width is not allowed for Size");
  }
  if (height < 0) {
    throw new Error("Negative height is not allowed for Size");
  }
  return {
    width,
    height
  };
}
function equalSizes(first, second) {
  return first.width === second.width && first.height === second.height;
}

// node_modules/.pnpm/fancy-canvas@2.1.0/node_modules/fancy-canvas/device-pixel-ratio.mjs
var Observable = function() {
  function Observable2(win) {
    var _this = this;
    this._resolutionListener = function() {
      return _this._onResolutionChanged();
    };
    this._resolutionMediaQueryList = null;
    this._observers = [];
    this._window = win;
    this._installResolutionListener();
  }
  Observable2.prototype.dispose = function() {
    this._uninstallResolutionListener();
    this._window = null;
  };
  Object.defineProperty(Observable2.prototype, "value", {
    get: function() {
      return this._window.devicePixelRatio;
    },
    enumerable: false,
    configurable: true
  });
  Observable2.prototype.subscribe = function(next) {
    var _this = this;
    var observer = { next };
    this._observers.push(observer);
    return {
      unsubscribe: function() {
        _this._observers = _this._observers.filter(function(o3) {
          return o3 !== observer;
        });
      }
    };
  };
  Observable2.prototype._installResolutionListener = function() {
    if (this._resolutionMediaQueryList !== null) {
      throw new Error("Resolution listener is already installed");
    }
    var dppx = this._window.devicePixelRatio;
    this._resolutionMediaQueryList = this._window.matchMedia("all and (resolution: ".concat(dppx, "dppx)"));
    this._resolutionMediaQueryList.addListener(this._resolutionListener);
  };
  Observable2.prototype._uninstallResolutionListener = function() {
    if (this._resolutionMediaQueryList !== null) {
      this._resolutionMediaQueryList.removeListener(this._resolutionListener);
      this._resolutionMediaQueryList = null;
    }
  };
  Observable2.prototype._reinstallResolutionListener = function() {
    this._uninstallResolutionListener();
    this._installResolutionListener();
  };
  Observable2.prototype._onResolutionChanged = function() {
    var _this = this;
    this._observers.forEach(function(observer) {
      return observer.next(_this._window.devicePixelRatio);
    });
    this._reinstallResolutionListener();
  };
  return Observable2;
}();
function createObservable(win) {
  return new Observable(win);
}

// node_modules/.pnpm/fancy-canvas@2.1.0/node_modules/fancy-canvas/canvas-element-bitmap-size.mjs
var DevicePixelContentBoxBinding = function() {
  function DevicePixelContentBoxBinding2(canvasElement, transformBitmapSize, options) {
    var _a;
    this._canvasElement = null;
    this._bitmapSizeChangedListeners = [];
    this._suggestedBitmapSize = null;
    this._suggestedBitmapSizeChangedListeners = [];
    this._devicePixelRatioObservable = null;
    this._canvasElementResizeObserver = null;
    this._canvasElement = canvasElement;
    this._canvasElementClientSize = size({
      width: this._canvasElement.clientWidth,
      height: this._canvasElement.clientHeight
    });
    this._transformBitmapSize = transformBitmapSize !== null && transformBitmapSize !== void 0 ? transformBitmapSize : function(size2) {
      return size2;
    };
    this._allowResizeObserver = (_a = options === null || options === void 0 ? void 0 : options.allowResizeObserver) !== null && _a !== void 0 ? _a : true;
    this._chooseAndInitObserver();
  }
  DevicePixelContentBoxBinding2.prototype.dispose = function() {
    var _a, _b;
    if (this._canvasElement === null) {
      throw new Error("Object is disposed");
    }
    (_a = this._canvasElementResizeObserver) === null || _a === void 0 ? void 0 : _a.disconnect();
    this._canvasElementResizeObserver = null;
    (_b = this._devicePixelRatioObservable) === null || _b === void 0 ? void 0 : _b.dispose();
    this._devicePixelRatioObservable = null;
    this._suggestedBitmapSizeChangedListeners.length = 0;
    this._bitmapSizeChangedListeners.length = 0;
    this._canvasElement = null;
  };
  Object.defineProperty(DevicePixelContentBoxBinding2.prototype, "canvasElement", {
    get: function() {
      if (this._canvasElement === null) {
        throw new Error("Object is disposed");
      }
      return this._canvasElement;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(DevicePixelContentBoxBinding2.prototype, "canvasElementClientSize", {
    get: function() {
      return this._canvasElementClientSize;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(DevicePixelContentBoxBinding2.prototype, "bitmapSize", {
    get: function() {
      return size({
        width: this.canvasElement.width,
        height: this.canvasElement.height
      });
    },
    enumerable: false,
    configurable: true
  });
  DevicePixelContentBoxBinding2.prototype.resizeCanvasElement = function(clientSize) {
    this._canvasElementClientSize = size(clientSize);
    this.canvasElement.style.width = "".concat(this._canvasElementClientSize.width, "px");
    this.canvasElement.style.height = "".concat(this._canvasElementClientSize.height, "px");
    this._invalidateBitmapSize();
  };
  DevicePixelContentBoxBinding2.prototype.subscribeBitmapSizeChanged = function(listener) {
    this._bitmapSizeChangedListeners.push(listener);
  };
  DevicePixelContentBoxBinding2.prototype.unsubscribeBitmapSizeChanged = function(listener) {
    this._bitmapSizeChangedListeners = this._bitmapSizeChangedListeners.filter(function(l2) {
      return l2 !== listener;
    });
  };
  Object.defineProperty(DevicePixelContentBoxBinding2.prototype, "suggestedBitmapSize", {
    get: function() {
      return this._suggestedBitmapSize;
    },
    enumerable: false,
    configurable: true
  });
  DevicePixelContentBoxBinding2.prototype.subscribeSuggestedBitmapSizeChanged = function(listener) {
    this._suggestedBitmapSizeChangedListeners.push(listener);
  };
  DevicePixelContentBoxBinding2.prototype.unsubscribeSuggestedBitmapSizeChanged = function(listener) {
    this._suggestedBitmapSizeChangedListeners = this._suggestedBitmapSizeChangedListeners.filter(function(l2) {
      return l2 !== listener;
    });
  };
  DevicePixelContentBoxBinding2.prototype.applySuggestedBitmapSize = function() {
    if (this._suggestedBitmapSize === null) {
      return;
    }
    var oldSuggestedSize = this._suggestedBitmapSize;
    this._suggestedBitmapSize = null;
    this._resizeBitmap(oldSuggestedSize);
    this._emitSuggestedBitmapSizeChanged(oldSuggestedSize, this._suggestedBitmapSize);
  };
  DevicePixelContentBoxBinding2.prototype._resizeBitmap = function(newSize) {
    var oldSize = this.bitmapSize;
    if (equalSizes(oldSize, newSize)) {
      return;
    }
    this.canvasElement.width = newSize.width;
    this.canvasElement.height = newSize.height;
    this._emitBitmapSizeChanged(oldSize, newSize);
  };
  DevicePixelContentBoxBinding2.prototype._emitBitmapSizeChanged = function(oldSize, newSize) {
    var _this = this;
    this._bitmapSizeChangedListeners.forEach(function(listener) {
      return listener.call(_this, oldSize, newSize);
    });
  };
  DevicePixelContentBoxBinding2.prototype._suggestNewBitmapSize = function(newSize) {
    var oldSuggestedSize = this._suggestedBitmapSize;
    var finalNewSize = size(this._transformBitmapSize(newSize, this._canvasElementClientSize));
    var newSuggestedSize = equalSizes(this.bitmapSize, finalNewSize) ? null : finalNewSize;
    if (oldSuggestedSize === null && newSuggestedSize === null) {
      return;
    }
    if (oldSuggestedSize !== null && newSuggestedSize !== null && equalSizes(oldSuggestedSize, newSuggestedSize)) {
      return;
    }
    this._suggestedBitmapSize = newSuggestedSize;
    this._emitSuggestedBitmapSizeChanged(oldSuggestedSize, newSuggestedSize);
  };
  DevicePixelContentBoxBinding2.prototype._emitSuggestedBitmapSizeChanged = function(oldSize, newSize) {
    var _this = this;
    this._suggestedBitmapSizeChangedListeners.forEach(function(listener) {
      return listener.call(_this, oldSize, newSize);
    });
  };
  DevicePixelContentBoxBinding2.prototype._chooseAndInitObserver = function() {
    var _this = this;
    if (!this._allowResizeObserver) {
      this._initDevicePixelRatioObservable();
      return;
    }
    isDevicePixelContentBoxSupported().then(function(isSupported) {
      return isSupported ? _this._initResizeObserver() : _this._initDevicePixelRatioObservable();
    });
  };
  DevicePixelContentBoxBinding2.prototype._initDevicePixelRatioObservable = function() {
    var _this = this;
    if (this._canvasElement === null) {
      return;
    }
    var win = canvasElementWindow(this._canvasElement);
    if (win === null) {
      throw new Error("No window is associated with the canvas");
    }
    this._devicePixelRatioObservable = createObservable(win);
    this._devicePixelRatioObservable.subscribe(function() {
      return _this._invalidateBitmapSize();
    });
    this._invalidateBitmapSize();
  };
  DevicePixelContentBoxBinding2.prototype._invalidateBitmapSize = function() {
    var _a, _b;
    if (this._canvasElement === null) {
      return;
    }
    var win = canvasElementWindow(this._canvasElement);
    if (win === null) {
      return;
    }
    var ratio = (_b = (_a = this._devicePixelRatioObservable) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : win.devicePixelRatio;
    var canvasRects = this._canvasElement.getClientRects();
    var newSize = canvasRects[0] !== void 0 ? predictedBitmapSize(canvasRects[0], ratio) : size({
      width: this._canvasElementClientSize.width * ratio,
      height: this._canvasElementClientSize.height * ratio
    });
    this._suggestNewBitmapSize(newSize);
  };
  DevicePixelContentBoxBinding2.prototype._initResizeObserver = function() {
    var _this = this;
    if (this._canvasElement === null) {
      return;
    }
    this._canvasElementResizeObserver = new ResizeObserver(function(entries) {
      var entry = entries.find(function(entry2) {
        return entry2.target === _this._canvasElement;
      });
      if (!entry || !entry.devicePixelContentBoxSize || !entry.devicePixelContentBoxSize[0]) {
        return;
      }
      var entrySize = entry.devicePixelContentBoxSize[0];
      var newSize = size({
        width: entrySize.inlineSize,
        height: entrySize.blockSize
      });
      _this._suggestNewBitmapSize(newSize);
    });
    this._canvasElementResizeObserver.observe(this._canvasElement, { box: "device-pixel-content-box" });
  };
  return DevicePixelContentBoxBinding2;
}();
function bindTo(canvasElement, target) {
  if (target.type === "device-pixel-content-box") {
    return new DevicePixelContentBoxBinding(canvasElement, target.transform, target.options);
  }
  throw new Error("Unsupported binding target");
}
function canvasElementWindow(canvasElement) {
  return canvasElement.ownerDocument.defaultView;
}
function isDevicePixelContentBoxSupported() {
  return new Promise(function(resolve) {
    var ro = new ResizeObserver(function(entries) {
      resolve(entries.every(function(entry) {
        return "devicePixelContentBoxSize" in entry;
      }));
      ro.disconnect();
    });
    ro.observe(document.body, { box: "device-pixel-content-box" });
  }).catch(function() {
    return false;
  });
}
function predictedBitmapSize(canvasRect, ratio) {
  return size({
    width: Math.round(canvasRect.left * ratio + canvasRect.width * ratio) - Math.round(canvasRect.left * ratio),
    height: Math.round(canvasRect.top * ratio + canvasRect.height * ratio) - Math.round(canvasRect.top * ratio)
  });
}

// node_modules/.pnpm/fancy-canvas@2.1.0/node_modules/fancy-canvas/canvas-rendering-target.mjs
var CanvasRenderingTarget2D = function() {
  function CanvasRenderingTarget2D2(context, mediaSize, bitmapSize) {
    if (mediaSize.width === 0 || mediaSize.height === 0) {
      throw new TypeError("Rendering target could only be created on a media with positive width and height");
    }
    this._mediaSize = mediaSize;
    if (bitmapSize.width === 0 || bitmapSize.height === 0) {
      throw new TypeError("Rendering target could only be created using a bitmap with positive integer width and height");
    }
    this._bitmapSize = bitmapSize;
    this._context = context;
  }
  CanvasRenderingTarget2D2.prototype.useMediaCoordinateSpace = function(f2) {
    try {
      this._context.save();
      this._context.setTransform(1, 0, 0, 1, 0, 0);
      this._context.scale(this._horizontalPixelRatio, this._verticalPixelRatio);
      return f2({
        context: this._context,
        mediaSize: this._mediaSize
      });
    } finally {
      this._context.restore();
    }
  };
  CanvasRenderingTarget2D2.prototype.useBitmapCoordinateSpace = function(f2) {
    try {
      this._context.save();
      this._context.setTransform(1, 0, 0, 1, 0, 0);
      return f2({
        context: this._context,
        mediaSize: this._mediaSize,
        bitmapSize: this._bitmapSize,
        horizontalPixelRatio: this._horizontalPixelRatio,
        verticalPixelRatio: this._verticalPixelRatio
      });
    } finally {
      this._context.restore();
    }
  };
  Object.defineProperty(CanvasRenderingTarget2D2.prototype, "_horizontalPixelRatio", {
    get: function() {
      return this._bitmapSize.width / this._mediaSize.width;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(CanvasRenderingTarget2D2.prototype, "_verticalPixelRatio", {
    get: function() {
      return this._bitmapSize.height / this._mediaSize.height;
    },
    enumerable: false,
    configurable: true
  });
  return CanvasRenderingTarget2D2;
}();
function tryCreateCanvasRenderingTarget2D(binding, contextOptions) {
  var mediaSize = binding.canvasElementClientSize;
  if (mediaSize.width === 0 || mediaSize.height === 0) {
    return null;
  }
  var bitmapSize = binding.bitmapSize;
  if (bitmapSize.width === 0 || bitmapSize.height === 0) {
    return null;
  }
  var context = binding.canvasElement.getContext("2d", contextOptions);
  if (context === null) {
    return null;
  }
  return new CanvasRenderingTarget2D(context, mediaSize, bitmapSize);
}

// node_modules/.pnpm/@nbit+lightweight-charts@0.0.11/node_modules/@nbit/lightweight-charts/dist/lightweight-charts.production.mjs
var e = { upColor: "#26a69a", downColor: "#ef5350", wickVisible: true, borderVisible: true, borderColor: "#378658", borderUpColor: "#26a69a", borderDownColor: "#ef5350", wickColor: "#737375", wickUpColor: "#26a69a", wickDownColor: "#ef5350" };
var r = { upColor: "#26a69a", downColor: "#ef5350", openVisible: true, thinBars: true };
var h = { color: "#2196f3", lineStyle: 0, lineWidth: 3, lineType: 0, lineVisible: true, crosshairMarkerVisible: true, crosshairMarkerRadius: 4, crosshairMarkerBorderColor: "", crosshairMarkerBorderWidth: 2, crosshairMarkerBackgroundColor: "", lastPriceAnimation: 0, pointMarkersVisible: false };
var l = { topColor: "rgba( 46, 220, 135, 0.4)", bottomColor: "rgba( 40, 221, 100, 0)", invertFilledArea: false, lineColor: "#33D778", lineStyle: 0, lineWidth: 3, lineType: 0, lineVisible: true, crosshairMarkerVisible: true, crosshairMarkerRadius: 4, crosshairMarkerBorderColor: "", crosshairMarkerBorderWidth: 2, crosshairMarkerBackgroundColor: "", lastPriceAnimation: 0, pointMarkersVisible: false };
var a = { baseValue: { type: "price", price: 0 }, topFillColor1: "rgba(38, 166, 154, 0.28)", topFillColor2: "rgba(38, 166, 154, 0.05)", topLineColor: "rgba(38, 166, 154, 1)", bottomFillColor1: "rgba(239, 83, 80, 0.05)", bottomFillColor2: "rgba(239, 83, 80, 0.28)", bottomLineColor: "rgba(239, 83, 80, 1)", lineWidth: 3, lineStyle: 0, lineType: 0, lineVisible: true, crosshairMarkerVisible: true, crosshairMarkerRadius: 4, crosshairMarkerBorderColor: "", crosshairMarkerBorderWidth: 2, crosshairMarkerBackgroundColor: "", lastPriceAnimation: 0, pointMarkersVisible: false };
var o2 = { color: "#26a69a", base: 0 };
var _ = { color: "#2196f3" };
var u = { title: "", visible: true, lastValueVisible: true, priceLineVisible: true, priceLineSource: 0, priceLineWidth: 1, priceLineColor: "", priceLineStyle: 2, baseLineVisible: true, baseLineWidth: 1, baseLineColor: "#B2B5BE", baseLineStyle: 0, priceFormat: { type: "price", precision: 2, minMove: 0.01 } };
var c;
var d;
function f(t, i) {
  const n = { 0: [], 1: [t.lineWidth, t.lineWidth], 2: [2 * t.lineWidth, 2 * t.lineWidth], 3: [6 * t.lineWidth, 6 * t.lineWidth], 4: [t.lineWidth, 4 * t.lineWidth] }[i];
  t.setLineDash(n);
}
function v(t, i, n, s) {
  t.beginPath();
  const e2 = t.lineWidth % 2 ? 0.5 : 0;
  t.moveTo(n, i + e2), t.lineTo(s, i + e2), t.stroke();
}
function p(t, i) {
  if (!t)
    throw new Error("Assertion failed" + (i ? ": " + i : ""));
}
function m(t) {
  if (void 0 === t)
    throw new Error("Value is undefined");
  return t;
}
function b(t) {
  if (null === t)
    throw new Error("Value is null");
  return t;
}
function w(t) {
  return b(m(t));
}
!function(t) {
  t[t.Simple = 0] = "Simple", t[t.WithSteps = 1] = "WithSteps", t[t.Curved = 2] = "Curved";
}(c || (c = {})), function(t) {
  t[t.Solid = 0] = "Solid", t[t.Dotted = 1] = "Dotted", t[t.Dashed = 2] = "Dashed", t[t.LargeDashed = 3] = "LargeDashed", t[t.SparseDotted = 4] = "SparseDotted";
}(d || (d = {}));
var g = { khaki: "#f0e68c", azure: "#f0ffff", aliceblue: "#f0f8ff", ghostwhite: "#f8f8ff", gold: "#ffd700", goldenrod: "#daa520", gainsboro: "#dcdcdc", gray: "#808080", green: "#008000", honeydew: "#f0fff0", floralwhite: "#fffaf0", lightblue: "#add8e6", lightcoral: "#f08080", lemonchiffon: "#fffacd", hotpink: "#ff69b4", lightyellow: "#ffffe0", greenyellow: "#adff2f", lightgoldenrodyellow: "#fafad2", limegreen: "#32cd32", linen: "#faf0e6", lightcyan: "#e0ffff", magenta: "#f0f", maroon: "#800000", olive: "#808000", orange: "#ffa500", oldlace: "#fdf5e6", mediumblue: "#0000cd", transparent: "#0000", lime: "#0f0", lightpink: "#ffb6c1", mistyrose: "#ffe4e1", moccasin: "#ffe4b5", midnightblue: "#191970", orchid: "#da70d6", mediumorchid: "#ba55d3", mediumturquoise: "#48d1cc", orangered: "#ff4500", royalblue: "#4169e1", powderblue: "#b0e0e6", red: "#f00", coral: "#ff7f50", turquoise: "#40e0d0", white: "#fff", whitesmoke: "#f5f5f5", wheat: "#f5deb3", teal: "#008080", steelblue: "#4682b4", bisque: "#ffe4c4", aquamarine: "#7fffd4", aqua: "#0ff", sienna: "#a0522d", silver: "#c0c0c0", springgreen: "#00ff7f", antiquewhite: "#faebd7", burlywood: "#deb887", brown: "#a52a2a", beige: "#f5f5dc", chocolate: "#d2691e", chartreuse: "#7fff00", cornflowerblue: "#6495ed", cornsilk: "#fff8dc", crimson: "#dc143c", cadetblue: "#5f9ea0", tomato: "#ff6347", fuchsia: "#f0f", blue: "#00f", salmon: "#fa8072", blanchedalmond: "#ffebcd", slateblue: "#6a5acd", slategray: "#708090", thistle: "#d8bfd8", tan: "#d2b48c", cyan: "#0ff", darkblue: "#00008b", darkcyan: "#008b8b", darkgoldenrod: "#b8860b", darkgray: "#a9a9a9", blueviolet: "#8a2be2", black: "#000", darkmagenta: "#8b008b", darkslateblue: "#483d8b", darkkhaki: "#bdb76b", darkorchid: "#9932cc", darkorange: "#ff8c00", darkgreen: "#006400", darkred: "#8b0000", dodgerblue: "#1e90ff", darkslategray: "#2f4f4f", dimgray: "#696969", deepskyblue: "#00bfff", firebrick: "#b22222", forestgreen: "#228b22", indigo: "#4b0082", ivory: "#fffff0", lavenderblush: "#fff0f5", feldspar: "#d19275", indianred: "#cd5c5c", lightgreen: "#90ee90", lightgrey: "#d3d3d3", lightskyblue: "#87cefa", lightslategray: "#789", lightslateblue: "#8470ff", snow: "#fffafa", lightseagreen: "#20b2aa", lightsalmon: "#ffa07a", darksalmon: "#e9967a", darkviolet: "#9400d3", mediumpurple: "#9370d8", mediumaquamarine: "#66cdaa", skyblue: "#87ceeb", lavender: "#e6e6fa", lightsteelblue: "#b0c4de", mediumvioletred: "#c71585", mintcream: "#f5fffa", navajowhite: "#ffdead", navy: "#000080", olivedrab: "#6b8e23", palevioletred: "#d87093", violetred: "#d02090", yellow: "#ff0", yellowgreen: "#9acd32", lawngreen: "#7cfc00", pink: "#ffc0cb", paleturquoise: "#afeeee", palegoldenrod: "#eee8aa", darkolivegreen: "#556b2f", darkseagreen: "#8fbc8f", darkturquoise: "#00ced1", peachpuff: "#ffdab9", deeppink: "#ff1493", violet: "#ee82ee", palegreen: "#98fb98", mediumseagreen: "#3cb371", peru: "#cd853f", saddlebrown: "#8b4513", sandybrown: "#f4a460", rosybrown: "#bc8f8f", purple: "#800080", seagreen: "#2e8b57", seashell: "#fff5ee", papayawhip: "#ffefd5", mediumslateblue: "#7b68ee", plum: "#dda0dd", mediumspringgreen: "#00fa9a" };
function M(t) {
  return t < 0 ? 0 : t > 255 ? 255 : Math.round(t) || 0;
}
function x(t) {
  return t <= 0 || t > 0 ? t < 0 ? 0 : t > 1 ? 1 : Math.round(1e4 * t) / 1e4 : 0;
}
var S = /^#([0-9a-f])([0-9a-f])([0-9a-f])([0-9a-f])?$/i;
var k = /^#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})?$/i;
var y = /^rgb\(\s*(-?\d{1,10})\s*,\s*(-?\d{1,10})\s*,\s*(-?\d{1,10})\s*\)$/;
var C = /^rgba\(\s*(-?\d{1,10})\s*,\s*(-?\d{1,10})\s*,\s*(-?\d{1,10})\s*,\s*(-?[\d]{0,10}(?:\.\d+)?)\s*\)$/;
function T(t) {
  (t = t.toLowerCase()) in g && (t = g[t]);
  {
    const i = C.exec(t) || y.exec(t);
    if (i)
      return [M(parseInt(i[1], 10)), M(parseInt(i[2], 10)), M(parseInt(i[3], 10)), x(i.length < 5 ? 1 : parseFloat(i[4]))];
  }
  {
    const i = k.exec(t);
    if (i)
      return [M(parseInt(i[1], 16)), M(parseInt(i[2], 16)), M(parseInt(i[3], 16)), 1];
  }
  {
    const i = S.exec(t);
    if (i)
      return [M(17 * parseInt(i[1], 16)), M(17 * parseInt(i[2], 16)), M(17 * parseInt(i[3], 16)), 1];
  }
  throw new Error(`Cannot parse color: ${t}`);
}
function P(t) {
  const i = T(t);
  return { t: `rgb(${i[0]}, ${i[1]}, ${i[2]})`, i: (n = i, 0.199 * n[0] + 0.687 * n[1] + 0.114 * n[2] > 160 ? "black" : "white") };
  var n;
}
var R = class {
  constructor() {
    this.h = [];
  }
  l(t, i, n) {
    const s = { o: t, _: i, u: true === n };
    this.h.push(s);
  }
  v(t) {
    const i = this.h.findIndex((i2) => t === i2.o);
    i > -1 && this.h.splice(i, 1);
  }
  p(t) {
    this.h = this.h.filter((i) => i._ !== t);
  }
  m(t, i, n) {
    const s = [...this.h];
    this.h = this.h.filter((t2) => !t2.u), s.forEach((s2) => s2.o(t, i, n));
  }
  M() {
    return this.h.length > 0;
  }
  S() {
    this.h = [];
  }
};
function D(t, ...i) {
  for (const n of i)
    for (const i2 in n)
      void 0 !== n[i2] && ("object" != typeof n[i2] || void 0 === t[i2] || Array.isArray(n[i2]) ? t[i2] = n[i2] : D(t[i2], n[i2]));
  return t;
}
function O(t) {
  return "number" == typeof t && isFinite(t);
}
function A(t) {
  return "number" == typeof t && t % 1 == 0;
}
function V(t) {
  return "string" == typeof t;
}
function B(t) {
  return "boolean" == typeof t;
}
function I(t) {
  const i = t;
  if (!i || "object" != typeof i)
    return i;
  let n, s, e2;
  for (s in n = Array.isArray(i) ? [] : {}, i)
    i.hasOwnProperty(s) && (e2 = i[s], n[s] = e2 && "object" == typeof e2 ? I(e2) : e2);
  return n;
}
function z(t) {
  return null !== t;
}
function E(t) {
  return null === t ? void 0 : t;
}
var L = "-apple-system, BlinkMacSystemFont, 'Trebuchet MS', Roboto, Ubuntu, sans-serif";
function N(t, i, n) {
  return void 0 === i && (i = L), `${n = void 0 !== n ? `${n} ` : ""}${t}px ${i}`;
}
var F = class {
  constructor(t) {
    this.k = { C: 1, T: 5, P: NaN, R: "", D: "", O: "", A: "", V: 0, B: 0, I: 0, L: 0, N: 0 }, this.F = t;
  }
  W() {
    const t = this.k, i = this.j(), n = this.H();
    return t.P === i && t.D === n || (t.P = i, t.D = n, t.R = N(i, n), t.L = 2.5 / 12 * i, t.V = t.L, t.B = i / 12 * t.T, t.I = i / 12 * t.T, t.N = 0), t.O = this.$(), t.A = this.U(), this.k;
  }
  $() {
    return this.F.W().layout.textColor;
  }
  U() {
    return this.F.q();
  }
  j() {
    return this.F.W().layout.fontSize;
  }
  H() {
    return this.F.W().layout.fontFamily;
  }
};
var W = class {
  constructor() {
    this.Y = [];
  }
  X(t) {
    this.Y = t;
  }
  K(t, i, n) {
    this.Y.forEach((s) => {
      s.K(t, i, n);
    });
  }
};
var j = class {
  K(t, i, n) {
    t.useMediaCoordinateSpace((t2) => this.Z(t2, i, n));
  }
  G(t, i, n) {
    t.useMediaCoordinateSpace((t2) => this.J(t2, i, n));
  }
  J(t, i, n) {
  }
};
var H = class extends j {
  constructor() {
    super(...arguments), this.tt = null;
  }
  it(t) {
    this.tt = t;
  }
  Z({ context: t }) {
    if (null === this.tt || null === this.tt.nt)
      return;
    const i = this.tt.nt, n = this.tt, s = (s2) => {
      t.beginPath();
      for (let e2 = i.to - 1; e2 >= i.from; --e2) {
        const i2 = n.st[e2];
        t.moveTo(i2.et, i2.rt), t.arc(i2.et, i2.rt, s2, 0, 2 * Math.PI);
      }
      t.fill();
    };
    n.ht > 0 && (t.fillStyle = n.lt, s(n.ot + n.ht)), t.fillStyle = n._t, s(n.ot);
  }
};
function $() {
  return { st: [{ et: 0, rt: 0, ut: 0, ct: 0 }], _t: "", lt: "", ot: 0, ht: 0, nt: null };
}
var U = { from: 0, to: 1 };
var q = class {
  constructor(t, i) {
    this.dt = new W(), this.ft = [], this.vt = [], this.bt = true, this.F = t, this.wt = i, this.dt.X(this.ft);
  }
  gt(t) {
    const i = this.F.Mt();
    i.length !== this.ft.length && (this.vt = i.map($), this.ft = this.vt.map((t2) => {
      const i2 = new H();
      return i2.it(t2), i2;
    }), this.dt.X(this.ft)), this.bt = true;
  }
  xt() {
    return this.bt && (this.St(), this.bt = false), this.dt;
  }
  St() {
    const t = 2 === this.wt.W().mode, i = this.F.Mt(), n = this.wt.kt(), s = this.F.yt();
    i.forEach((i2, e2) => {
      var r2;
      const h2 = this.vt[e2], l2 = i2.Ct(n);
      if (t || null === l2 || !i2.Tt())
        return void (h2.nt = null);
      const a2 = b(i2.Pt());
      h2._t = l2.Rt, h2.ot = l2.ot, h2.ht = l2.Dt, h2.st[0].ct = l2.ct, h2.st[0].rt = i2.At().Ot(l2.ct, a2.Vt), h2.lt = null !== (r2 = l2.Bt) && void 0 !== r2 ? r2 : this.F.It(h2.st[0].rt / i2.At().zt()), h2.st[0].ut = n, h2.st[0].et = s.Et(n), h2.nt = U;
    });
  }
};
var Y = class {
  K(t, i, n) {
    t.useBitmapCoordinateSpace((t2) => this.Z(t2, i, n));
  }
};
var X = class extends Y {
  constructor(t) {
    super(), this.Lt = t;
  }
  Z({ context: t, bitmapSize: i, horizontalPixelRatio: n, verticalPixelRatio: s }) {
    if (null === this.Lt)
      return;
    const e2 = this.Lt.Nt.Tt, r2 = this.Lt.Ft.Tt;
    if (!e2 && !r2)
      return;
    const h2 = Math.round(this.Lt.et * n), l2 = Math.round(this.Lt.rt * s);
    t.lineCap = "butt", e2 && h2 >= 0 && (t.lineWidth = Math.floor(this.Lt.Nt.ht * n), t.strokeStyle = this.Lt.Nt.O, t.fillStyle = this.Lt.Nt.O, f(t, this.Lt.Nt.Wt), function(t2, i2, n2, s2) {
      t2.beginPath();
      const e3 = t2.lineWidth % 2 ? 0.5 : 0;
      t2.moveTo(i2 + e3, n2), t2.lineTo(i2 + e3, s2), t2.stroke();
    }(t, h2, 0, i.height)), r2 && l2 >= 0 && (t.lineWidth = Math.floor(this.Lt.Ft.ht * s), t.strokeStyle = this.Lt.Ft.O, t.fillStyle = this.Lt.Ft.O, f(t, this.Lt.Ft.Wt), v(t, l2, 0, i.width));
  }
};
var K = class {
  constructor(t) {
    this.bt = true, this.jt = { Nt: { ht: 1, Wt: 0, O: "", Tt: false }, Ft: { ht: 1, Wt: 0, O: "", Tt: false }, et: 0, rt: 0 }, this.Ht = new X(this.jt), this.$t = t;
  }
  gt() {
    this.bt = true;
  }
  xt() {
    return this.bt && (this.St(), this.bt = false), this.Ht;
  }
  St() {
    const t = this.$t.Tt(), i = b(this.$t.Ut()), n = i.qt().W().crosshair, s = this.jt;
    if (2 === n.mode)
      return s.Ft.Tt = false, void (s.Nt.Tt = false);
    s.Ft.Tt = t && this.$t.Yt(i), s.Nt.Tt = t && this.$t.Xt(), s.Ft.ht = n.horzLine.width, s.Ft.Wt = n.horzLine.style, s.Ft.O = n.horzLine.color, s.Nt.ht = n.vertLine.width, s.Nt.Wt = n.vertLine.style, s.Nt.O = n.vertLine.color, s.et = this.$t.Kt(), s.rt = this.$t.Zt();
  }
};
function Z(t, i, n, s, e2, r2) {
  t.fillRect(i + r2, n, s - 2 * r2, r2), t.fillRect(i + r2, n + e2 - r2, s - 2 * r2, r2), t.fillRect(i, n, r2, e2), t.fillRect(i + s - r2, n, r2, e2);
}
function G(t, i, n, s, e2, r2) {
  t.save(), t.globalCompositeOperation = "copy", t.fillStyle = r2, t.fillRect(i, n, s, e2), t.restore();
}
function J(t, i) {
  return t.map((t2) => 0 === t2 ? t2 : t2 + i);
}
function Q(t, i, n, s, e2, r2) {
  t.beginPath(), t.lineTo(i + s - r2[1], n), 0 !== r2[1] && t.arcTo(i + s, n, i + s, n + r2[1], r2[1]), t.lineTo(i + s, n + e2 - r2[2]), 0 !== r2[2] && t.arcTo(i + s, n + e2, i + s - r2[2], n + e2, r2[2]), t.lineTo(i + r2[3], n + e2), 0 !== r2[3] && t.arcTo(i, n + e2, i, n + e2 - r2[3], r2[3]), t.lineTo(i, n + r2[0]), 0 !== r2[0] && t.arcTo(i, n, i + r2[0], n, r2[0]);
}
function tt(t, i, n, s, e2, r2, h2 = 0, l2 = [0, 0, 0, 0], a2 = "") {
  if (t.save(), !h2 || !a2 || a2 === r2)
    return Q(t, i, n, s, e2, l2), t.fillStyle = r2, t.fill(), void t.restore();
  const o3 = h2 / 2;
  if ("transparent" !== r2) {
    Q(t, i + h2, n + h2, s - 2 * h2, e2 - 2 * h2, J(l2, -h2)), t.fillStyle = r2, t.fill();
  }
  if ("transparent" !== a2) {
    Q(t, i + o3, n + o3, s - h2, e2 - h2, J(l2, -o3)), t.lineWidth = h2, t.strokeStyle = a2, t.closePath(), t.stroke();
  }
  t.restore();
}
function it(t, i, n, s, e2, r2, h2) {
  t.save(), t.globalCompositeOperation = "copy";
  const l2 = t.createLinearGradient(0, 0, 0, e2);
  l2.addColorStop(0, r2), l2.addColorStop(1, h2), t.fillStyle = l2, t.fillRect(i, n, s, e2), t.restore();
}
var nt = class {
  constructor(t, i) {
    this.it(t, i);
  }
  it(t, i) {
    this.Lt = t, this.Gt = i;
  }
  zt(t, i) {
    return this.Lt.Tt ? t.P + t.L + t.V : 0;
  }
  K(t, i, n, s) {
    if (!this.Lt.Tt || 0 === this.Lt.Jt.length)
      return;
    const e2 = this.Lt.O, r2 = this.Gt.t, h2 = t.useBitmapCoordinateSpace((t2) => {
      const h3 = t2.context;
      h3.font = i.R;
      const l2 = this.Qt(t2, i, n, s), a2 = l2.ti, o3 = (t3, i2) => {
        l2.ii ? tt(h3, a2.ni, a2.si, a2.ei, a2.ri, t3, a2.hi, [a2.ot, 0, 0, a2.ot], i2) : tt(h3, a2.li, a2.si, a2.ei, a2.ri, t3, a2.hi, [0, a2.ot, a2.ot, 0], i2);
      };
      return o3(r2, "transparent"), this.Lt.ai && (h3.fillStyle = e2, h3.fillRect(a2.li, a2.oi, a2._i - a2.li, a2.ui)), o3("transparent", r2), this.Lt.ci && (h3.fillStyle = i.A, h3.fillRect(l2.ii ? a2.di - a2.hi : 0, a2.si, a2.hi, a2.fi - a2.si)), l2;
    });
    t.useMediaCoordinateSpace(({ context: t2 }) => {
      const n2 = h2.vi;
      t2.font = i.R, t2.textAlign = h2.ii ? "right" : "left", t2.textBaseline = "middle", t2.fillStyle = e2, t2.fillText(this.Lt.Jt, n2.pi, (n2.si + n2.fi) / 2 + n2.mi);
    });
  }
  Qt(t, i, n, s) {
    var e2;
    const { context: r2, bitmapSize: h2, mediaSize: l2, horizontalPixelRatio: a2, verticalPixelRatio: o3 } = t, _2 = this.Lt.ai || !this.Lt.bi ? i.T : 0, u2 = this.Lt.wi ? i.C : 0, c2 = i.L + this.Gt.gi, d2 = i.V + this.Gt.Mi, f2 = i.B, v2 = i.I, p2 = this.Lt.Jt, m2 = i.P, b2 = n.xi(r2, p2), w2 = Math.ceil(n.Si(r2, p2)), g2 = m2 + c2 + d2, M2 = i.C + f2 + v2 + w2 + _2, x2 = Math.max(1, Math.floor(o3));
    let S2 = Math.round(g2 * o3);
    S2 % 2 != x2 % 2 && (S2 += 1);
    const k2 = u2 > 0 ? Math.max(1, Math.floor(u2 * a2)) : 0, y2 = Math.round(M2 * a2), C2 = Math.round(_2 * a2), T2 = null !== (e2 = this.Gt.ki) && void 0 !== e2 ? e2 : this.Gt.yi, P2 = Math.round(T2 * o3) - Math.floor(0.5 * o3), R2 = Math.floor(P2 + x2 / 2 - S2 / 2), D2 = R2 + S2, O2 = "right" === s, A2 = O2 ? l2.width - u2 : u2, V2 = O2 ? h2.width - k2 : k2;
    let B2, I2, z2;
    return O2 ? (B2 = V2 - y2, I2 = V2 - C2, z2 = A2 - _2 - f2 - u2) : (B2 = V2 + y2, I2 = V2 + C2, z2 = A2 + _2 + f2), { ii: O2, ti: { si: R2, oi: P2, fi: D2, ei: y2, ri: S2, ot: 2 * a2, hi: k2, ni: B2, li: V2, _i: I2, ui: x2, di: h2.width }, vi: { si: R2 / o3, fi: D2 / o3, pi: z2, mi: b2 } };
  }
};
var st = class {
  constructor(t) {
    this.Ci = { yi: 0, t: "#000", Mi: 0, gi: 0 }, this.Ti = { Jt: "", Tt: false, ai: true, bi: false, Bt: "", O: "#FFF", ci: false, wi: false }, this.Pi = { Jt: "", Tt: false, ai: false, bi: true, Bt: "", O: "#FFF", ci: true, wi: true }, this.bt = true, this.Ri = new (t || nt)(this.Ti, this.Ci), this.Di = new (t || nt)(this.Pi, this.Ci);
  }
  Jt() {
    return this.Oi(), this.Ti.Jt;
  }
  yi() {
    return this.Oi(), this.Ci.yi;
  }
  gt() {
    this.bt = true;
  }
  zt(t, i = false) {
    return Math.max(this.Ri.zt(t, i), this.Di.zt(t, i));
  }
  Ai() {
    return this.Ci.ki || 0;
  }
  Vi(t) {
    this.Ci.ki = t;
  }
  Bi() {
    return this.Oi(), this.Ti.Tt || this.Pi.Tt;
  }
  Ii() {
    return this.Oi(), this.Ti.Tt;
  }
  xt(t) {
    return this.Oi(), this.Ti.ai = this.Ti.ai && t.W().ticksVisible, this.Pi.ai = this.Pi.ai && t.W().ticksVisible, this.Ri.it(this.Ti, this.Ci), this.Di.it(this.Pi, this.Ci), this.Ri;
  }
  zi() {
    return this.Oi(), this.Ri.it(this.Ti, this.Ci), this.Di.it(this.Pi, this.Ci), this.Di;
  }
  Oi() {
    this.bt && (this.Ti.ai = true, this.Pi.ai = false, this.Ei(this.Ti, this.Pi, this.Ci));
  }
};
var et = class extends st {
  constructor(t, i, n) {
    super(), this.$t = t, this.Li = i, this.Ni = n;
  }
  Ei(t, i, n) {
    if (t.Tt = false, 2 === this.$t.W().mode)
      return;
    const s = this.$t.W().horzLine;
    if (!s.labelVisible)
      return;
    const e2 = this.Li.Pt();
    if (!this.$t.Tt() || this.Li.Fi() || null === e2)
      return;
    const r2 = P(s.labelBackgroundColor);
    n.t = r2.t, t.O = r2.i;
    const h2 = 2 / 12 * this.Li.P();
    n.gi = h2, n.Mi = h2;
    const l2 = this.Ni(this.Li);
    n.yi = l2.yi, t.Jt = this.Li.Wi(l2.ct, e2), t.Tt = true;
  }
};
var rt = /[1-9]/g;
var ht = class {
  constructor() {
    this.Lt = null;
  }
  it(t) {
    this.Lt = t;
  }
  K(t, i) {
    if (null === this.Lt || false === this.Lt.Tt || 0 === this.Lt.Jt.length)
      return;
    const n = t.useMediaCoordinateSpace(({ context: t2 }) => (t2.font = i.R, Math.round(i.ji.Si(t2, b(this.Lt).Jt, rt))));
    if (n <= 0)
      return;
    const s = i.Hi, e2 = n + 2 * s, r2 = e2 / 2, h2 = this.Lt.$i;
    let l2 = this.Lt.yi, a2 = Math.floor(l2 - r2) + 0.5;
    a2 < 0 ? (l2 += Math.abs(0 - a2), a2 = Math.floor(l2 - r2) + 0.5) : a2 + e2 > h2 && (l2 -= Math.abs(h2 - (a2 + e2)), a2 = Math.floor(l2 - r2) + 0.5);
    const o3 = a2 + e2, _2 = Math.ceil(0 + i.C + i.T + i.L + i.P + i.V);
    t.useBitmapCoordinateSpace(({ context: t2, horizontalPixelRatio: n2, verticalPixelRatio: s2 }) => {
      const e3 = b(this.Lt);
      t2.fillStyle = e3.t;
      const r3 = Math.round(a2 * n2), h3 = Math.round(0 * s2), l3 = Math.round(o3 * n2), u2 = Math.round(_2 * s2), c2 = Math.round(2 * n2);
      if (t2.beginPath(), t2.moveTo(r3, h3), t2.lineTo(r3, u2 - c2), t2.arcTo(r3, u2, r3 + c2, u2, c2), t2.lineTo(l3 - c2, u2), t2.arcTo(l3, u2, l3, u2 - c2, c2), t2.lineTo(l3, h3), t2.fill(), e3.ai) {
        const r4 = Math.round(e3.yi * n2), l4 = h3, a3 = Math.round((l4 + i.T) * s2);
        t2.fillStyle = e3.O;
        const o4 = Math.max(1, Math.floor(n2)), _3 = Math.floor(0.5 * n2);
        t2.fillRect(r4 - _3, l4, o4, a3 - l4);
      }
    }), t.useMediaCoordinateSpace(({ context: t2 }) => {
      const n2 = b(this.Lt), e3 = 0 + i.C + i.T + i.L + i.P / 2;
      t2.font = i.R, t2.textAlign = "left", t2.textBaseline = "middle", t2.fillStyle = n2.O;
      const r3 = i.ji.xi(t2, "Apr0");
      t2.translate(a2 + s, e3 + r3), t2.fillText(n2.Jt, 0, 0);
    });
  }
};
var lt = class {
  constructor(t, i, n) {
    this.bt = true, this.Ht = new ht(), this.jt = { Tt: false, t: "#4c525e", O: "white", Jt: "", $i: 0, yi: NaN, ai: true }, this.wt = t, this.Ui = i, this.Ni = n;
  }
  gt() {
    this.bt = true;
  }
  xt() {
    return this.bt && (this.St(), this.bt = false), this.Ht.it(this.jt), this.Ht;
  }
  St() {
    const t = this.jt;
    if (t.Tt = false, 2 === this.wt.W().mode)
      return;
    const i = this.wt.W().vertLine;
    if (!i.labelVisible)
      return;
    const n = this.Ui.yt();
    if (n.Fi())
      return;
    t.$i = n.$i();
    const s = this.Ni();
    if (null === s)
      return;
    t.yi = s.yi;
    const e2 = n.qi(this.wt.kt());
    t.Jt = n.Yi(b(e2)), t.Tt = true;
    const r2 = P(i.labelBackgroundColor);
    t.t = r2.t, t.O = r2.i, t.ai = n.W().ticksVisible;
  }
};
var at = class {
  constructor() {
    this.Xi = null, this.Ki = 0;
  }
  Zi() {
    return this.Ki;
  }
  Gi(t) {
    this.Ki = t;
  }
  At() {
    return this.Xi;
  }
  Ji(t) {
    this.Xi = t;
  }
  Qi(t) {
    return [];
  }
  tn() {
    return [];
  }
  Tt() {
    return true;
  }
};
var ot;
!function(t) {
  t[t.Normal = 0] = "Normal", t[t.Magnet = 1] = "Magnet", t[t.Hidden = 2] = "Hidden";
}(ot || (ot = {}));
var _t = class extends at {
  constructor(t, i) {
    super(), this.nn = null, this.sn = NaN, this.en = 0, this.rn = true, this.hn = /* @__PURE__ */ new Map(), this.ln = false, this.an = NaN, this.on = NaN, this._n = NaN, this.un = NaN, this.Ui = t, this.cn = i, this.dn = new q(t, this);
    this.fn = ((t2, i2) => (n2) => {
      const s = i2(), e2 = t2();
      if (n2 === b(this.nn).vn())
        return { ct: e2, yi: s };
      {
        const t3 = b(n2.Pt());
        return { ct: n2.pn(s, t3), yi: s };
      }
    })(() => this.sn, () => this.on);
    const n = ((t2, i2) => () => {
      const n2 = this.Ui.yt().mn(t2()), s = i2();
      return n2 && Number.isFinite(s) ? { ut: n2, yi: s } : null;
    })(() => this.en, () => this.Kt());
    this.bn = new lt(this, t, n), this.wn = new K(this);
  }
  W() {
    return this.cn;
  }
  gn(t, i) {
    this._n = t, this.un = i;
  }
  Mn() {
    this._n = NaN, this.un = NaN;
  }
  xn() {
    return this._n;
  }
  Sn() {
    return this.un;
  }
  kn(t, i, n) {
    this.ln || (this.ln = true), this.rn = true, this.yn(t, i, n);
  }
  kt() {
    return this.en;
  }
  Kt() {
    return this.an;
  }
  Zt() {
    return this.on;
  }
  Tt() {
    return this.rn;
  }
  Cn() {
    this.rn = false, this.Tn(), this.sn = NaN, this.an = NaN, this.on = NaN, this.nn = null, this.Mn();
  }
  Pn(t) {
    return null !== this.nn ? [this.wn, this.dn] : [];
  }
  Yt(t) {
    return t === this.nn && this.cn.horzLine.visible;
  }
  Xt() {
    return this.cn.vertLine.visible;
  }
  Rn(t, i) {
    this.rn && this.nn === t || this.hn.clear();
    const n = [];
    return this.nn === t && n.push(this.Dn(this.hn, i, this.fn)), n;
  }
  tn() {
    return this.rn ? [this.bn] : [];
  }
  Ut() {
    return this.nn;
  }
  On() {
    this.wn.gt(), this.hn.forEach((t) => t.gt()), this.bn.gt(), this.dn.gt();
  }
  An(t) {
    return t && !t.vn().Fi() ? t.vn() : null;
  }
  yn(t, i, n) {
    this.Vn(t, i, n) && this.On();
  }
  Vn(t, i, n) {
    const s = this.an, e2 = this.on, r2 = this.sn, h2 = this.en, l2 = this.nn, a2 = this.An(n);
    this.en = t, this.an = isNaN(t) ? NaN : this.Ui.yt().Et(t), this.nn = n;
    const o3 = null !== a2 ? a2.Pt() : null;
    return null !== a2 && null !== o3 ? (this.sn = i, this.on = a2.Ot(i, o3)) : (this.sn = NaN, this.on = NaN), s !== this.an || e2 !== this.on || h2 !== this.en || r2 !== this.sn || l2 !== this.nn;
  }
  Tn() {
    const t = this.Ui.Mt().map((t2) => t2.In().Bn()).filter(z), i = 0 === t.length ? null : Math.max(...t);
    this.en = null !== i ? i : NaN;
  }
  Dn(t, i, n) {
    let s = t.get(i);
    return void 0 === s && (s = new et(this, i, n), t.set(i, s)), s;
  }
};
function ut(t) {
  return "left" === t || "right" === t;
}
var ct = class {
  constructor(t) {
    this.zn = /* @__PURE__ */ new Map(), this.En = [], this.Ln = t;
  }
  Nn(t, i) {
    const n = function(t2, i2) {
      return void 0 === t2 ? i2 : { Fn: Math.max(t2.Fn, i2.Fn), Wn: t2.Wn || i2.Wn };
    }(this.zn.get(t), i);
    this.zn.set(t, n);
  }
  jn() {
    return this.Ln;
  }
  Hn(t) {
    const i = this.zn.get(t);
    return void 0 === i ? { Fn: this.Ln } : { Fn: Math.max(this.Ln, i.Fn), Wn: i.Wn };
  }
  $n() {
    this.Un(), this.En = [{ qn: 0 }];
  }
  Yn(t) {
    this.Un(), this.En = [{ qn: 1, Vt: t }];
  }
  Xn(t) {
    this.Kn(), this.En.push({ qn: 5, Vt: t });
  }
  Un() {
    this.Kn(), this.En.push({ qn: 6 });
  }
  Zn() {
    this.Un(), this.En = [{ qn: 4 }];
  }
  Gn(t) {
    this.Un(), this.En.push({ qn: 2, Vt: t });
  }
  Jn(t) {
    this.Un(), this.En.push({ qn: 3, Vt: t });
  }
  Qn() {
    return this.En;
  }
  ts(t) {
    for (const i of t.En)
      this.ns(i);
    this.Ln = Math.max(this.Ln, t.Ln), t.zn.forEach((t2, i) => {
      this.Nn(i, t2);
    });
  }
  static ss() {
    return new ct(2);
  }
  static es() {
    return new ct(3);
  }
  ns(t) {
    switch (t.qn) {
      case 0:
        this.$n();
        break;
      case 1:
        this.Yn(t.Vt);
        break;
      case 2:
        this.Gn(t.Vt);
        break;
      case 3:
        this.Jn(t.Vt);
        break;
      case 4:
        this.Zn();
        break;
      case 5:
        this.Xn(t.Vt);
        break;
      case 6:
        this.Kn();
    }
  }
  Kn() {
    const t = this.En.findIndex((t2) => 5 === t2.qn);
    -1 !== t && this.En.splice(t, 1);
  }
};
var dt = ".";
function ft(t, i) {
  if (!O(t))
    return "n/a";
  if (!A(i))
    throw new TypeError("invalid length");
  if (i < 0 || i > 16)
    throw new TypeError("invalid length");
  if (0 === i)
    return t.toString();
  return ("0000000000000000" + t.toString()).slice(-i);
}
var vt = class {
  constructor(t, i) {
    if (i || (i = 1), O(t) && A(t) || (t = 100), t < 0)
      throw new TypeError("invalid base");
    this.Li = t, this.rs = i, this.hs();
  }
  format(t) {
    const i = t < 0 ? "\u2212" : "";
    return t = Math.abs(t), i + this.ls(t);
  }
  hs() {
    if (this.os = 0, this.Li > 0 && this.rs > 0) {
      let t = this.Li;
      for (; t > 1; )
        t /= 10, this.os++;
    }
  }
  ls(t) {
    const i = this.Li / this.rs;
    let n = Math.floor(t), s = "";
    const e2 = void 0 !== this.os ? this.os : NaN;
    if (i > 1) {
      let r2 = +(Math.round(t * i) - n * i).toFixed(this.os);
      r2 >= i && (r2 -= i, n += 1), s = dt + ft(+r2.toFixed(this.os) * this.rs, e2);
    } else
      n = Math.round(n * i) / i, e2 > 0 && (s = dt + ft(0, e2));
    return n.toFixed(0) + s;
  }
};
var pt = class extends vt {
  constructor(t = 100) {
    super(t);
  }
  format(t) {
    return `${super.format(t)}%`;
  }
};
var mt = class {
  constructor(t) {
    this._s = t;
  }
  format(t) {
    let i = "";
    return t < 0 && (i = "-", t = -t), t < 995 ? i + this.us(t) : t < 999995 ? i + this.us(t / 1e3) + "K" : t < 999999995 ? (t = 1e3 * Math.round(t / 1e3), i + this.us(t / 1e6) + "M") : (t = 1e6 * Math.round(t / 1e6), i + this.us(t / 1e9) + "B");
  }
  us(t) {
    let i;
    const n = Math.pow(10, this._s);
    return i = (t = Math.round(t * n) / n) >= 1e-15 && t < 1 ? t.toFixed(this._s).replace(/\.?0+$/, "") : String(t), i.replace(/(\.[1-9]*)0+$/, (t2, i2) => i2);
  }
};
function bt(t, i, n, s, e2, r2, h2) {
  if (0 === i.length || s.from >= i.length || s.to <= 0)
    return;
  const { context: l2, horizontalPixelRatio: a2, verticalPixelRatio: o3 } = t, _2 = i[s.from];
  let u2 = r2(t, _2), c2 = _2;
  if (s.to - s.from < 2) {
    const i2 = e2 / 2;
    l2.beginPath();
    const n2 = { et: _2.et - i2, rt: _2.rt }, s2 = { et: _2.et + i2, rt: _2.rt };
    l2.moveTo(n2.et * a2, n2.rt * o3), l2.lineTo(s2.et * a2, s2.rt * o3), h2(t, u2, n2, s2);
  } else {
    const e3 = (i2, n2) => {
      h2(t, u2, c2, n2), l2.beginPath(), u2 = i2, c2 = n2;
    };
    let d2 = c2;
    l2.beginPath(), l2.moveTo(_2.et * a2, _2.rt * o3);
    for (let h3 = s.from + 1; h3 < s.to; ++h3) {
      d2 = i[h3];
      const s2 = r2(t, d2);
      switch (n) {
        case 0:
          l2.lineTo(d2.et * a2, d2.rt * o3);
          break;
        case 1:
          l2.lineTo(d2.et * a2, i[h3 - 1].rt * o3), s2 !== u2 && (e3(s2, d2), l2.lineTo(d2.et * a2, i[h3 - 1].rt * o3)), l2.lineTo(d2.et * a2, d2.rt * o3);
          break;
        case 2: {
          const [t2, n2] = xt(i, h3 - 1, h3);
          l2.bezierCurveTo(t2.et * a2, t2.rt * o3, n2.et * a2, n2.rt * o3, d2.et * a2, d2.rt * o3);
          break;
        }
      }
      1 !== n && s2 !== u2 && (e3(s2, d2), l2.moveTo(d2.et * a2, d2.rt * o3));
    }
    (c2 !== d2 || c2 === d2 && 1 === n) && h2(t, u2, c2, d2);
  }
}
var wt = 6;
function gt(t, i) {
  return { et: t.et - i.et, rt: t.rt - i.rt };
}
function Mt(t, i) {
  return { et: t.et / i, rt: t.rt / i };
}
function xt(t, i, n) {
  const s = Math.max(0, i - 1), e2 = Math.min(t.length - 1, n + 1);
  var r2, h2;
  return [(r2 = t[i], h2 = Mt(gt(t[n], t[s]), wt), { et: r2.et + h2.et, rt: r2.rt + h2.rt }), gt(t[n], Mt(gt(t[e2], t[i]), wt))];
}
function St(t, i, n, s, e2) {
  const { context: r2, horizontalPixelRatio: h2, verticalPixelRatio: l2 } = i;
  r2.lineTo(e2.et * h2, t * l2), r2.lineTo(s.et * h2, t * l2), r2.closePath(), r2.fillStyle = n, r2.fill();
}
var kt = class extends Y {
  constructor() {
    super(...arguments), this.tt = null;
  }
  it(t) {
    this.tt = t;
  }
  Z(t) {
    var i;
    if (null === this.tt)
      return;
    const { st: n, nt: s, cs: e2, ht: r2, Wt: h2, ds: l2 } = this.tt, a2 = null !== (i = this.tt.fs) && void 0 !== i ? i : this.tt.vs ? 0 : t.mediaSize.height;
    if (null === s)
      return;
    const o3 = t.context;
    o3.lineCap = "butt", o3.lineJoin = "round", o3.lineWidth = r2, f(o3, h2), o3.lineWidth = 1, bt(t, n, l2, s, e2, this.ps.bind(this), St.bind(null, a2));
  }
};
function yt(t, i, n) {
  return Math.min(Math.max(t, i), n);
}
function Ct(t, i, n) {
  return i - t <= n;
}
function Tt(t) {
  const i = Math.ceil(t);
  return i % 2 == 0 ? i - 1 : i;
}
var Pt = class {
  bs(t, i) {
    const n = this.ws, { gs: s, Ms: e2, xs: r2, Ss: h2, ks: l2, fs: a2 } = i;
    if (void 0 === this.ys || void 0 === n || n.gs !== s || n.Ms !== e2 || n.xs !== r2 || n.Ss !== h2 || n.fs !== a2 || n.ks !== l2) {
      const n2 = t.context.createLinearGradient(0, 0, 0, l2);
      if (n2.addColorStop(0, s), null != a2) {
        const i2 = yt(a2 * t.verticalPixelRatio / l2, 0, 1);
        n2.addColorStop(i2, e2), n2.addColorStop(i2, r2);
      }
      n2.addColorStop(1, h2), this.ys = n2, this.ws = i;
    }
    return this.ys;
  }
};
var Rt = class extends kt {
  constructor() {
    super(...arguments), this.Cs = new Pt();
  }
  ps(t, i) {
    return this.Cs.bs(t, { gs: i.Ts, Ms: "", xs: "", Ss: i.Ps, ks: t.bitmapSize.height });
  }
};
function Dt(t, i) {
  const n = t.context;
  n.strokeStyle = i, n.stroke();
}
var Ot = class extends Y {
  constructor() {
    super(...arguments), this.tt = null;
  }
  it(t) {
    this.tt = t;
  }
  Z(t) {
    if (null === this.tt)
      return;
    const { st: i, nt: n, cs: s, ds: e2, ht: r2, Wt: h2, Rs: l2 } = this.tt;
    if (null === n)
      return;
    const a2 = t.context;
    a2.lineCap = "butt", a2.lineWidth = r2 * t.verticalPixelRatio, f(a2, h2), a2.lineJoin = "round";
    const o3 = this.Ds.bind(this);
    void 0 !== e2 && bt(t, i, e2, n, s, o3, Dt), l2 && function(t2, i2, n2, s2, e3) {
      const { horizontalPixelRatio: r3, verticalPixelRatio: h3, context: l3 } = t2;
      let a3 = null;
      const o4 = Math.max(1, Math.floor(r3)) % 2 / 2, _2 = n2 * h3 + o4;
      for (let n3 = s2.to - 1; n3 >= s2.from; --n3) {
        const s3 = i2[n3];
        if (s3) {
          const i3 = e3(t2, s3);
          i3 !== a3 && (l3.beginPath(), null !== a3 && l3.fill(), l3.fillStyle = i3, a3 = i3);
          const n4 = Math.round(s3.et * r3) + o4, u2 = s3.rt * h3;
          l3.moveTo(n4, u2), l3.arc(n4, u2, _2, 0, 2 * Math.PI);
        }
      }
      l3.fill();
    }(t, i, l2, n, o3);
  }
};
var At = class extends Ot {
  Ds(t, i) {
    return i._t;
  }
};
function Vt(t, i, n, s, e2 = 0, r2 = i.length) {
  let h2 = r2 - e2;
  for (; 0 < h2; ) {
    const r3 = h2 >> 1, l2 = e2 + r3;
    s(i[l2], n) === t ? (e2 = l2 + 1, h2 -= r3 + 1) : h2 = r3;
  }
  return e2;
}
var Bt = Vt.bind(null, true);
var It = Vt.bind(null, false);
function zt(t, i) {
  return t.ut < i;
}
function Et(t, i) {
  return i < t.ut;
}
function Lt(t, i, n) {
  const s = i.Os(), e2 = i.di(), r2 = Bt(t, s, zt), h2 = It(t, e2, Et);
  if (!n)
    return { from: r2, to: h2 };
  let l2 = r2, a2 = h2;
  return r2 > 0 && r2 < t.length && t[r2].ut >= s && (l2 = r2 - 1), h2 > 0 && h2 < t.length && t[h2 - 1].ut <= e2 && (a2 = h2 + 1), { from: l2, to: a2 };
}
var Nt = class {
  constructor(t, i, n) {
    this.As = true, this.Vs = true, this.Bs = true, this.Is = [], this.zs = null, this.Es = t, this.Ls = i, this.Ns = n;
  }
  gt(t) {
    this.As = true, "data" === t && (this.Vs = true), "options" === t && (this.Bs = true);
  }
  xt() {
    return this.Es.Tt() ? (this.Fs(), null === this.zs ? null : this.Ws) : null;
  }
  js() {
    this.Is = this.Is.map((t) => Object.assign(Object.assign({}, t), this.Es.$s().Hs(t.ut)));
  }
  Us() {
    this.zs = null;
  }
  Fs() {
    this.Vs && (this.qs(), this.Vs = false), this.Bs && (this.js(), this.Bs = false), this.As && (this.Ys(), this.As = false);
  }
  Ys() {
    const t = this.Es.At(), i = this.Ls.yt();
    if (this.Us(), i.Fi() || t.Fi())
      return;
    const n = i.Xs();
    if (null === n)
      return;
    if (0 === this.Es.In().Ks())
      return;
    const s = this.Es.Pt();
    null !== s && (this.zs = Lt(this.Is, n, this.Ns), this.Zs(t, i, s.Vt), this.Gs());
  }
};
var Ft = class extends Nt {
  constructor(t, i) {
    super(t, i, true);
  }
  Zs(t, i, n) {
    i.Js(this.Is, E(this.zs)), t.Qs(this.Is, n, E(this.zs));
  }
  te(t, i) {
    return { ut: t, ct: i, et: NaN, rt: NaN };
  }
  qs() {
    const t = this.Es.$s();
    this.Is = this.Es.In().ie().map((i) => {
      const n = i.Vt[3];
      return this.ne(i.se, n, t);
    });
  }
};
var Wt = class extends Ft {
  constructor(t, i) {
    super(t, i), this.Ws = new W(), this.ee = new Rt(), this.re = new At(), this.Ws.X([this.ee, this.re]);
  }
  ne(t, i, n) {
    return Object.assign(Object.assign({}, this.te(t, i)), n.Hs(t));
  }
  Gs() {
    const t = this.Es.W();
    this.ee.it({ ds: t.lineType, st: this.Is, Wt: t.lineStyle, ht: t.lineWidth, fs: null, vs: t.invertFilledArea, nt: this.zs, cs: this.Ls.yt().he() }), this.re.it({ ds: t.lineVisible ? t.lineType : void 0, st: this.Is, Wt: t.lineStyle, ht: t.lineWidth, nt: this.zs, cs: this.Ls.yt().he(), Rs: t.pointMarkersVisible ? t.pointMarkersRadius || t.lineWidth / 2 + 2 : void 0 });
  }
};
var jt = class extends Y {
  constructor() {
    super(...arguments), this.Lt = null, this.le = 0, this.ae = 0;
  }
  it(t) {
    this.Lt = t;
  }
  Z({ context: t, horizontalPixelRatio: i, verticalPixelRatio: n }) {
    if (null === this.Lt || 0 === this.Lt.In.length || null === this.Lt.nt)
      return;
    if (this.le = this.oe(i), this.le >= 2) {
      Math.max(1, Math.floor(i)) % 2 != this.le % 2 && this.le--;
    }
    this.ae = this.Lt._e ? Math.min(this.le, Math.floor(i)) : this.le;
    let s = null;
    const e2 = this.ae <= this.le && this.Lt.he >= Math.floor(1.5 * i);
    for (let r2 = this.Lt.nt.from; r2 < this.Lt.nt.to; ++r2) {
      const h2 = this.Lt.In[r2];
      s !== h2.ue && (t.fillStyle = h2.ue, s = h2.ue);
      const l2 = Math.floor(0.5 * this.ae), a2 = Math.round(h2.et * i), o3 = a2 - l2, _2 = this.ae, u2 = o3 + _2 - 1, c2 = Math.min(h2.ce, h2.de), d2 = Math.max(h2.ce, h2.de), f2 = Math.round(c2 * n) - l2, v2 = Math.round(d2 * n) + l2, p2 = Math.max(v2 - f2, this.ae);
      t.fillRect(o3, f2, _2, p2);
      const m2 = Math.ceil(1.5 * this.le);
      if (e2) {
        if (this.Lt.fe) {
          const i3 = a2 - m2;
          let s3 = Math.max(f2, Math.round(h2.ve * n) - l2), e4 = s3 + _2 - 1;
          e4 > f2 + p2 - 1 && (e4 = f2 + p2 - 1, s3 = e4 - _2 + 1), t.fillRect(i3, s3, o3 - i3, e4 - s3 + 1);
        }
        const i2 = a2 + m2;
        let s2 = Math.max(f2, Math.round(h2.pe * n) - l2), e3 = s2 + _2 - 1;
        e3 > f2 + p2 - 1 && (e3 = f2 + p2 - 1, s2 = e3 - _2 + 1), t.fillRect(u2 + 1, s2, i2 - u2, e3 - s2 + 1);
      }
    }
  }
  oe(t) {
    const i = Math.floor(t);
    return Math.max(i, Math.floor(function(t2, i2) {
      return Math.floor(0.3 * t2 * i2);
    }(b(this.Lt).he, t)));
  }
};
var Ht = class extends Nt {
  constructor(t, i) {
    super(t, i, false);
  }
  Zs(t, i, n) {
    i.Js(this.Is, E(this.zs)), t.me(this.Is, n, E(this.zs));
  }
  be(t, i, n) {
    return { ut: t, we: i.Vt[0], ge: i.Vt[1], Me: i.Vt[2], xe: i.Vt[3], et: NaN, ve: NaN, ce: NaN, de: NaN, pe: NaN };
  }
  qs() {
    const t = this.Es.$s();
    this.Is = this.Es.In().ie().map((i) => this.ne(i.se, i, t));
  }
};
var $t = class extends Ht {
  constructor() {
    super(...arguments), this.Ws = new jt();
  }
  ne(t, i, n) {
    return Object.assign(Object.assign({}, this.be(t, i, n)), n.Hs(t));
  }
  Gs() {
    const t = this.Es.W();
    this.Ws.it({ In: this.Is, he: this.Ls.yt().he(), fe: t.openVisible, _e: t.thinBars, nt: this.zs });
  }
};
var Ut = class extends kt {
  constructor() {
    super(...arguments), this.Cs = new Pt();
  }
  ps(t, i) {
    const n = this.tt;
    return this.Cs.bs(t, { gs: i.Se, Ms: i.ke, xs: i.ye, Ss: i.Ce, ks: t.bitmapSize.height, fs: n.fs });
  }
};
var qt = class extends Ot {
  constructor() {
    super(...arguments), this.Te = new Pt();
  }
  Ds(t, i) {
    const n = this.tt;
    return this.Te.bs(t, { gs: i.Pe, Ms: i.Pe, xs: i.Re, Ss: i.Re, ks: t.bitmapSize.height, fs: n.fs });
  }
};
var Yt = class extends Ft {
  constructor(t, i) {
    super(t, i), this.Ws = new W(), this.De = new Ut(), this.Oe = new qt(), this.Ws.X([this.De, this.Oe]);
  }
  ne(t, i, n) {
    return Object.assign(Object.assign({}, this.te(t, i)), n.Hs(t));
  }
  Gs() {
    const t = this.Es.Pt();
    if (null === t)
      return;
    const i = this.Es.W(), n = this.Es.At().Ot(i.baseValue.price, t.Vt), s = this.Ls.yt().he();
    this.De.it({ st: this.Is, ht: i.lineWidth, Wt: i.lineStyle, ds: i.lineType, fs: n, vs: false, nt: this.zs, cs: s }), this.Oe.it({ st: this.Is, ht: i.lineWidth, Wt: i.lineStyle, ds: i.lineVisible ? i.lineType : void 0, Rs: i.pointMarkersVisible ? i.pointMarkersRadius || i.lineWidth / 2 + 2 : void 0, fs: n, nt: this.zs, cs: s });
  }
};
var Xt = class extends Y {
  constructor() {
    super(...arguments), this.Lt = null, this.le = 0;
  }
  it(t) {
    this.Lt = t;
  }
  Z(t) {
    if (null === this.Lt || 0 === this.Lt.In.length || null === this.Lt.nt)
      return;
    const { horizontalPixelRatio: i } = t;
    if (this.le = function(t2, i2) {
      if (t2 >= 2.5 && t2 <= 4)
        return Math.floor(3 * i2);
      const n2 = 1 - 0.2 * Math.atan(Math.max(4, t2) - 4) / (0.5 * Math.PI), s2 = Math.floor(t2 * n2 * i2), e2 = Math.floor(t2 * i2), r2 = Math.min(s2, e2);
      return Math.max(Math.floor(i2), r2);
    }(this.Lt.he, i), this.le >= 2) {
      Math.floor(i) % 2 != this.le % 2 && this.le--;
    }
    const n = this.Lt.In;
    this.Lt.Ae && this.Ve(t, n, this.Lt.nt), this.Lt.ci && this.Be(t, n, this.Lt.nt);
    const s = this.Ie(i);
    (!this.Lt.ci || this.le > 2 * s) && this.ze(t, n, this.Lt.nt);
  }
  Ve(t, i, n) {
    if (null === this.Lt)
      return;
    const { context: s, horizontalPixelRatio: e2, verticalPixelRatio: r2 } = t;
    let h2 = "", l2 = Math.min(Math.floor(e2), Math.floor(this.Lt.he * e2));
    l2 = Math.max(Math.floor(e2), Math.min(l2, this.le));
    const a2 = Math.floor(0.5 * l2);
    let o3 = null;
    for (let t2 = n.from; t2 < n.to; t2++) {
      const n2 = i[t2];
      n2.Ee !== h2 && (s.fillStyle = n2.Ee, h2 = n2.Ee);
      const _2 = Math.round(Math.min(n2.ve, n2.pe) * r2), u2 = Math.round(Math.max(n2.ve, n2.pe) * r2), c2 = Math.round(n2.ce * r2), d2 = Math.round(n2.de * r2);
      let f2 = Math.round(e2 * n2.et) - a2;
      const v2 = f2 + l2 - 1;
      null !== o3 && (f2 = Math.max(o3 + 1, f2), f2 = Math.min(f2, v2));
      const p2 = v2 - f2 + 1;
      s.fillRect(f2, c2, p2, _2 - c2), s.fillRect(f2, u2 + 1, p2, d2 - u2), o3 = v2;
    }
  }
  Ie(t) {
    let i = Math.floor(1 * t);
    this.le <= 2 * i && (i = Math.floor(0.5 * (this.le - 1)));
    const n = Math.max(Math.floor(t), i);
    return this.le <= 2 * n ? Math.max(Math.floor(t), Math.floor(1 * t)) : n;
  }
  Be(t, i, n) {
    if (null === this.Lt)
      return;
    const { context: s, horizontalPixelRatio: e2, verticalPixelRatio: r2 } = t;
    let h2 = "";
    const l2 = this.Ie(e2);
    let a2 = null;
    for (let t2 = n.from; t2 < n.to; t2++) {
      const n2 = i[t2];
      n2.Le !== h2 && (s.fillStyle = n2.Le, h2 = n2.Le);
      let o3 = Math.round(n2.et * e2) - Math.floor(0.5 * this.le);
      const _2 = o3 + this.le - 1, u2 = Math.round(Math.min(n2.ve, n2.pe) * r2), c2 = Math.round(Math.max(n2.ve, n2.pe) * r2);
      if (null !== a2 && (o3 = Math.max(a2 + 1, o3), o3 = Math.min(o3, _2)), this.Lt.he * e2 > 2 * l2)
        Z(s, o3, u2, _2 - o3 + 1, c2 - u2 + 1, l2);
      else {
        const t3 = _2 - o3 + 1;
        s.fillRect(o3, u2, t3, c2 - u2 + 1);
      }
      a2 = _2;
    }
  }
  ze(t, i, n) {
    if (null === this.Lt)
      return;
    const { context: s, horizontalPixelRatio: e2, verticalPixelRatio: r2 } = t;
    let h2 = "";
    const l2 = this.Ie(e2);
    for (let t2 = n.from; t2 < n.to; t2++) {
      const n2 = i[t2];
      let a2 = Math.round(Math.min(n2.ve, n2.pe) * r2), o3 = Math.round(Math.max(n2.ve, n2.pe) * r2), _2 = Math.round(n2.et * e2) - Math.floor(0.5 * this.le), u2 = _2 + this.le - 1;
      if (n2.ue !== h2) {
        const t3 = n2.ue;
        s.fillStyle = t3, h2 = t3;
      }
      this.Lt.ci && (_2 += l2, a2 += l2, u2 -= l2, o3 -= l2), a2 > o3 || s.fillRect(_2, a2, u2 - _2 + 1, o3 - a2 + 1);
    }
  }
};
var Kt = class extends Ht {
  constructor() {
    super(...arguments), this.Ws = new Xt();
  }
  ne(t, i, n) {
    return Object.assign(Object.assign({}, this.be(t, i, n)), n.Hs(t));
  }
  Gs() {
    const t = this.Es.W();
    this.Ws.it({ In: this.Is, he: this.Ls.yt().he(), Ae: t.wickVisible, ci: t.borderVisible, nt: this.zs });
  }
};
var Zt = class {
  constructor(t, i) {
    this.Ne = t, this.Li = i;
  }
  K(t, i, n) {
    this.Ne.draw(t, this.Li, i, n);
  }
};
var Gt = class extends Nt {
  constructor(t, i, n) {
    super(t, i, false), this.wn = n, this.Ws = new Zt(this.wn.renderer(), (i2) => {
      const n2 = t.Pt();
      return null === n2 ? null : t.At().Ot(i2, n2.Vt);
    });
  }
  Fe(t) {
    return this.wn.priceValueBuilder(t);
  }
  We(t) {
    return this.wn.isWhitespace(t);
  }
  qs() {
    const t = this.Es.$s();
    this.Is = this.Es.In().ie().map((i) => Object.assign(Object.assign({ ut: i.se, et: NaN }, t.Hs(i.se)), { je: i.He }));
  }
  Zs(t, i) {
    i.Js(this.Is, E(this.zs));
  }
  Gs() {
    this.wn.update({ bars: this.Is.map(Jt), barSpacing: this.Ls.yt().he(), visibleRange: this.zs }, this.Es.W());
  }
};
function Jt(t) {
  return { x: t.et, time: t.ut, originalData: t.je, barColor: t.ue };
}
var Qt = class extends Y {
  constructor() {
    super(...arguments), this.Lt = null, this.$e = [];
  }
  it(t) {
    this.Lt = t, this.$e = [];
  }
  Z({ context: t, horizontalPixelRatio: i, verticalPixelRatio: n }) {
    if (null === this.Lt || 0 === this.Lt.st.length || null === this.Lt.nt)
      return;
    this.$e.length || this.Ue(i);
    const s = Math.max(1, Math.floor(n)), e2 = Math.round(this.Lt.qe * n) - Math.floor(s / 2), r2 = e2 + s;
    for (let i2 = this.Lt.nt.from; i2 < this.Lt.nt.to; i2++) {
      const h2 = this.Lt.st[i2], l2 = this.$e[i2 - this.Lt.nt.from], a2 = Math.round(h2.rt * n);
      let o3, _2;
      t.fillStyle = h2.ue, a2 <= e2 ? (o3 = a2, _2 = r2) : (o3 = e2, _2 = a2 - Math.floor(s / 2) + s), t.fillRect(l2.Os, o3, l2.di - l2.Os + 1, _2 - o3);
    }
  }
  Ue(t) {
    if (null === this.Lt || 0 === this.Lt.st.length || null === this.Lt.nt)
      return void (this.$e = []);
    const i = Math.ceil(this.Lt.he * t) <= 1 ? 0 : Math.max(1, Math.floor(t)), n = Math.round(this.Lt.he * t) - i;
    this.$e = new Array(this.Lt.nt.to - this.Lt.nt.from);
    for (let i2 = this.Lt.nt.from; i2 < this.Lt.nt.to; i2++) {
      const s2 = this.Lt.st[i2], e2 = Math.round(s2.et * t);
      let r2, h2;
      if (n % 2) {
        const t2 = (n - 1) / 2;
        r2 = e2 - t2, h2 = e2 + t2;
      } else {
        const t2 = n / 2;
        r2 = e2 - t2, h2 = e2 + t2 - 1;
      }
      this.$e[i2 - this.Lt.nt.from] = { Os: r2, di: h2, Ye: e2, Xe: s2.et * t, ut: s2.ut };
    }
    for (let t2 = this.Lt.nt.from + 1; t2 < this.Lt.nt.to; t2++) {
      const n2 = this.$e[t2 - this.Lt.nt.from], s2 = this.$e[t2 - this.Lt.nt.from - 1];
      n2.ut === s2.ut + 1 && (n2.Os - s2.di !== i + 1 && (s2.Ye > s2.Xe ? s2.di = n2.Os - i - 1 : n2.Os = s2.di + i + 1));
    }
    let s = Math.ceil(this.Lt.he * t);
    for (let t2 = this.Lt.nt.from; t2 < this.Lt.nt.to; t2++) {
      const i2 = this.$e[t2 - this.Lt.nt.from];
      i2.di < i2.Os && (i2.di = i2.Os);
      const n2 = i2.di - i2.Os + 1;
      s = Math.min(n2, s);
    }
    if (i > 0 && s < 4)
      for (let t2 = this.Lt.nt.from; t2 < this.Lt.nt.to; t2++) {
        const i2 = this.$e[t2 - this.Lt.nt.from];
        i2.di - i2.Os + 1 > s && (i2.Ye > i2.Xe ? i2.di -= 1 : i2.Os += 1);
      }
  }
};
var ti = class extends Ft {
  constructor() {
    super(...arguments), this.Ws = new Qt();
  }
  ne(t, i, n) {
    return Object.assign(Object.assign({}, this.te(t, i)), n.Hs(t));
  }
  Gs() {
    const t = { st: this.Is, he: this.Ls.yt().he(), nt: this.zs, qe: this.Es.At().Ot(this.Es.W().base, b(this.Es.Pt()).Vt) };
    this.Ws.it(t);
  }
};
var ii = class extends Ft {
  constructor() {
    super(...arguments), this.Ws = new At();
  }
  ne(t, i, n) {
    return Object.assign(Object.assign({}, this.te(t, i)), n.Hs(t));
  }
  Gs() {
    const t = this.Es.W(), i = { st: this.Is, Wt: t.lineStyle, ds: t.lineVisible ? t.lineType : void 0, ht: t.lineWidth, Rs: t.pointMarkersVisible ? t.pointMarkersRadius || t.lineWidth / 2 + 2 : void 0, nt: this.zs, cs: this.Ls.yt().he() };
    this.Ws.it(i);
  }
};
var ni = /[2-9]/g;
var si = class {
  constructor(t = 50) {
    this.Ke = 0, this.Ze = 1, this.Ge = 1, this.Je = {}, this.Qe = /* @__PURE__ */ new Map(), this.tr = t;
  }
  ir() {
    this.Ke = 0, this.Qe.clear(), this.Ze = 1, this.Ge = 1, this.Je = {};
  }
  Si(t, i, n) {
    return this.nr(t, i, n).width;
  }
  xi(t, i, n) {
    const s = this.nr(t, i, n);
    return ((s.actualBoundingBoxAscent || 0) - (s.actualBoundingBoxDescent || 0)) / 2;
  }
  nr(t, i, n) {
    const s = n || ni, e2 = String(i).replace(s, "0");
    if (this.Qe.has(e2))
      return m(this.Qe.get(e2)).sr;
    if (this.Ke === this.tr) {
      const t2 = this.Je[this.Ge];
      delete this.Je[this.Ge], this.Qe.delete(t2), this.Ge++, this.Ke--;
    }
    t.save(), t.textBaseline = "middle";
    const r2 = t.measureText(e2);
    return t.restore(), 0 === r2.width && i.length || (this.Qe.set(e2, { sr: r2, er: this.Ze }), this.Je[this.Ze] = e2, this.Ke++, this.Ze++), r2;
  }
};
var ei = class {
  constructor(t) {
    this.rr = null, this.k = null, this.hr = "right", this.lr = t;
  }
  ar(t, i, n) {
    this.rr = t, this.k = i, this.hr = n;
  }
  K(t) {
    null !== this.k && null !== this.rr && this.rr.K(t, this.k, this.lr, this.hr);
  }
};
var ri = class {
  constructor(t, i, n) {
    this._r = t, this.lr = new si(50), this.ur = i, this.F = n, this.j = -1, this.Ht = new ei(this.lr);
  }
  xt() {
    const t = this.F.cr(this.ur);
    if (null === t)
      return null;
    const i = t.dr(this.ur) ? t.vr() : this.ur.At();
    if (null === i)
      return null;
    const n = t.pr(i);
    if ("overlay" === n)
      return null;
    const s = this.F.mr();
    return s.P !== this.j && (this.j = s.P, this.lr.ir()), this.Ht.ar(this._r.zi(), s, n), this.Ht;
  }
};
var hi = class extends Y {
  constructor() {
    super(...arguments), this.Lt = null;
  }
  it(t) {
    this.Lt = t;
  }
  br(t, i) {
    var n;
    if (!(null === (n = this.Lt) || void 0 === n ? void 0 : n.Tt))
      return null;
    const { rt: s, ht: e2, wr: r2 } = this.Lt;
    return i >= s - e2 - 7 && i <= s + e2 + 7 ? { gr: this.Lt, wr: r2 } : null;
  }
  Z({ context: t, bitmapSize: i, horizontalPixelRatio: n, verticalPixelRatio: s }) {
    if (null === this.Lt)
      return;
    if (false === this.Lt.Tt)
      return;
    const e2 = Math.round(this.Lt.rt * s);
    e2 < 0 || e2 > i.height || (t.lineCap = "butt", t.strokeStyle = this.Lt.O, t.lineWidth = Math.floor(this.Lt.ht * n), f(t, this.Lt.Wt), v(t, e2, 0, i.width));
  }
};
var li = class {
  constructor(t) {
    this.Mr = { rt: 0, O: "rgba(0, 0, 0, 0)", ht: 1, Wt: 0, Tt: false }, this.Sr = new hi(), this.bt = true, this.Es = t, this.Ls = t.qt(), this.Sr.it(this.Mr);
  }
  gt() {
    this.bt = true;
  }
  xt() {
    return this.Es.Tt() ? (this.bt && (this.kr(), this.bt = false), this.Sr) : null;
  }
};
var ai = class extends li {
  constructor(t) {
    super(t);
  }
  kr() {
    this.Mr.Tt = false;
    const t = this.Es.At(), i = t.yr().yr;
    if (2 !== i && 3 !== i)
      return;
    const n = this.Es.W();
    if (!n.baseLineVisible || !this.Es.Tt())
      return;
    const s = this.Es.Pt();
    null !== s && (this.Mr.Tt = true, this.Mr.rt = t.Ot(s.Vt, s.Vt), this.Mr.O = n.baseLineColor, this.Mr.ht = n.baseLineWidth, this.Mr.Wt = n.baseLineStyle);
  }
};
var oi = class extends Y {
  constructor() {
    super(...arguments), this.Lt = null;
  }
  it(t) {
    this.Lt = t;
  }
  He() {
    return this.Lt;
  }
  Z({ context: t, horizontalPixelRatio: i, verticalPixelRatio: n }) {
    const s = this.Lt;
    if (null === s)
      return;
    const e2 = Math.max(1, Math.floor(i)), r2 = e2 % 2 / 2, h2 = Math.round(s.Xe.x * i) + r2, l2 = s.Xe.y * n;
    t.fillStyle = s.Cr, t.beginPath();
    const a2 = Math.max(2, 1.5 * s.Tr) * i;
    t.arc(h2, l2, a2, 0, 2 * Math.PI, false), t.fill(), t.fillStyle = s.Pr, t.beginPath(), t.arc(h2, l2, s.ot * i, 0, 2 * Math.PI, false), t.fill(), t.lineWidth = e2, t.strokeStyle = s.Rr, t.beginPath(), t.arc(h2, l2, s.ot * i + e2 / 2, 0, 2 * Math.PI, false), t.stroke();
  }
};
var _i = [{ Dr: 0, Or: 0.25, Ar: 4, Vr: 10, Br: 0.25, Ir: 0, zr: 0.4, Er: 0.8 }, { Dr: 0.25, Or: 0.525, Ar: 10, Vr: 14, Br: 0, Ir: 0, zr: 0.8, Er: 0 }, { Dr: 0.525, Or: 1, Ar: 14, Vr: 14, Br: 0, Ir: 0, zr: 0, Er: 0 }];
function ui(t, i, n, s) {
  return function(t2, i2) {
    if ("transparent" === t2)
      return t2;
    const n2 = T(t2), s2 = n2[3];
    return `rgba(${n2[0]}, ${n2[1]}, ${n2[2]}, ${i2 * s2})`;
  }(t, n + (s - n) * i);
}
function ci(t, i) {
  const n = t % 2600 / 2600;
  let s;
  for (const t2 of _i)
    if (n >= t2.Dr && n <= t2.Or) {
      s = t2;
      break;
    }
  p(void 0 !== s, "Last price animation internal logic error");
  const e2 = (n - s.Dr) / (s.Or - s.Dr);
  return { Pr: ui(i, e2, s.Br, s.Ir), Rr: ui(i, e2, s.zr, s.Er), ot: (r2 = e2, h2 = s.Ar, l2 = s.Vr, h2 + (l2 - h2) * r2) };
  var r2, h2, l2;
}
var di = class {
  constructor(t) {
    this.Ht = new oi(), this.bt = true, this.Lr = true, this.Nr = performance.now(), this.Fr = this.Nr - 1, this.Wr = t;
  }
  jr() {
    this.Fr = this.Nr - 1, this.gt();
  }
  Hr() {
    if (this.gt(), 2 === this.Wr.W().lastPriceAnimation) {
      const t = performance.now(), i = this.Fr - t;
      if (i > 0)
        return void (i < 650 && (this.Fr += 2600));
      this.Nr = t, this.Fr = t + 2600;
    }
  }
  gt() {
    this.bt = true;
  }
  $r() {
    this.Lr = true;
  }
  Tt() {
    return 0 !== this.Wr.W().lastPriceAnimation;
  }
  Ur() {
    switch (this.Wr.W().lastPriceAnimation) {
      case 0:
        return false;
      case 1:
        return true;
      case 2:
        return performance.now() <= this.Fr;
    }
  }
  xt() {
    return this.bt ? (this.St(), this.bt = false, this.Lr = false) : this.Lr && (this.qr(), this.Lr = false), this.Ht;
  }
  St() {
    this.Ht.it(null);
    const t = this.Wr.qt().yt(), i = t.Xs(), n = this.Wr.Pt();
    if (null === i || null === n)
      return;
    const s = this.Wr.Yr(true);
    if (s.Xr || !i.Kr(s.se))
      return;
    const e2 = { x: t.Et(s.se), y: this.Wr.At().Ot(s.ct, n.Vt) }, r2 = s.O, h2 = this.Wr.W().lineWidth, l2 = ci(this.Zr(), r2);
    this.Ht.it({ Cr: r2, Tr: h2, Pr: l2.Pr, Rr: l2.Rr, ot: l2.ot, Xe: e2 });
  }
  qr() {
    const t = this.Ht.He();
    if (null !== t) {
      const i = ci(this.Zr(), t.Cr);
      t.Pr = i.Pr, t.Rr = i.Rr, t.ot = i.ot;
    }
  }
  Zr() {
    return this.Ur() ? performance.now() - this.Nr : 2599;
  }
};
function fi(t, i) {
  return Tt(Math.min(Math.max(t, 12), 30) * i);
}
function vi(t, i) {
  switch (t) {
    case "arrowDown":
    case "arrowUp":
      return fi(i, 1);
    case "circle":
      return fi(i, 0.8);
    case "square":
      return fi(i, 0.7);
  }
  return fi(i, 1);
}
function pi(t) {
  return function(t2) {
    const i = Math.ceil(t2);
    return i % 2 != 0 ? i - 1 : i;
  }(fi(t, 1));
}
function mi(t) {
  return Math.max(fi(t, 0.1), 3);
}
function bi(t, i, n, s, e2) {
  const r2 = vi("square", n), h2 = (r2 - 1) / 2, l2 = t - h2, a2 = i - h2;
  return s >= l2 && s <= l2 + r2 && e2 >= a2 && e2 <= a2 + r2;
}
function wi(t, i, n, s, e2) {
  const r2 = (vi("arrowUp", e2) - 1) / 2, h2 = (Tt(e2 / 2) - 1) / 2;
  i.beginPath(), t ? (i.moveTo(n - r2, s), i.lineTo(n, s - r2), i.lineTo(n + r2, s), i.lineTo(n + h2, s), i.lineTo(n + h2, s + r2), i.lineTo(n - h2, s + r2), i.lineTo(n - h2, s)) : (i.moveTo(n - r2, s), i.lineTo(n, s + r2), i.lineTo(n + r2, s), i.lineTo(n + h2, s), i.lineTo(n + h2, s - r2), i.lineTo(n - h2, s - r2), i.lineTo(n - h2, s)), i.fill();
}
function gi(t, i, n, s, e2, r2) {
  return bi(i, n, s, e2, r2);
}
function Mi(t, i, n, s, e2, r2) {
  const h2 = (vi("arrowUp", e2) - 1) / 2;
  if (i.beginPath(), t) {
    !function(t2, i2, n2, s2, e3) {
      const r3 = i2, h3 = n2;
      t2.save(), t2.strokeStyle = "rgba(0,0,0,0)", t2.miterLimit = 4, t2.font = "15px ''", t2.fillStyle = "rgba(0,0,0,0)", t2.font = "   15px ''", t2.save(), t2.fillStyle = e3, t2.font = "   15px ''", t2.beginPath(), t2.moveTo(16.2463 + r3, 23.2271 + h3), t2.bezierCurveTo(20.778 + r3, 21.5122 + h3, 24 + r3, 17.1324 + h3, 24 + r3, 12 + h3), t2.bezierCurveTo(24 + r3, 5.37258 + h3, 18.6274 + r3, 0 + h3, 12 + r3, 0 + h3), t2.bezierCurveTo(5.37258 + r3, 0 + h3, 0 + r3, 5.37258 + h3, 0 + r3, 12 + h3), t2.bezierCurveTo(0 + r3, 17.4569 + h3, 3.64241 + r3, 22.0631 + h3, 8.6286 + r3, 23.5199 + h3), t2.lineTo(11.5839 + r3, 26.4752 + h3), t2.bezierCurveTo(11.9744 + r3, 26.8658 + h3, 12.6076 + r3, 26.8658 + h3, 12.9981 + r3, 26.4752 + h3), t2.lineTo(16.2463 + r3, 23.2271 + h3), t2.closePath(), t2.fill("evenodd"), t2.stroke(), t2.restore(), t2.save(), t2.fillStyle = "rgba(0,0,0,0)", t2.strokeStyle = s2, t2.lineWidth = 1.5, t2.lineCap = "round", t2.lineJoin = "round", t2.font = "   15px ''", t2.beginPath(), t2.moveTo(12 + r3, 16.7967 + h3), t2.lineTo(12 + r3, 7.39258 + h3), t2.fill(), t2.stroke(), t2.restore(), t2.save(), t2.fillStyle = "rgba(0,0,0,0)", t2.strokeStyle = s2, t2.lineWidth = 1.5, t2.lineCap = "round", t2.lineJoin = "round", t2.font = "   15px ''", t2.beginPath(), t2.moveTo(15.6004 + r3, 10.7238 + h3), t2.lineTo(12.0004 + r3, 7.19727 + h3), t2.lineTo(8.40039 + r3, 10.7238 + h3), t2.fill(), t2.stroke(), t2.restore(), t2.restore();
    }(i, n - 12, s - 5 * h2, r2.color, r2.bgColor);
  } else {
    !function(t2, i2, n2, s2, e3) {
      const r3 = i2, h3 = n2;
      t2.save(), t2.strokeStyle = "rgba(0,0,0,0)", t2.miterLimit = 4, t2.font = "15px ''", t2.fillStyle = "rgba(0,0,0,0)", t2.font = "   15px ''", t2.save(), t2.fillStyle = e3, t2.font = "   15px ''", t2.beginPath(), t2.moveTo(8.20531 + r3, 3.37993 + h3), t2.bezierCurveTo(3.43761 + r3, 4.96791 + h3, 151253e-11 + r3, 9.4663 + h3, 104907e-11 + r3, 14.7676 + h3), t2.bezierCurveTo(469686e-12 + r3, 21.395 + h3, 5.37258 + r3, 26.7676 + h3, 12 + r3, 26.7676 + h3), t2.bezierCurveTo(18.6274 + r3, 26.7676 + h3, 24 + r3, 21.395 + h3, 24 + r3, 14.7676 + h3), t2.bezierCurveTo(24 + r3, 9.4663 + h3, 20.5624 + r3, 4.96792 + h3, 15.7947 + r3, 3.37993 + h3), t2.lineTo(12.7071 + r3, 0.292346 + h3), t2.bezierCurveTo(12.3166 + r3, -0.098178 + h3, 11.6834 + r3, -0.098178 + h3, 11.2929 + r3, 0.292346 + h3), t2.lineTo(8.20531 + r3, 3.37993 + h3), t2.closePath(), t2.fill("evenodd"), t2.stroke(), t2.restore(), t2.save(), t2.fillStyle = "rgba(0,0,0,0)", t2.strokeStyle = s2, t2.lineWidth = 1.5, t2.lineCap = "round", t2.lineJoin = "round", t2.font = "   15px ''", t2.beginPath(), t2.moveTo(12 + r3, 9.97092 + h3), t2.lineTo(12 + r3, 19.375 + h3), t2.fill(), t2.stroke(), t2.restore(), t2.save(), t2.fillStyle = "rgba(0,0,0,0)", t2.strokeStyle = s2, t2.lineWidth = 1.5, t2.lineCap = "round", t2.lineJoin = "round", t2.font = "   15px ''", t2.beginPath(), t2.moveTo(8.39961 + r3, 16.0438 + h3), t2.lineTo(11.9996 + r3, 19.5703 + h3), t2.lineTo(15.5996 + r3, 16.0438 + h3), t2.fill(), t2.stroke(), t2.restore(), t2.restore();
    }(i, n - 12, s - h2, r2.color, r2.bgColor);
  }
  i.fill();
}
function xi(t, i, n, s, e2, r2) {
  const h2 = (vi("arrowUp", e2) - 1) / 2;
  if (i.beginPath(), t) {
    !function(t2, i2, n2, s2, e3) {
      const r3 = i2, h3 = n2;
      t2.save(), t2.strokeStyle = "rgba(0,0,0,0)", t2.miterLimit = 4, t2.font = "15px ''", t2.fillStyle = "rgba(0,0,0,0)", t2.font = "   15px ''", t2.save(), t2.fillStyle = e3, t2.font = "   15px ''", t2.beginPath(), t2.moveTo(16.2463 + r3, 23.2265 + h3), t2.bezierCurveTo(20.778 + r3, 21.5116 + h3, 24 + r3, 17.1318 + h3, 24 + r3, 11.9995 + h3), t2.bezierCurveTo(24 + r3, 5.37203 + h3, 18.6274 + r3, -549786e-9 + h3, 12 + r3, -550365e-9 + h3), t2.bezierCurveTo(5.37258 + r3, -550945e-9 + h3, -368906e-13 + r3, 5.37203 + h3, -252363e-11 + r3, 11.9994 + h3), t2.bezierCurveTo(-300068e-11 + r3, 17.4564 + h3, 3.6424 + r3, 22.0625 + h3, 8.6286 + r3, 23.5194 + h3), t2.lineTo(11.5839 + r3, 26.4747 + h3), t2.bezierCurveTo(11.9744 + r3, 26.8652 + h3, 12.6076 + r3, 26.8652 + h3, 12.9981 + r3, 26.4747 + h3), t2.lineTo(16.2463 + r3, 23.2265 + h3), t2.closePath(), t2.fill("evenodd"), t2.stroke(), t2.restore(), t2.save(), t2.fillStyle = s2, t2.font = "   15px ''", t2.beginPath(), t2.moveTo(6.30986 + r3, 16.294 + h3), t2.bezierCurveTo(6.03424 + r3, 16.6032 + h3, 51.56015 + r3, 16.6304 + h3, 5.25095 + r3, 16.3548 + h3), t2.bezierCurveTo(4.94175 + r3, 16.0791 + h3, 4.91453 + r3, 15.6051 + h3, 5.19015 + r3, 15.2959 + h3), t2.lineTo(9.1127 + r3, 10.8955 + h3), t2.bezierCurveTo(9.35553 + r3, 10.623 + h3, 9.75919 + r3, 10.565 + h3, 10.069 + r3, 10.7578 + h3), t2.lineTo(12.8776 + r3, 12.5067 + h3), t2.lineTo(15.6576 + r3, 8.95574 + h3), t2.lineTo(13.6581 + r3, 8.95574 + h3), t2.bezierCurveTo(13.2439 + r3, 8.95574 + h3, 12.9081 + r3, 8.61996 + h3, 12.9081 + r3, 8.20574 + h3), t2.bezierCurveTo(12.9081 + r3, 7.79153 + h3, 13.2439 + r3, 7.45574 + h3, 13.6581 + r3, 7.45574 + h3), t2.lineTo(17.1341 + r3, 7.45574 + h3), t2.bezierCurveTo(17.46 + r3, 7.45574 + h3, 17.7486 + r3, 7.66618 + h3, 17.8482 + r3, 7.97647 + h3), t2.lineTo(18.9644 + r3, 11.4528 + h3), t2.bezierCurveTo(19.091 + r3, 11.8472 + h3, 18.874 + r3, 12.2695 + h3, 18.4796 + r3, 12.3962 + h3), t2.bezierCurveTo(18.0852 + r3, 12.5228 + h3, 17.6628 + r3, 12.3057 + h3, 17.5362 + r3, 11.9113 + h3), t2.lineTo(16.8709 + r3, 9.83927 + h3), t2.lineTo(13.6435 + r3, 13.9617 + h3), t2.bezierCurveTo(13.4073 + r3, 14.2633 + h3, 12.9818 + r3, 14.3385 + h3, 12.6565 + r3, 14.136 + h3), t2.lineTo(9.81221 + r3, 12.365 + h3), t2.lineTo(6.30986 + r3, 16.294 + h3), t2.closePath(), t2.fill("evenodd"), t2.stroke(), t2.restore(), t2.restore();
    }(i, n - 12, s - 5 * h2, r2.color, r2.bgColor);
  } else {
    !function(t2, i2, n2, s2, e3) {
      const r3 = i2, h3 = n2;
      t2.save(), t2.strokeStyle = "rgba(0,0,0,0)", t2.miterLimit = 4, t2.font = "15px ''", t2.fillStyle = "rgba(0,0,0,0)", t2.font = "   15px ''", t2.save(), t2.fillStyle = e3, t2.font = "   15px ''", t2.beginPath(), t2.moveTo(7.75371 + r3, 3.54106 + h3), t2.bezierCurveTo(3.22204 + r3, 5.25593 + h3, 149776e-11 + r3, 9.63575 + h3, 104907e-11 + r3, 14.7681 + h3), t2.bezierCurveTo(469686e-12 + r3, 21.3955 + h3, 5.37258 + r3, 26.7681 + h3, 12 + r3, 26.7681 + h3), t2.bezierCurveTo(18.6274 + r3, 26.7681 + h3, 24 + r3, 21.3955 + h3, 24 + r3, 14.7681 + h3), t2.bezierCurveTo(24 + r3, 9.31121 + h3, 20.3576 + r3, 4.70503 + h3, 15.3714 + r3, 3.2482 + h3), t2.lineTo(12.4161 + r3, 0.292894 + h3), t2.bezierCurveTo(12.0256 + r3, -0.0976299 + h3, 11.3924 + r3, -0.09763 + h3, 11.0019 + r3, 0.292894 + h3), t2.lineTo(7.75371 + r3, 3.54106 + h3), t2.closePath(), t2.fill("evenodd"), t2.stroke(), t2.restore(), t2.save(), t2.fillStyle = s2, t2.font = "   15px ''", t2.beginPath(), t2.moveTo(6.30986 + r3, 10.4736 + h3), t2.bezierCurveTo(6.03424 + r3, 10.1644 + h3, 5.56015 + r3, 10.1372 + h3, 5.25095 + r3, 10.4128 + h3), t2.bezierCurveTo(4.94175 + r3, 10.6884 + h3, 4.91453 + r3, 11.1625 + h3, 5.19015 + r3, 11.4717 + h3), t2.lineTo(9.1127 + r3, 15.8721 + h3), t2.bezierCurveTo(9.35553 + r3, 16.1445 + h3, 9.75919 + r3, 16.2026 + h3, 10.069 + r3, 16.0097 + h3), t2.lineTo(12.8776 + r3, 14.2609 + h3), t2.lineTo(15.6576 + r3, 17.8118 + h3), t2.lineTo(13.6581 + r3, 17.8118 + h3), t2.bezierCurveTo(13.2439 + r3, 17.8118 + h3, 12.9081 + r3, 18.1476 + h3, 12.9081 + r3, 18.5618 + h3), t2.bezierCurveTo(12.9081 + r3, 18.976 + h3, 13.2439 + r3, 19.3118 + h3, 13.6581 + r3, 19.3118 + h3), t2.lineTo(17.1341 + r3, 19.3118 + h3), t2.bezierCurveTo(17.46 + r3, 19.3118 + h3, 17.7486 + r3, 19.1014 + h3, 17.8482 + r3, 18.7911 + h3), t2.lineTo(18.9644 + r3, 15.3148 + h3), t2.bezierCurveTo(19.091 + r3, 14.9204 + h3, 18.874 + r3, 14.4981 + h3, 18.4796 + r3, 14.3714 + h3), t2.bezierCurveTo(18.0852 + r3, 14.2448 + h3, 17.6628 + r3, 14.4619 + h3, 17.5362 + r3, 14.8562 + h3), t2.lineTo(16.8709 + r3, 16.9283 + h3), t2.lineTo(13.6435 + r3, 12.8059 + h3), t2.bezierCurveTo(13.4073 + r3, 12.5042 + h3, 12.9818 + r3, 12.4291 + h3, 12.6565 + r3, 12.6316 + h3), t2.lineTo(9.81221 + r3, 14.4026 + h3), t2.lineTo(6.30986 + r3, 10.4736 + h3), t2.closePath(), t2.fill("evenodd"), t2.stroke(), t2.restore(), t2.restore();
    }(i, n - 12, s - h2, r2.color, r2.bgColor);
  }
  i.fill();
}
var Si = class extends j {
  constructor() {
    super(...arguments), this.Lt = null, this.lr = new si(), this.j = -1, this.H = "", this.Gr = "";
  }
  it(t) {
    this.Lt = t;
  }
  ar(t, i) {
    this.j === t && this.H === i || (this.j = t, this.H = i, this.Gr = N(t, i), this.lr.ir());
  }
  br(t, i) {
    if (null === this.Lt || null === this.Lt.nt)
      return null;
    for (let n = this.Lt.nt.from; n < this.Lt.nt.to; n++) {
      const s = this.Lt.st[n];
      if (yi(s, t, i))
        return { gr: s.Jr, wr: s.wr };
    }
    return null;
  }
  Z({ context: t }, i, n) {
    if (null !== this.Lt && null !== this.Lt.nt) {
      t.textBaseline = "middle", t.font = this.Gr;
      for (let i2 = this.Lt.nt.from; i2 < this.Lt.nt.to; i2++) {
        const n2 = this.Lt.st[i2];
        void 0 !== n2.Jt && (n2.Jt.$i = this.lr.Si(t, n2.Jt.Qr), n2.Jt.zt = this.j, n2.Jt.et = n2.et - n2.Jt.$i / 2), ki(n2, t);
      }
    }
  }
};
function ki(t, i) {
  i.fillStyle = t.O, void 0 !== t.Jt && function(t2, i2, n, s) {
    t2.fillText(i2, n, s);
  }(i, t.Jt.Qr, t.Jt.et, t.Jt.rt), function(t2, i2) {
    if (0 === t2.Ks)
      return;
    switch (t2.th) {
      case "arrowNormalDown":
        return void Mi(false, i2, t2.et, t2.rt, t2.Ks, t2);
      case "arrowNormalUp":
        return void Mi(true, i2, t2.et, t2.rt, t2.Ks, t2);
      case "arrowOptionDown":
        return void xi(false, i2, t2.et, t2.rt, t2.Ks, t2);
      case "arrowOptionUp":
        return void xi(true, i2, t2.et, t2.rt, t2.Ks, t2);
      case "arrowDown":
        return void wi(false, i2, t2.et, t2.rt, t2.Ks);
      case "arrowUp":
        return void wi(true, i2, t2.et, t2.rt, t2.Ks);
      case "circle":
        return void function(t3, i3, n, s) {
          const e2 = (vi("circle", s) - 1) / 2;
          t3.beginPath(), t3.arc(i3, n, e2, 0, 2 * Math.PI, false), t3.fill();
        }(i2, t2.et, t2.rt, t2.Ks);
      case "square":
        !function(t3, i3, n, s) {
          const e2 = vi("square", s), r2 = (e2 - 1) / 2, h2 = i3 - r2, l2 = n - r2;
          t3.fillRect(h2, l2, e2, e2);
        }(i2, t2.et, t2.rt, t2.Ks);
    }
  }(t, i);
}
function yi(t, i, n) {
  return !(void 0 === t.Jt || !function(t2, i2, n2, s, e2, r2) {
    const h2 = s / 2;
    return e2 >= t2 && e2 <= t2 + n2 && r2 >= i2 - h2 && r2 <= i2 + h2;
  }(t.Jt.et, t.Jt.rt, t.Jt.$i, t.Jt.zt, i, n)) || function(t2, i2, n2) {
    if (0 === t2.Ks)
      return false;
    switch (t2.th) {
      case "arrowDown":
      case "arrowUp":
        return gi(0, t2.et, t2.rt, t2.Ks, i2, n2);
      case "circle":
        return function(t3, i3, n3, s, e2) {
          const r2 = 2 + vi("circle", n3) / 2, h2 = t3 - s, l2 = i3 - e2;
          return Math.sqrt(h2 * h2 + l2 * l2) <= r2;
        }(t2.et, t2.rt, t2.Ks, i2, n2);
      case "square":
        return bi(t2.et, t2.rt, t2.Ks, i2, n2);
    }
    return false;
  }(t, i, n);
}
function Ci(t, i, n, s, e2, r2, h2, l2, a2) {
  const o3 = O(n) ? n : n.xe, _2 = O(n) ? n : n.ge, u2 = O(n) ? n : n.Me, c2 = O(i.size) ? Math.max(i.size, 0) : 1, d2 = pi(l2.he()) * c2, f2 = d2 / 2;
  switch (t.Ks = d2, i.position) {
    case "inBar":
      return t.rt = h2.Ot(o3, a2), void (void 0 !== t.Jt && (t.Jt.rt = t.rt + f2 + r2 + 0.6 * e2));
    case "aboveBar":
      return t.rt = h2.Ot(_2, a2) - f2 - s.ih, void 0 !== t.Jt && (t.Jt.rt = t.rt - f2 - 0.6 * e2, s.ih += 1.2 * e2), void (s.ih += d2 + r2);
    case "belowBar":
      return t.rt = h2.Ot(u2, a2) + f2 + s.nh, void 0 !== t.Jt && (t.Jt.rt = t.rt + f2 + r2 + 0.6 * e2, s.nh += 1.2 * e2), void (s.nh += d2 + r2);
  }
}
var Ti = class {
  constructor(t, i) {
    this.bt = true, this.sh = true, this.eh = true, this.rh = null, this.Ht = new Si(), this.Wr = t, this.Ui = i, this.Lt = { st: [], nt: null };
  }
  gt(t) {
    this.bt = true, this.eh = true, "data" === t && (this.sh = true);
  }
  xt(t) {
    if (!this.Wr.Tt())
      return null;
    this.bt && this.hh();
    const i = this.Ui.W().layout;
    return this.Ht.ar(i.fontSize, i.fontFamily), this.Ht.it(this.Lt), this.Ht;
  }
  lh() {
    if (this.eh) {
      if (this.Wr.ah().length > 0) {
        const t = this.Ui.yt().he(), i = mi(t), n = 1.5 * pi(t) + 2 * i;
        this.rh = { above: n, below: n };
      } else
        this.rh = null;
      this.eh = false;
    }
    return this.rh;
  }
  hh() {
    const t = this.Wr.At(), i = this.Ui.yt(), n = this.Wr.ah();
    this.sh && (this.Lt.st = n.map((t2) => Object.assign(Object.assign({}, t2), { ut: t2.time, et: 0, rt: 0, Ks: 0, th: t2.shape, O: t2.color, Jr: t2.Jr, wr: t2.id, Jt: void 0 })), this.sh = false);
    const s = this.Ui.W().layout;
    this.Lt.nt = null;
    const e2 = i.Xs();
    if (null === e2)
      return;
    const r2 = this.Wr.Pt();
    if (null === r2)
      return;
    if (0 === this.Lt.st.length)
      return;
    let h2 = NaN;
    const l2 = mi(i.he()), a2 = { ih: l2, nh: l2 };
    this.Lt.nt = Lt(this.Lt.st, e2, true);
    for (let e3 = this.Lt.nt.from; e3 < this.Lt.nt.to; e3++) {
      const o3 = n[e3];
      o3.time !== h2 && (a2.ih = l2, a2.nh = l2, h2 = o3.time);
      const _2 = this.Lt.st[e3];
      _2.et = i.Et(o3.time), void 0 !== o3.text && o3.text.length > 0 && (_2.Jt = { Qr: o3.text, et: 0, rt: 0, $i: 0, zt: 0 });
      const u2 = this.Wr.oh(o3.time);
      null !== u2 && Ci(_2, o3, u2, a2, s.fontSize, l2, t, i, r2.Vt);
    }
    this.bt = false;
  }
};
var Pi = class extends li {
  constructor(t) {
    super(t);
  }
  kr() {
    const t = this.Mr;
    t.Tt = false;
    const i = this.Es.W();
    if (!i.priceLineVisible || !this.Es.Tt())
      return;
    const n = this.Es.Yr(0 === i.priceLineSource);
    n.Xr || (t.Tt = true, t.rt = n.yi, t.O = this.Es._h(n.O), t.ht = i.priceLineWidth, t.Wt = i.priceLineStyle);
  }
};
var Ri = class extends st {
  constructor(t) {
    super(), this.$t = t;
  }
  Ei(t, i, n) {
    t.Tt = false, i.Tt = false;
    const s = this.$t;
    if (!s.Tt())
      return;
    const e2 = s.W(), r2 = e2.lastValueVisible, h2 = "" !== s.uh(), l2 = 0 === e2.seriesLastValueMode, a2 = s.Yr(false);
    if (a2.Xr)
      return;
    r2 && (t.Jt = this.dh(a2, r2, l2), t.Tt = 0 !== t.Jt.length), (h2 || l2) && (i.Jt = this.fh(a2, r2, h2, l2), i.Tt = i.Jt.length > 0);
    const o3 = s._h(a2.O), _2 = P(o3);
    n.t = _2.t, n.yi = a2.yi, i.Bt = s.qt().It(a2.yi / s.At().zt()), t.Bt = o3, t.O = _2.i, i.O = _2.i;
  }
  fh(t, i, n, s) {
    let e2 = "";
    const r2 = this.$t.uh();
    return n && 0 !== r2.length && (e2 += `${r2} `), i && s && (e2 += this.$t.At().ph() ? t.mh : t.bh), e2.trim();
  }
  dh(t, i, n) {
    return i ? n ? this.$t.At().ph() ? t.bh : t.mh : t.Jt : "";
  }
};
function Di(t, i, n, s) {
  const e2 = Number.isFinite(i), r2 = Number.isFinite(n);
  return e2 && r2 ? t(i, n) : e2 || r2 ? e2 ? i : n : s;
}
var Oi = class {
  constructor(t, i) {
    this.wh = t, this.gh = i;
  }
  Mh(t) {
    return null !== t && (this.wh === t.wh && this.gh === t.gh);
  }
  xh() {
    return new Oi(this.wh, this.gh);
  }
  Sh() {
    return this.wh;
  }
  kh() {
    return this.gh;
  }
  yh() {
    return this.gh - this.wh;
  }
  Fi() {
    return this.gh === this.wh || Number.isNaN(this.gh) || Number.isNaN(this.wh);
  }
  ts(t) {
    return null === t ? this : new Oi(Di(Math.min, this.Sh(), t.Sh(), -1 / 0), Di(Math.max, this.kh(), t.kh(), 1 / 0));
  }
  Ch(t) {
    if (!O(t))
      return;
    if (0 === this.gh - this.wh)
      return;
    const i = 0.5 * (this.gh + this.wh);
    let n = this.gh - i, s = this.wh - i;
    n *= t, s *= t, this.gh = i + n, this.wh = i + s;
  }
  Th(t) {
    O(t) && (this.gh += t, this.wh += t);
  }
  Ph() {
    return { minValue: this.wh, maxValue: this.gh };
  }
  static Rh(t) {
    return null === t ? null : new Oi(t.minValue, t.maxValue);
  }
};
var Ai = class {
  constructor(t, i) {
    this.Dh = t, this.Oh = i || null;
  }
  Ah() {
    return this.Dh;
  }
  Vh() {
    return this.Oh;
  }
  Ph() {
    return null === this.Dh ? null : { priceRange: this.Dh.Ph(), margins: this.Oh || void 0 };
  }
  static Rh(t) {
    return null === t ? null : new Ai(Oi.Rh(t.priceRange), t.margins);
  }
};
var Vi = class extends li {
  constructor(t, i) {
    super(t), this.Bh = i;
  }
  kr() {
    const t = this.Mr;
    t.Tt = false;
    const i = this.Bh.W();
    if (!this.Es.Tt() || !i.lineVisible)
      return;
    const n = this.Bh.Ih();
    null !== n && (t.Tt = true, t.rt = n, t.O = i.color, t.ht = i.lineWidth, t.Wt = i.lineStyle, t.wr = this.Bh.W().id);
  }
};
var Bi = class extends st {
  constructor(t, i) {
    super(), this.Wr = t, this.Bh = i;
  }
  Ei(t, i, n) {
    t.Tt = false, i.Tt = false;
    const s = this.Bh.W(), e2 = s.axisLabelVisible, r2 = "" !== s.title, h2 = this.Wr;
    if (!e2 || !h2.Tt())
      return;
    const l2 = this.Bh.Ih();
    if (null === l2)
      return;
    r2 && (i.Jt = s.title, i.Tt = true), i.Bt = h2.qt().It(l2 / h2.At().zt()), t.Jt = this.zh(s.price), t.Tt = true;
    const a2 = P(s.axisLabelColor || s.color);
    n.t = a2.t;
    const o3 = s.axisLabelTextColor || a2.i;
    t.O = o3, i.O = o3, n.yi = l2;
  }
  zh(t) {
    const i = this.Wr.Pt();
    return null === i ? "" : this.Wr.At().Wi(t, i.Vt);
  }
};
var Ii = class {
  constructor(t, i) {
    this.Wr = t, this.cn = i, this.Eh = new Vi(t, this), this._r = new Bi(t, this), this.Lh = new ri(this._r, t, t.qt());
  }
  Nh(t) {
    D(this.cn, t), this.gt(), this.Wr.qt().Fh();
  }
  W() {
    return this.cn;
  }
  Wh() {
    return this.Eh;
  }
  jh() {
    return this.Lh;
  }
  Hh() {
    return this._r;
  }
  gt() {
    this.Eh.gt(), this._r.gt();
  }
  Ih() {
    const t = this.Wr, i = t.At();
    if (t.qt().yt().Fi() || i.Fi())
      return null;
    const n = t.Pt();
    return null === n ? null : i.Ot(this.cn.price, n.Vt);
  }
};
var zi = class extends at {
  constructor(t) {
    super(), this.Ui = t;
  }
  qt() {
    return this.Ui;
  }
};
var Ei = { Bar: (t, i, n, s) => {
  var e2;
  const r2 = i.upColor, h2 = i.downColor, l2 = b(t(n, s)), a2 = w(l2.Vt[0]) <= w(l2.Vt[3]);
  return { ue: null !== (e2 = l2.O) && void 0 !== e2 ? e2 : a2 ? r2 : h2 };
}, Candlestick: (t, i, n, s) => {
  var e2, r2, h2;
  const l2 = i.upColor, a2 = i.downColor, o3 = i.borderUpColor, _2 = i.borderDownColor, u2 = i.wickUpColor, c2 = i.wickDownColor, d2 = b(t(n, s)), f2 = w(d2.Vt[0]) <= w(d2.Vt[3]);
  return { ue: null !== (e2 = d2.O) && void 0 !== e2 ? e2 : f2 ? l2 : a2, Le: null !== (r2 = d2.Bt) && void 0 !== r2 ? r2 : f2 ? o3 : _2, Ee: null !== (h2 = d2.$h) && void 0 !== h2 ? h2 : f2 ? u2 : c2 };
}, Custom: (t, i, n, s) => {
  var e2;
  return { ue: null !== (e2 = b(t(n, s)).O) && void 0 !== e2 ? e2 : i.color };
}, Area: (t, i, n, s) => {
  var e2, r2, h2, l2;
  const a2 = b(t(n, s));
  return { ue: null !== (e2 = a2._t) && void 0 !== e2 ? e2 : i.lineColor, _t: null !== (r2 = a2._t) && void 0 !== r2 ? r2 : i.lineColor, Ts: null !== (h2 = a2.Ts) && void 0 !== h2 ? h2 : i.topColor, Ps: null !== (l2 = a2.Ps) && void 0 !== l2 ? l2 : i.bottomColor };
}, Baseline: (t, i, n, s) => {
  var e2, r2, h2, l2, a2, o3;
  const _2 = b(t(n, s));
  return { ue: _2.Vt[3] >= i.baseValue.price ? i.topLineColor : i.bottomLineColor, Pe: null !== (e2 = _2.Pe) && void 0 !== e2 ? e2 : i.topLineColor, Re: null !== (r2 = _2.Re) && void 0 !== r2 ? r2 : i.bottomLineColor, Se: null !== (h2 = _2.Se) && void 0 !== h2 ? h2 : i.topFillColor1, ke: null !== (l2 = _2.ke) && void 0 !== l2 ? l2 : i.topFillColor2, ye: null !== (a2 = _2.ye) && void 0 !== a2 ? a2 : i.bottomFillColor1, Ce: null !== (o3 = _2.Ce) && void 0 !== o3 ? o3 : i.bottomFillColor2 };
}, Line: (t, i, n, s) => {
  var e2, r2;
  const h2 = b(t(n, s));
  return { ue: null !== (e2 = h2.O) && void 0 !== e2 ? e2 : i.color, _t: null !== (r2 = h2.O) && void 0 !== r2 ? r2 : i.color };
}, Histogram: (t, i, n, s) => {
  var e2;
  return { ue: null !== (e2 = b(t(n, s)).O) && void 0 !== e2 ? e2 : i.color };
} };
var Li = class {
  constructor(t) {
    this.Uh = (t2, i) => void 0 !== i ? i.Vt : this.Wr.In().qh(t2), this.Wr = t, this.Yh = Ei[t.Xh()];
  }
  Hs(t, i) {
    return this.Yh(this.Uh, this.Wr.W(), t, i);
  }
};
var Ni;
!function(t) {
  t[t.NearestLeft = -1] = "NearestLeft", t[t.None = 0] = "None", t[t.NearestRight = 1] = "NearestRight";
}(Ni || (Ni = {}));
var Fi = 30;
var Wi = class {
  constructor() {
    this.Kh = [], this.Zh = /* @__PURE__ */ new Map(), this.Gh = /* @__PURE__ */ new Map();
  }
  Jh() {
    return this.Ks() > 0 ? this.Kh[this.Kh.length - 1] : null;
  }
  Qh() {
    return this.Ks() > 0 ? this.tl(0) : null;
  }
  Bn() {
    return this.Ks() > 0 ? this.tl(this.Kh.length - 1) : null;
  }
  Ks() {
    return this.Kh.length;
  }
  Fi() {
    return 0 === this.Ks();
  }
  Kr(t) {
    return null !== this.il(t, 0);
  }
  qh(t) {
    return this.nl(t);
  }
  nl(t, i = 0) {
    const n = this.il(t, i);
    return null === n ? null : Object.assign(Object.assign({}, this.sl(n)), { se: this.tl(n) });
  }
  ie() {
    return this.Kh;
  }
  el(t, i, n) {
    if (this.Fi())
      return null;
    let s = null;
    for (const e2 of n) {
      s = ji(s, this.rl(t, i, e2));
    }
    return s;
  }
  it(t) {
    this.Gh.clear(), this.Zh.clear(), this.Kh = t;
  }
  tl(t) {
    return this.Kh[t].se;
  }
  sl(t) {
    return this.Kh[t];
  }
  il(t, i) {
    const n = this.hl(t);
    if (null === n && 0 !== i)
      switch (i) {
        case -1:
          return this.ll(t);
        case 1:
          return this.al(t);
        default:
          throw new TypeError("Unknown search mode");
      }
    return n;
  }
  ll(t) {
    let i = this.ol(t);
    return i > 0 && (i -= 1), i !== this.Kh.length && this.tl(i) < t ? i : null;
  }
  al(t) {
    const i = this._l(t);
    return i !== this.Kh.length && t < this.tl(i) ? i : null;
  }
  hl(t) {
    const i = this.ol(t);
    return i === this.Kh.length || t < this.Kh[i].se ? null : i;
  }
  ol(t) {
    return Bt(this.Kh, t, (t2, i) => t2.se < i);
  }
  _l(t) {
    return It(this.Kh, t, (t2, i) => t2.se > i);
  }
  ul(t, i, n) {
    let s = null;
    for (let e2 = t; e2 < i; e2++) {
      const t2 = this.Kh[e2].Vt[n];
      Number.isNaN(t2) || (null === s ? s = { cl: t2, dl: t2 } : (t2 < s.cl && (s.cl = t2), t2 > s.dl && (s.dl = t2)));
    }
    return s;
  }
  rl(t, i, n) {
    if (this.Fi())
      return null;
    let s = null;
    const e2 = b(this.Qh()), r2 = b(this.Bn()), h2 = Math.max(t, e2), l2 = Math.min(i, r2), a2 = Math.ceil(h2 / Fi) * Fi, o3 = Math.max(a2, Math.floor(l2 / Fi) * Fi);
    {
      const t2 = this.ol(h2), e3 = this._l(Math.min(l2, a2, i));
      s = ji(s, this.ul(t2, e3, n));
    }
    let _2 = this.Zh.get(n);
    void 0 === _2 && (_2 = /* @__PURE__ */ new Map(), this.Zh.set(n, _2));
    for (let t2 = Math.max(a2 + 1, h2); t2 < o3; t2 += Fi) {
      const i2 = Math.floor(t2 / Fi);
      let e3 = _2.get(i2);
      if (void 0 === e3) {
        const t3 = this.ol(i2 * Fi), s2 = this._l((i2 + 1) * Fi - 1);
        e3 = this.ul(t3, s2, n), _2.set(i2, e3);
      }
      s = ji(s, e3);
    }
    {
      const t2 = this.ol(o3), i2 = this._l(l2);
      s = ji(s, this.ul(t2, i2, n));
    }
    return s;
  }
};
function ji(t, i) {
  if (null === t)
    return i;
  if (null === i)
    return t;
  return { cl: Math.min(t.cl, i.cl), dl: Math.max(t.dl, i.dl) };
}
var Hi = class {
  constructor(t) {
    this.fl = t;
  }
  K(t, i, n) {
    this.fl.draw(t);
  }
  G(t, i, n) {
    var s, e2;
    null === (e2 = (s = this.fl).drawBackground) || void 0 === e2 || e2.call(s, t);
  }
};
var $i = class {
  constructor(t) {
    this.Qe = null, this.wn = t;
  }
  xt() {
    var t;
    const i = this.wn.renderer();
    if (null === i)
      return null;
    if ((null === (t = this.Qe) || void 0 === t ? void 0 : t.vl) === i)
      return this.Qe.pl;
    const n = new Hi(i);
    return this.Qe = { vl: i, pl: n }, n;
  }
  ml() {
    var t, i, n;
    return null !== (n = null === (i = (t = this.wn).zOrder) || void 0 === i ? void 0 : i.call(t)) && void 0 !== n ? n : "normal";
  }
};
function Ui(t) {
  var i, n, s, e2, r2;
  return { Jt: t.text(), yi: t.coordinate(), ki: null === (i = t.fixedCoordinate) || void 0 === i ? void 0 : i.call(t), O: t.textColor(), t: t.backColor(), Tt: null === (s = null === (n = t.visible) || void 0 === n ? void 0 : n.call(t)) || void 0 === s || s, ai: null === (r2 = null === (e2 = t.tickVisible) || void 0 === e2 ? void 0 : e2.call(t)) || void 0 === r2 || r2 };
}
var qi = class {
  constructor(t, i) {
    this.Ht = new ht(), this.bl = t, this.wl = i;
  }
  xt() {
    return this.Ht.it(Object.assign({ $i: this.wl.$i() }, Ui(this.bl))), this.Ht;
  }
};
var Yi = class extends st {
  constructor(t, i) {
    super(), this.bl = t, this.Li = i;
  }
  Ei(t, i, n) {
    const s = Ui(this.bl);
    n.t = s.t, t.O = s.O;
    const e2 = 2 / 12 * this.Li.P();
    n.gi = e2, n.Mi = e2, n.yi = s.yi, n.ki = s.ki, t.Jt = s.Jt, t.Tt = s.Tt, t.ai = s.ai;
  }
};
var Xi = class {
  constructor(t, i) {
    this.gl = null, this.Ml = null, this.xl = null, this.Sl = null, this.kl = null, this.yl = t, this.Wr = i;
  }
  Cl() {
    return this.yl;
  }
  On() {
    var t, i;
    null === (i = (t = this.yl).updateAllViews) || void 0 === i || i.call(t);
  }
  Pn() {
    var t, i, n, s;
    const e2 = null !== (n = null === (i = (t = this.yl).paneViews) || void 0 === i ? void 0 : i.call(t)) && void 0 !== n ? n : [];
    if ((null === (s = this.gl) || void 0 === s ? void 0 : s.vl) === e2)
      return this.gl.pl;
    const r2 = e2.map((t2) => new $i(t2));
    return this.gl = { vl: e2, pl: r2 }, r2;
  }
  tn() {
    var t, i, n, s;
    const e2 = null !== (n = null === (i = (t = this.yl).timeAxisViews) || void 0 === i ? void 0 : i.call(t)) && void 0 !== n ? n : [];
    if ((null === (s = this.Ml) || void 0 === s ? void 0 : s.vl) === e2)
      return this.Ml.pl;
    const r2 = this.Wr.qt().yt(), h2 = e2.map((t2) => new qi(t2, r2));
    return this.Ml = { vl: e2, pl: h2 }, h2;
  }
  Rn() {
    var t, i, n, s;
    const e2 = null !== (n = null === (i = (t = this.yl).priceAxisViews) || void 0 === i ? void 0 : i.call(t)) && void 0 !== n ? n : [];
    if ((null === (s = this.xl) || void 0 === s ? void 0 : s.vl) === e2)
      return this.xl.pl;
    const r2 = this.Wr.At(), h2 = e2.map((t2) => new Yi(t2, r2));
    return this.xl = { vl: e2, pl: h2 }, h2;
  }
  Tl() {
    var t, i, n, s;
    const e2 = null !== (n = null === (i = (t = this.yl).priceAxisPaneViews) || void 0 === i ? void 0 : i.call(t)) && void 0 !== n ? n : [];
    if ((null === (s = this.Sl) || void 0 === s ? void 0 : s.vl) === e2)
      return this.Sl.pl;
    const r2 = e2.map((t2) => new $i(t2));
    return this.Sl = { vl: e2, pl: r2 }, r2;
  }
  Pl() {
    var t, i, n, s;
    const e2 = null !== (n = null === (i = (t = this.yl).timeAxisPaneViews) || void 0 === i ? void 0 : i.call(t)) && void 0 !== n ? n : [];
    if ((null === (s = this.kl) || void 0 === s ? void 0 : s.vl) === e2)
      return this.kl.pl;
    const r2 = e2.map((t2) => new $i(t2));
    return this.kl = { vl: e2, pl: r2 }, r2;
  }
  Rl(t, i) {
    var n, s, e2;
    return null !== (e2 = null === (s = (n = this.yl).autoscaleInfo) || void 0 === s ? void 0 : s.call(n, t, i)) && void 0 !== e2 ? e2 : null;
  }
  br(t, i) {
    var n, s, e2;
    return null !== (e2 = null === (s = (n = this.yl).hitTest) || void 0 === s ? void 0 : s.call(n, t, i)) && void 0 !== e2 ? e2 : null;
  }
};
function Ki(t, i, n, s) {
  t.forEach((t2) => {
    i(t2).forEach((t3) => {
      t3.ml() === n && s.push(t3);
    });
  });
}
function Zi(t) {
  return t.Pn();
}
function Gi(t) {
  return t.Tl();
}
function Ji(t) {
  return t.Pl();
}
var Qi = class extends zi {
  constructor(t, i, n, s, e2) {
    super(t), this.Lt = new Wi(), this.Eh = new Pi(this), this.Dl = [], this.Ol = new ai(this), this.Al = null, this.Vl = null, this.Bl = [], this.Il = [], this.zl = null, this.El = [], this.cn = i, this.Ll = n;
    const r2 = new Ri(this);
    this.hn = [r2], this.Lh = new ri(r2, this, t), "Area" !== n && "Line" !== n && "Baseline" !== n || (this.Al = new di(this)), this.Nl(), this.Fl(e2);
  }
  S() {
    null !== this.zl && clearTimeout(this.zl);
  }
  _h(t) {
    return this.cn.priceLineColor || t;
  }
  Yr(t) {
    const i = { Xr: true }, n = this.At();
    if (this.qt().yt().Fi() || n.Fi() || this.Lt.Fi())
      return i;
    const s = this.qt().yt().Xs(), e2 = this.Pt();
    if (null === s || null === e2)
      return i;
    let r2, h2;
    if (t) {
      const t2 = this.Lt.Jh();
      if (null === t2)
        return i;
      r2 = t2, h2 = t2.se;
    } else {
      const t2 = this.Lt.nl(s.di(), -1);
      if (null === t2)
        return i;
      if (r2 = this.Lt.qh(t2.se), null === r2)
        return i;
      h2 = t2.se;
    }
    const l2 = r2.Vt[3], a2 = this.$s().Hs(h2, { Vt: r2 }), o3 = n.Ot(l2, e2.Vt);
    return { Xr: false, ct: l2, Jt: n.Wi(l2, e2.Vt), mh: n.Wl(l2), bh: n.jl(l2, e2.Vt), O: a2.ue, yi: o3, se: h2 };
  }
  $s() {
    return null !== this.Vl || (this.Vl = new Li(this)), this.Vl;
  }
  W() {
    return this.cn;
  }
  Nh(t) {
    const i = t.priceScaleId;
    void 0 !== i && i !== this.cn.priceScaleId && this.qt().Hl(this, i), D(this.cn, t), void 0 !== t.priceFormat && (this.Nl(), this.qt().$l()), this.qt().Ul(this), this.qt().ql(), this.wn.gt("options");
  }
  it(t, i) {
    this.Lt.it(t), this.Yl(), this.wn.gt("data"), this.dn.gt("data"), null !== this.Al && (i && i.Xl ? this.Al.Hr() : 0 === t.length && this.Al.jr());
    const n = this.qt().cr(this);
    this.qt().Kl(n), this.qt().Ul(this), this.qt().ql(), this.qt().Fh();
  }
  Zl(t) {
    this.Bl = t, this.Yl();
    const i = this.qt().cr(this);
    this.dn.gt("data"), this.qt().Kl(i), this.qt().Ul(this), this.qt().ql(), this.qt().Fh();
  }
  Gl() {
    return this.Bl;
  }
  ah() {
    return this.Il;
  }
  Jl(t) {
    const i = new Ii(this, t);
    return this.Dl.push(i), this.qt().Ul(this), i;
  }
  Ql(t) {
    const i = this.Dl.indexOf(t);
    -1 !== i && this.Dl.splice(i, 1), this.qt().Ul(this);
  }
  Xh() {
    return this.Ll;
  }
  Pt() {
    const t = this.ta();
    return null === t ? null : { Vt: t.Vt[3], ia: t.ut };
  }
  ta() {
    const t = this.qt().yt().Xs();
    if (null === t)
      return null;
    const i = t.Os();
    return this.Lt.nl(i, 1);
  }
  In() {
    return this.Lt;
  }
  oh(t) {
    const i = this.Lt.qh(t);
    return null === i ? null : "Bar" === this.Ll || "Candlestick" === this.Ll || "Custom" === this.Ll ? { we: i.Vt[0], ge: i.Vt[1], Me: i.Vt[2], xe: i.Vt[3] } : i.Vt[3];
  }
  na(t) {
    const i = [];
    Ki(this.El, Zi, "top", i);
    const n = this.Al;
    return null !== n && n.Tt() ? (null === this.zl && n.Ur() && (this.zl = setTimeout(() => {
      this.zl = null, this.qt().sa();
    }, 0)), n.$r(), i.push(n), i) : i;
  }
  Pn() {
    const t = [];
    this.ea() || t.push(this.Ol), t.push(this.wn, this.Eh, this.dn);
    const i = this.Dl.map((t2) => t2.Wh());
    return t.push(...i), Ki(this.El, Zi, "normal", t), t;
  }
  ra() {
    return this.ha(Zi, "bottom");
  }
  la(t) {
    return this.ha(Gi, t);
  }
  aa(t) {
    return this.ha(Ji, t);
  }
  oa(t, i) {
    return this.El.map((n) => n.br(t, i)).filter((t2) => null !== t2);
  }
  Qi(t) {
    return [this.Lh, ...this.Dl.map((t2) => t2.jh())];
  }
  Rn(t, i) {
    if (i !== this.Xi && !this.ea())
      return [];
    const n = [...this.hn];
    for (const t2 of this.Dl)
      n.push(t2.Hh());
    return this.El.forEach((t2) => {
      n.push(...t2.Rn());
    }), n;
  }
  tn() {
    const t = [];
    return this.El.forEach((i) => {
      t.push(...i.tn());
    }), t;
  }
  Rl(t, i) {
    if (void 0 !== this.cn.autoscaleInfoProvider) {
      const n = this.cn.autoscaleInfoProvider(() => {
        const n2 = this._a(t, i);
        return null === n2 ? null : n2.Ph();
      });
      return Ai.Rh(n);
    }
    return this._a(t, i);
  }
  ua() {
    return this.cn.priceFormat.minMove;
  }
  ca() {
    return this.da;
  }
  On() {
    var t;
    this.wn.gt(), this.dn.gt();
    for (const t2 of this.hn)
      t2.gt();
    for (const t2 of this.Dl)
      t2.gt();
    this.Eh.gt(), this.Ol.gt(), null === (t = this.Al) || void 0 === t || t.gt(), this.El.forEach((t2) => t2.On());
  }
  At() {
    return b(super.At());
  }
  Ct(t) {
    if (!(("Line" === this.Ll || "Area" === this.Ll || "Baseline" === this.Ll) && this.cn.crosshairMarkerVisible))
      return null;
    const i = this.Lt.qh(t);
    if (null === i)
      return null;
    return { ct: i.Vt[3], ot: this.fa(), Bt: this.va(), Dt: this.pa(), Rt: this.ma(t) };
  }
  uh() {
    return this.cn.title;
  }
  Tt() {
    return this.cn.visible;
  }
  ba(t) {
    this.El.push(new Xi(t, this));
  }
  wa(t) {
    this.El = this.El.filter((i) => i.Cl() !== t);
  }
  ga() {
    if (this.wn instanceof Gt != false)
      return (t) => this.wn.Fe(t);
  }
  Ma() {
    if (this.wn instanceof Gt != false)
      return (t) => this.wn.We(t);
  }
  ea() {
    return !ut(this.At().xa());
  }
  _a(t, i) {
    if (!A(t) || !A(i) || this.Lt.Fi())
      return null;
    const n = "Line" === this.Ll || "Area" === this.Ll || "Baseline" === this.Ll || "Histogram" === this.Ll ? [3] : [2, 1], s = this.Lt.el(t, i, n);
    let e2 = null !== s ? new Oi(s.cl, s.dl) : null;
    if ("Histogram" === this.Xh()) {
      const t2 = this.cn.base, i2 = new Oi(t2, t2);
      e2 = null !== e2 ? e2.ts(i2) : i2;
    }
    let r2 = this.dn.lh();
    return this.El.forEach((n2) => {
      const s2 = n2.Rl(t, i);
      if (null == s2 ? void 0 : s2.priceRange) {
        const t2 = new Oi(s2.priceRange.minValue, s2.priceRange.maxValue);
        e2 = null !== e2 ? e2.ts(t2) : t2;
      }
      var h2, l2, a2, o3;
      (null == s2 ? void 0 : s2.margins) && (h2 = r2, l2 = s2.margins, r2 = { above: Math.max(null !== (a2 = null == h2 ? void 0 : h2.above) && void 0 !== a2 ? a2 : 0, l2.above), below: Math.max(null !== (o3 = null == h2 ? void 0 : h2.below) && void 0 !== o3 ? o3 : 0, l2.below) });
    }), new Ai(e2, r2);
  }
  fa() {
    switch (this.Ll) {
      case "Line":
      case "Area":
      case "Baseline":
        return this.cn.crosshairMarkerRadius;
    }
    return 0;
  }
  va() {
    switch (this.Ll) {
      case "Line":
      case "Area":
      case "Baseline": {
        const t = this.cn.crosshairMarkerBorderColor;
        if (0 !== t.length)
          return t;
      }
    }
    return null;
  }
  pa() {
    switch (this.Ll) {
      case "Line":
      case "Area":
      case "Baseline":
        return this.cn.crosshairMarkerBorderWidth;
    }
    return 0;
  }
  ma(t) {
    switch (this.Ll) {
      case "Line":
      case "Area":
      case "Baseline": {
        const t2 = this.cn.crosshairMarkerBackgroundColor;
        if (0 !== t2.length)
          return t2;
      }
    }
    return this.$s().Hs(t).ue;
  }
  Nl() {
    switch (this.cn.priceFormat.type) {
      case "custom":
        this.da = { format: this.cn.priceFormat.formatter };
        break;
      case "volume":
        this.da = new mt(this.cn.priceFormat.precision);
        break;
      case "percent":
        this.da = new pt(this.cn.priceFormat.precision);
        break;
      default: {
        const t = Math.pow(10, this.cn.priceFormat.precision);
        this.da = new vt(t, this.cn.priceFormat.minMove * t);
      }
    }
    null !== this.Xi && this.Xi.Sa();
  }
  Yl() {
    const t = this.qt().yt();
    if (!t.ka() || this.Lt.Fi())
      return void (this.Il = []);
    const i = b(this.Lt.Qh());
    this.Il = this.Bl.map((n, s) => {
      const e2 = b(t.ya(n.time, true)), r2 = e2 < i ? 1 : -1, h2 = b(this.Lt.nl(e2, r2)).se;
      return Object.assign(Object.assign({}, n), { time: h2, position: n.position, shape: n.shape, color: n.color, id: n.id, Jr: s, text: n.text, size: n.size, originalTime: n.originalTime });
    });
  }
  Fl(t) {
    switch (this.dn = new Ti(this, this.qt()), this.Ll) {
      case "Bar":
        this.wn = new $t(this, this.qt());
        break;
      case "Candlestick":
        this.wn = new Kt(this, this.qt());
        break;
      case "Line":
        this.wn = new ii(this, this.qt());
        break;
      case "Custom":
        this.wn = new Gt(this, this.qt(), m(t));
        break;
      case "Area":
        this.wn = new Wt(this, this.qt());
        break;
      case "Baseline":
        this.wn = new Yt(this, this.qt());
        break;
      case "Histogram":
        this.wn = new ti(this, this.qt());
        break;
      default:
        throw Error("Unknown chart style assigned: " + this.Ll);
    }
  }
  ha(t, i) {
    const n = [];
    return Ki(this.El, t, i, n), n;
  }
};
var tn = class {
  constructor(t) {
    this.cn = t;
  }
  Ca(t, i, n) {
    let s = t;
    if (0 === this.cn.mode)
      return s;
    const e2 = n.vn(), r2 = e2.Pt();
    if (null === r2)
      return s;
    const h2 = e2.Ot(t, r2), l2 = n.Ta().filter((t2) => t2 instanceof Qi).reduce((t2, s2) => {
      if (n.dr(s2) || !s2.Tt())
        return t2;
      const e3 = s2.At(), r3 = s2.In();
      if (e3.Fi() || !r3.Kr(i))
        return t2;
      const h3 = r3.qh(i);
      if (null === h3)
        return t2;
      const l3 = w(s2.Pt());
      return t2.concat([e3.Ot(h3.Vt[3], l3.Vt)]);
    }, []);
    if (0 === l2.length)
      return s;
    l2.sort((t2, i2) => Math.abs(t2 - h2) - Math.abs(i2 - h2));
    const a2 = l2[0];
    return s = e2.pn(a2, r2), s;
  }
};
var nn = class extends Y {
  constructor() {
    super(...arguments), this.Lt = null;
  }
  it(t) {
    this.Lt = t;
  }
  Z({ context: t, bitmapSize: i, horizontalPixelRatio: n, verticalPixelRatio: s }) {
    if (null === this.Lt)
      return;
    const e2 = Math.max(1, Math.floor(n));
    t.lineWidth = e2, function(t2, i2) {
      t2.save(), t2.lineWidth % 2 && t2.translate(0.5, 0.5), i2(), t2.restore();
    }(t, () => {
      const r2 = b(this.Lt);
      if (r2.Pa) {
        t.strokeStyle = r2.Ra, f(t, r2.Da), t.beginPath();
        for (const s2 of r2.Oa) {
          const r3 = Math.round(s2.Aa * n);
          t.moveTo(r3, -e2), t.lineTo(r3, i.height + e2);
        }
        t.stroke();
      }
      if (r2.Va) {
        t.strokeStyle = r2.Ba, f(t, r2.Ia), t.beginPath();
        for (const n2 of r2.za) {
          const r3 = Math.round(n2.Aa * s);
          t.moveTo(-e2, r3), t.lineTo(i.width + e2, r3);
        }
        t.stroke();
      }
    });
  }
};
var sn = class {
  constructor(t) {
    this.Ht = new nn(), this.bt = true, this.nn = t;
  }
  gt() {
    this.bt = true;
  }
  xt() {
    if (this.bt) {
      const t = this.nn.qt().W().grid, i = { Va: t.horzLines.visible, Pa: t.vertLines.visible, Ba: t.horzLines.color, Ra: t.vertLines.color, Ia: t.horzLines.style, Da: t.vertLines.style, za: this.nn.vn().Ea(), Oa: (this.nn.qt().yt().Ea() || []).map((t2) => ({ Aa: t2.coord })) };
      this.Ht.it(i), this.bt = false;
    }
    return this.Ht;
  }
};
var en = class {
  constructor(t) {
    this.wn = new sn(t);
  }
  Wh() {
    return this.wn;
  }
};
var rn = { La: 4, Na: 1e-4 };
function hn(t, i) {
  const n = 100 * (t - i) / i;
  return i < 0 ? -n : n;
}
function ln(t, i) {
  const n = hn(t.Sh(), i), s = hn(t.kh(), i);
  return new Oi(n, s);
}
function an(t, i) {
  const n = 100 * (t - i) / i + 100;
  return i < 0 ? -n : n;
}
function on(t, i) {
  const n = an(t.Sh(), i), s = an(t.kh(), i);
  return new Oi(n, s);
}
function _n(t, i) {
  const n = Math.abs(t);
  if (n < 1e-15)
    return 0;
  const s = Math.log10(n + i.Na) + i.La;
  return t < 0 ? -s : s;
}
function un(t, i) {
  const n = Math.abs(t);
  if (n < 1e-15)
    return 0;
  const s = Math.pow(10, n - i.La) - i.Na;
  return t < 0 ? -s : s;
}
function cn(t, i) {
  if (null === t)
    return null;
  const n = _n(t.Sh(), i), s = _n(t.kh(), i);
  return new Oi(n, s);
}
function dn(t, i) {
  if (null === t)
    return null;
  const n = un(t.Sh(), i), s = un(t.kh(), i);
  return new Oi(n, s);
}
function fn(t) {
  if (null === t)
    return rn;
  const i = Math.abs(t.kh() - t.Sh());
  if (i >= 1 || i < 1e-15)
    return rn;
  const n = Math.ceil(Math.abs(Math.log10(i))), s = rn.La + n;
  return { La: s, Na: 1 / Math.pow(10, s) };
}
var vn = class {
  constructor(t, i) {
    if (this.Fa = t, this.Wa = i, function(t2) {
      if (t2 < 0)
        return false;
      for (let i2 = t2; i2 > 1; i2 /= 10)
        if (i2 % 10 != 0)
          return false;
      return true;
    }(this.Fa))
      this.ja = [2, 2.5, 2];
    else {
      this.ja = [];
      for (let t2 = this.Fa; 1 !== t2; ) {
        if (t2 % 2 == 0)
          this.ja.push(2), t2 /= 2;
        else {
          if (t2 % 5 != 0)
            throw new Error("unexpected base");
          this.ja.push(2, 2.5), t2 /= 5;
        }
        if (this.ja.length > 100)
          throw new Error("something wrong with base");
      }
    }
  }
  Ha(t, i, n) {
    const s = 0 === this.Fa ? 0 : 1 / this.Fa;
    let e2 = Math.pow(10, Math.max(0, Math.ceil(Math.log10(t - i)))), r2 = 0, h2 = this.Wa[0];
    for (; ; ) {
      const t2 = Ct(e2, s, 1e-14) && e2 > s + 1e-14, i2 = Ct(e2, n * h2, 1e-14), l3 = Ct(e2, 1, 1e-14);
      if (!(t2 && i2 && l3))
        break;
      e2 /= h2, h2 = this.Wa[++r2 % this.Wa.length];
    }
    if (e2 <= s + 1e-14 && (e2 = s), e2 = Math.max(1, e2), this.ja.length > 0 && (l2 = e2, a2 = 1, o3 = 1e-14, Math.abs(l2 - a2) < o3))
      for (r2 = 0, h2 = this.ja[0]; Ct(e2, n * h2, 1e-14) && e2 > s + 1e-14; )
        e2 /= h2, h2 = this.ja[++r2 % this.ja.length];
    var l2, a2, o3;
    return e2;
  }
};
var pn = class {
  constructor(t, i, n, s) {
    this.$a = [], this.Li = t, this.Fa = i, this.Ua = n, this.qa = s;
  }
  Ha(t, i) {
    if (t < i)
      throw new Error("high < low");
    const n = this.Li.zt(), s = (t - i) * this.Ya() / n, e2 = new vn(this.Fa, [2, 2.5, 2]), r2 = new vn(this.Fa, [2, 2, 2.5]), h2 = new vn(this.Fa, [2.5, 2, 2]), l2 = [];
    return l2.push(e2.Ha(t, i, s), r2.Ha(t, i, s), h2.Ha(t, i, s)), function(t2) {
      if (t2.length < 1)
        throw Error("array is empty");
      let i2 = t2[0];
      for (let n2 = 1; n2 < t2.length; ++n2)
        t2[n2] < i2 && (i2 = t2[n2]);
      return i2;
    }(l2);
  }
  Xa() {
    const t = this.Li, i = t.Pt();
    if (null === i)
      return void (this.$a = []);
    const n = t.zt(), s = this.Ua(n - 1, i), e2 = this.Ua(0, i), r2 = this.Li.W().entireTextOnly ? this.Ka() / 2 : 0, h2 = r2, l2 = n - 1 - r2, a2 = Math.max(s, e2), o3 = Math.min(s, e2);
    if (a2 === o3)
      return void (this.$a = []);
    let _2 = this.Ha(a2, o3), u2 = a2 % _2;
    u2 += u2 < 0 ? _2 : 0;
    const c2 = a2 >= o3 ? 1 : -1;
    let d2 = null, f2 = 0;
    for (let n2 = a2 - u2; n2 > o3; n2 -= _2) {
      const s2 = this.qa(n2, i, true);
      null !== d2 && Math.abs(s2 - d2) < this.Ya() || (s2 < h2 || s2 > l2 || (f2 < this.$a.length ? (this.$a[f2].Aa = s2, this.$a[f2].Za = t.Ga(n2)) : this.$a.push({ Aa: s2, Za: t.Ga(n2) }), f2++, d2 = s2, t.Ja() && (_2 = this.Ha(n2 * c2, o3))));
    }
    this.$a.length = f2;
  }
  Ea() {
    return this.$a;
  }
  Ka() {
    return this.Li.P();
  }
  Ya() {
    return Math.ceil(2.5 * this.Ka());
  }
};
function mn(t) {
  return t.slice().sort((t2, i) => b(t2.Zi()) - b(i.Zi()));
}
var bn;
!function(t) {
  t[t.Normal = 0] = "Normal", t[t.Logarithmic = 1] = "Logarithmic", t[t.Percentage = 2] = "Percentage", t[t.IndexedTo100 = 3] = "IndexedTo100";
}(bn || (bn = {}));
var wn = new pt();
var gn = new vt(100, 1);
var Mn = class {
  constructor(t, i, n, s) {
    this.Qa = 0, this.io = null, this.Dh = null, this.no = null, this.so = { eo: false, ro: null }, this.ho = 0, this.lo = 0, this.ao = new R(), this.oo = new R(), this._o = [], this.uo = null, this.co = null, this.do = null, this.fo = null, this.da = gn, this.vo = fn(null), this.po = t, this.cn = i, this.mo = n, this.bo = s, this.wo = new pn(this, 100, this.Mo.bind(this), this.xo.bind(this));
  }
  xa() {
    return this.po;
  }
  W() {
    return this.cn;
  }
  Nh(t) {
    if (D(this.cn, t), this.Sa(), void 0 !== t.mode && this.So({ yr: t.mode }), void 0 !== t.scaleMargins) {
      const i = m(t.scaleMargins.top), n = m(t.scaleMargins.bottom);
      if (i < 0 || i > 1)
        throw new Error(`Invalid top margin - expect value between 0 and 1, given=${i}`);
      if (n < 0 || n > 1 || i + n > 1)
        throw new Error(`Invalid bottom margin - expect value between 0 and 1, given=${n}`);
      if (i + n > 1)
        throw new Error(`Invalid margins - sum of margins must be less than 1, given=${i + n}`);
      this.ko(), this.co = null;
    }
  }
  yo() {
    return this.cn.autoScale;
  }
  Ja() {
    return 1 === this.cn.mode;
  }
  ph() {
    return 2 === this.cn.mode;
  }
  Co() {
    return 3 === this.cn.mode;
  }
  yr() {
    return { Wn: this.cn.autoScale, To: this.cn.invertScale, yr: this.cn.mode };
  }
  So(t) {
    const i = this.yr();
    let n = null;
    void 0 !== t.Wn && (this.cn.autoScale = t.Wn), void 0 !== t.yr && (this.cn.mode = t.yr, 2 !== t.yr && 3 !== t.yr || (this.cn.autoScale = true), this.so.eo = false), 1 === i.yr && t.yr !== i.yr && (!function(t2, i2) {
      if (null === t2)
        return false;
      const n2 = un(t2.Sh(), i2), s2 = un(t2.kh(), i2);
      return isFinite(n2) && isFinite(s2);
    }(this.Dh, this.vo) ? this.cn.autoScale = true : (n = dn(this.Dh, this.vo), null !== n && this.Po(n))), 1 === t.yr && t.yr !== i.yr && (n = cn(this.Dh, this.vo), null !== n && this.Po(n));
    const s = i.yr !== this.cn.mode;
    s && (2 === i.yr || this.ph()) && this.Sa(), s && (3 === i.yr || this.Co()) && this.Sa(), void 0 !== t.To && i.To !== t.To && (this.cn.invertScale = t.To, this.Ro()), this.oo.m(i, this.yr());
  }
  Do() {
    return this.oo;
  }
  P() {
    return this.mo.fontSize;
  }
  zt() {
    return this.Qa;
  }
  Oo(t) {
    this.Qa !== t && (this.Qa = t, this.ko(), this.co = null);
  }
  Ao() {
    if (this.io)
      return this.io;
    const t = this.zt() - this.Vo() - this.Bo();
    return this.io = t, t;
  }
  Ah() {
    return this.Io(), this.Dh;
  }
  Po(t, i) {
    const n = this.Dh;
    (i || null === n && null !== t || null !== n && !n.Mh(t)) && (this.co = null, this.Dh = t);
  }
  Fi() {
    return this.Io(), 0 === this.Qa || !this.Dh || this.Dh.Fi();
  }
  zo(t) {
    return this.To() ? t : this.zt() - 1 - t;
  }
  Ot(t, i) {
    return this.ph() ? t = hn(t, i) : this.Co() && (t = an(t, i)), this.xo(t, i);
  }
  Qs(t, i, n) {
    this.Io();
    const s = this.Bo(), e2 = b(this.Ah()), r2 = e2.Sh(), h2 = e2.kh(), l2 = this.Ao() - 1, a2 = this.To(), o3 = l2 / (h2 - r2), _2 = void 0 === n ? 0 : n.from, u2 = void 0 === n ? t.length : n.to, c2 = this.Eo();
    for (let n2 = _2; n2 < u2; n2++) {
      const e3 = t[n2], h3 = e3.ct;
      if (isNaN(h3))
        continue;
      let l3 = h3;
      null !== c2 && (l3 = c2(e3.ct, i));
      const _3 = s + o3 * (l3 - r2), u3 = a2 ? _3 : this.Qa - 1 - _3;
      e3.rt = u3;
    }
  }
  me(t, i, n) {
    this.Io();
    const s = this.Bo(), e2 = b(this.Ah()), r2 = e2.Sh(), h2 = e2.kh(), l2 = this.Ao() - 1, a2 = this.To(), o3 = l2 / (h2 - r2), _2 = void 0 === n ? 0 : n.from, u2 = void 0 === n ? t.length : n.to, c2 = this.Eo();
    for (let n2 = _2; n2 < u2; n2++) {
      const e3 = t[n2];
      let h3 = e3.we, l3 = e3.ge, _3 = e3.Me, u3 = e3.xe;
      null !== c2 && (h3 = c2(e3.we, i), l3 = c2(e3.ge, i), _3 = c2(e3.Me, i), u3 = c2(e3.xe, i));
      let d2 = s + o3 * (h3 - r2), f2 = a2 ? d2 : this.Qa - 1 - d2;
      e3.ve = f2, d2 = s + o3 * (l3 - r2), f2 = a2 ? d2 : this.Qa - 1 - d2, e3.ce = f2, d2 = s + o3 * (_3 - r2), f2 = a2 ? d2 : this.Qa - 1 - d2, e3.de = f2, d2 = s + o3 * (u3 - r2), f2 = a2 ? d2 : this.Qa - 1 - d2, e3.pe = f2;
    }
  }
  pn(t, i) {
    const n = this.Mo(t, i);
    return this.Lo(n, i);
  }
  Lo(t, i) {
    let n = t;
    return this.ph() ? n = function(t2, i2) {
      return i2 < 0 && (t2 = -t2), t2 / 100 * i2 + i2;
    }(n, i) : this.Co() && (n = function(t2, i2) {
      return t2 -= 100, i2 < 0 && (t2 = -t2), t2 / 100 * i2 + i2;
    }(n, i)), n;
  }
  Ta() {
    return this._o;
  }
  No() {
    if (this.uo)
      return this.uo;
    let t = [];
    for (let i = 0; i < this._o.length; i++) {
      const n = this._o[i];
      null === n.Zi() && n.Gi(i + 1), t.push(n);
    }
    return t = mn(t), this.uo = t, this.uo;
  }
  Fo(t) {
    -1 === this._o.indexOf(t) && (this._o.push(t), this.Sa(), this.Wo());
  }
  jo(t) {
    const i = this._o.indexOf(t);
    if (-1 === i)
      throw new Error("source is not attached to scale");
    this._o.splice(i, 1), 0 === this._o.length && (this.So({ Wn: true }), this.Po(null)), this.Sa(), this.Wo();
  }
  Pt() {
    let t = null;
    for (const i of this._o) {
      const n = i.Pt();
      null !== n && ((null === t || n.ia < t.ia) && (t = n));
    }
    return null === t ? null : t.Vt;
  }
  To() {
    return this.cn.invertScale;
  }
  Ea() {
    const t = null === this.Pt();
    if (null !== this.co && (t || this.co.Ho === t))
      return this.co.Ea;
    this.wo.Xa();
    const i = this.wo.Ea();
    return this.co = { Ea: i, Ho: t }, this.ao.m(), i;
  }
  $o() {
    return this.ao;
  }
  Uo(t) {
    this.ph() || this.Co() || null === this.do && null === this.no && (this.Fi() || (this.do = this.Qa - t, this.no = b(this.Ah()).xh()));
  }
  qo(t) {
    if (this.ph() || this.Co())
      return;
    if (null === this.do)
      return;
    this.So({ Wn: false }), (t = this.Qa - t) < 0 && (t = 0);
    let i = (this.do + 0.2 * (this.Qa - 1)) / (t + 0.2 * (this.Qa - 1));
    const n = b(this.no).xh();
    i = Math.max(i, 0.1), n.Ch(i), this.Po(n);
  }
  Yo() {
    this.ph() || this.Co() || (this.do = null, this.no = null);
  }
  Xo(t) {
    this.yo() || null === this.fo && null === this.no && (this.Fi() || (this.fo = t, this.no = b(this.Ah()).xh()));
  }
  Ko(t) {
    if (this.yo())
      return;
    if (null === this.fo)
      return;
    const i = b(this.Ah()).yh() / (this.Ao() - 1);
    let n = t - this.fo;
    this.To() && (n *= -1);
    const s = n * i, e2 = b(this.no).xh();
    e2.Th(s), this.Po(e2, true), this.co = null;
  }
  Zo() {
    this.yo() || null !== this.fo && (this.fo = null, this.no = null);
  }
  ca() {
    return this.da || this.Sa(), this.da;
  }
  Wi(t, i) {
    switch (this.cn.mode) {
      case 2:
        return this.Go(hn(t, i));
      case 3:
        return this.ca().format(an(t, i));
      default:
        return this.zh(t);
    }
  }
  Ga(t) {
    switch (this.cn.mode) {
      case 2:
        return this.Go(t);
      case 3:
        return this.ca().format(t);
      default:
        return this.zh(t);
    }
  }
  Wl(t) {
    return this.zh(t, b(this.Jo()).ca());
  }
  jl(t, i) {
    return t = hn(t, i), this.Go(t, wn);
  }
  Qo() {
    return this._o;
  }
  t_(t) {
    this.so = { ro: t, eo: false };
  }
  On() {
    this._o.forEach((t) => t.On());
  }
  Sa() {
    this.co = null;
    const t = this.Jo();
    let i = 100;
    null !== t && (i = Math.round(1 / t.ua())), this.da = gn, this.ph() ? (this.da = wn, i = 100) : this.Co() ? (this.da = new vt(100, 1), i = 100) : null !== t && (this.da = t.ca()), this.wo = new pn(this, i, this.Mo.bind(this), this.xo.bind(this)), this.wo.Xa();
  }
  Wo() {
    this.uo = null;
  }
  Jo() {
    return this._o[0] || null;
  }
  Vo() {
    return this.To() ? this.cn.scaleMargins.bottom * this.zt() + this.lo : this.cn.scaleMargins.top * this.zt() + this.ho;
  }
  Bo() {
    return this.To() ? this.cn.scaleMargins.top * this.zt() + this.ho : this.cn.scaleMargins.bottom * this.zt() + this.lo;
  }
  Io() {
    this.so.eo || (this.so.eo = true, this.i_());
  }
  ko() {
    this.io = null;
  }
  xo(t, i) {
    if (this.Io(), this.Fi())
      return 0;
    t = this.Ja() && t ? _n(t, this.vo) : t;
    const n = b(this.Ah()), s = this.Bo() + (this.Ao() - 1) * (t - n.Sh()) / n.yh();
    return this.zo(s);
  }
  Mo(t, i) {
    if (this.Io(), this.Fi())
      return 0;
    const n = this.zo(t), s = b(this.Ah()), e2 = s.Sh() + s.yh() * ((n - this.Bo()) / (this.Ao() - 1));
    return this.Ja() ? un(e2, this.vo) : e2;
  }
  Ro() {
    this.co = null, this.wo.Xa();
  }
  i_() {
    const t = this.so.ro;
    if (null === t)
      return;
    let i = null;
    const n = this.Qo();
    let s = 0, e2 = 0;
    for (const r3 of n) {
      if (!r3.Tt())
        continue;
      const n2 = r3.Pt();
      if (null === n2)
        continue;
      const h3 = r3.Rl(t.Os(), t.di());
      let l2 = h3 && h3.Ah();
      if (null !== l2) {
        switch (this.cn.mode) {
          case 1:
            l2 = cn(l2, this.vo);
            break;
          case 2:
            l2 = ln(l2, n2.Vt);
            break;
          case 3:
            l2 = on(l2, n2.Vt);
        }
        if (i = null === i ? l2 : i.ts(b(l2)), null !== h3) {
          const t2 = h3.Vh();
          null !== t2 && (s = Math.max(s, t2.above), e2 = Math.max(s, t2.below));
        }
      }
    }
    if (s === this.ho && e2 === this.lo || (this.ho = s, this.lo = e2, this.co = null, this.ko()), null !== i) {
      if (i.Sh() === i.kh()) {
        const t2 = this.Jo(), n2 = 5 * (null === t2 || this.ph() || this.Co() ? 1 : t2.ua());
        this.Ja() && (i = dn(i, this.vo)), i = new Oi(i.Sh() - n2, i.kh() + n2), this.Ja() && (i = cn(i, this.vo));
      }
      if (this.Ja()) {
        const t2 = dn(i, this.vo), n2 = fn(t2);
        if (r2 = n2, h2 = this.vo, r2.La !== h2.La || r2.Na !== h2.Na) {
          const s2 = null !== this.no ? dn(this.no, this.vo) : null;
          this.vo = n2, i = cn(t2, n2), null !== s2 && (this.no = cn(s2, n2));
        }
      }
      this.Po(i);
    } else
      null === this.Dh && (this.Po(new Oi(-0.5, 0.5)), this.vo = fn(null));
    var r2, h2;
    this.so.eo = true;
  }
  Eo() {
    return this.ph() ? hn : this.Co() ? an : this.Ja() ? (t) => _n(t, this.vo) : null;
  }
  n_(t, i, n) {
    return void 0 === i ? (void 0 === n && (n = this.ca()), n.format(t)) : i(t);
  }
  zh(t, i) {
    return this.n_(t, this.bo.priceFormatter, i);
  }
  Go(t, i) {
    return this.n_(t, this.bo.percentageFormatter, i);
  }
};
var xn = class {
  constructor(t, i) {
    this._o = [], this.s_ = /* @__PURE__ */ new Map(), this.Qa = 0, this.e_ = 0, this.r_ = 1e3, this.uo = null, this.h_ = new R(), this.wl = t, this.Ui = i, this.l_ = new en(this);
    const n = i.W();
    this.a_ = this.o_("left", n.leftPriceScale), this.__ = this.o_("right", n.rightPriceScale), this.a_.Do().l(this.u_.bind(this, this.a_), this), this.__.Do().l(this.u_.bind(this, this.__), this), this.c_(n);
  }
  c_(t) {
    if (t.leftPriceScale && this.a_.Nh(t.leftPriceScale), t.rightPriceScale && this.__.Nh(t.rightPriceScale), t.localization && (this.a_.Sa(), this.__.Sa()), t.overlayPriceScales) {
      const i = Array.from(this.s_.values());
      for (const n of i) {
        const i2 = b(n[0].At());
        i2.Nh(t.overlayPriceScales), t.localization && i2.Sa();
      }
    }
  }
  d_(t) {
    switch (t) {
      case "left":
        return this.a_;
      case "right":
        return this.__;
    }
    return this.s_.has(t) ? m(this.s_.get(t))[0].At() : null;
  }
  S() {
    this.qt().f_().p(this), this.a_.Do().p(this), this.__.Do().p(this), this._o.forEach((t) => {
      t.S && t.S();
    }), this.h_.m();
  }
  v_() {
    return this.r_;
  }
  p_(t) {
    this.r_ = t;
  }
  qt() {
    return this.Ui;
  }
  $i() {
    return this.e_;
  }
  zt() {
    return this.Qa;
  }
  m_(t) {
    this.e_ = t, this.b_();
  }
  Oo(t) {
    this.Qa = t, this.a_.Oo(t), this.__.Oo(t), this._o.forEach((i) => {
      if (this.dr(i)) {
        const n = i.At();
        null !== n && n.Oo(t);
      }
    }), this.b_();
  }
  Ta() {
    return this._o;
  }
  dr(t) {
    const i = t.At();
    return null === i || this.a_ !== i && this.__ !== i;
  }
  Fo(t, i, n) {
    const s = void 0 !== n ? n : this.g_().w_ + 1;
    this.M_(t, i, s);
  }
  jo(t) {
    const i = this._o.indexOf(t);
    p(-1 !== i, "removeDataSource: invalid data source"), this._o.splice(i, 1);
    const n = b(t.At()).xa();
    if (this.s_.has(n)) {
      const i2 = m(this.s_.get(n)), s2 = i2.indexOf(t);
      -1 !== s2 && (i2.splice(s2, 1), 0 === i2.length && this.s_.delete(n));
    }
    const s = t.At();
    s && s.Ta().indexOf(t) >= 0 && s.jo(t), null !== s && (s.Wo(), this.x_(s)), this.uo = null;
  }
  pr(t) {
    return t === this.a_ ? "left" : t === this.__ ? "right" : "overlay";
  }
  S_() {
    return this.a_;
  }
  k_() {
    return this.__;
  }
  y_(t, i) {
    t.Uo(i);
  }
  C_(t, i) {
    t.qo(i), this.b_();
  }
  T_(t) {
    t.Yo();
  }
  P_(t, i) {
    t.Xo(i);
  }
  R_(t, i) {
    t.Ko(i), this.b_();
  }
  D_(t) {
    t.Zo();
  }
  b_() {
    this._o.forEach((t) => {
      t.On();
    });
  }
  vn() {
    let t = null;
    return this.Ui.W().rightPriceScale.visible && 0 !== this.__.Ta().length ? t = this.__ : this.Ui.W().leftPriceScale.visible && 0 !== this.a_.Ta().length ? t = this.a_ : 0 !== this._o.length && (t = this._o[0].At()), null === t && (t = this.__), t;
  }
  vr() {
    let t = null;
    return this.Ui.W().rightPriceScale.visible ? t = this.__ : this.Ui.W().leftPriceScale.visible && (t = this.a_), t;
  }
  x_(t) {
    null !== t && t.yo() && this.O_(t);
  }
  A_(t) {
    const i = this.wl.Xs();
    t.So({ Wn: true }), null !== i && t.t_(i), this.b_();
  }
  V_() {
    this.O_(this.a_), this.O_(this.__);
  }
  B_() {
    this.x_(this.a_), this.x_(this.__), this._o.forEach((t) => {
      this.dr(t) && this.x_(t.At());
    }), this.b_(), this.Ui.Fh();
  }
  No() {
    return null === this.uo && (this.uo = mn(this._o)), this.uo;
  }
  I_() {
    return this.h_;
  }
  z_() {
    return this.l_;
  }
  O_(t) {
    const i = t.Qo();
    if (i && i.length > 0 && !this.wl.Fi()) {
      const i2 = this.wl.Xs();
      null !== i2 && t.t_(i2);
    }
    t.On();
  }
  g_() {
    const t = this.No();
    if (0 === t.length)
      return { E_: 0, w_: 0 };
    let i = 0, n = 0;
    for (let s = 0; s < t.length; s++) {
      const e2 = t[s].Zi();
      null !== e2 && (e2 < i && (i = e2), e2 > n && (n = e2));
    }
    return { E_: i, w_: n };
  }
  M_(t, i, n) {
    let s = this.d_(i);
    if (null === s && (s = this.o_(i, this.Ui.W().overlayPriceScales)), this._o.push(t), !ut(i)) {
      const n2 = this.s_.get(i) || [];
      n2.push(t), this.s_.set(i, n2);
    }
    s.Fo(t), t.Ji(s), t.Gi(n), this.x_(s), this.uo = null;
  }
  u_(t, i, n) {
    i.yr !== n.yr && this.O_(t);
  }
  o_(t, i) {
    const n = Object.assign({ visible: true, autoScale: true }, I(i)), s = new Mn(t, n, this.Ui.W().layout, this.Ui.W().localization);
    return s.Oo(this.zt()), s;
  }
};
var Sn = class {
  constructor(t, i, n = 50) {
    this.Ke = 0, this.Ze = 1, this.Ge = 1, this.Qe = /* @__PURE__ */ new Map(), this.Je = /* @__PURE__ */ new Map(), this.L_ = t, this.N_ = i, this.tr = n;
  }
  F_(t) {
    const i = t.time, n = this.N_.cacheKey(i), s = this.Qe.get(n);
    if (void 0 !== s)
      return s.W_;
    if (this.Ke === this.tr) {
      const t2 = this.Je.get(this.Ge);
      this.Je.delete(this.Ge), this.Qe.delete(m(t2)), this.Ge++, this.Ke--;
    }
    const e2 = this.L_(t);
    return this.Qe.set(n, { W_: e2, er: this.Ze }), this.Je.set(this.Ze, n), this.Ke++, this.Ze++, e2;
  }
};
var kn = class {
  constructor(t, i) {
    p(t <= i, "right should be >= left"), this.j_ = t, this.H_ = i;
  }
  Os() {
    return this.j_;
  }
  di() {
    return this.H_;
  }
  U_() {
    return this.H_ - this.j_ + 1;
  }
  Kr(t) {
    return this.j_ <= t && t <= this.H_;
  }
  Mh(t) {
    return this.j_ === t.Os() && this.H_ === t.di();
  }
};
function yn(t, i) {
  return null === t || null === i ? t === i : t.Mh(i);
}
var Cn = class {
  constructor() {
    this.q_ = /* @__PURE__ */ new Map(), this.Qe = null, this.Y_ = false;
  }
  X_(t) {
    this.Y_ = t, this.Qe = null;
  }
  K_(t, i) {
    this.Z_(i), this.Qe = null;
    for (let n = i; n < t.length; ++n) {
      const i2 = t[n];
      let s = this.q_.get(i2.timeWeight);
      void 0 === s && (s = [], this.q_.set(i2.timeWeight, s)), s.push({ index: n, time: i2.time, weight: i2.timeWeight, originalTime: i2.originalTime });
    }
  }
  G_(t, i) {
    const n = Math.ceil(i / t);
    return null !== this.Qe && this.Qe.J_ === n || (this.Qe = { Ea: this.Q_(n), J_: n }), this.Qe.Ea;
  }
  Z_(t) {
    if (0 === t)
      return void this.q_.clear();
    const i = [];
    this.q_.forEach((n, s) => {
      t <= n[0].index ? i.push(s) : n.splice(Bt(n, t, (i2) => i2.index < t), 1 / 0);
    });
    for (const t2 of i)
      this.q_.delete(t2);
  }
  Q_(t) {
    let i = [];
    for (const n of Array.from(this.q_.keys()).sort((t2, i2) => i2 - t2)) {
      if (!this.q_.get(n))
        continue;
      const s = i;
      i = [];
      const e2 = s.length;
      let r2 = 0;
      const h2 = m(this.q_.get(n)), l2 = h2.length;
      let a2 = 1 / 0, o3 = -1 / 0;
      for (let n2 = 0; n2 < l2; n2++) {
        const l3 = h2[n2], _2 = l3.index;
        for (; r2 < e2; ) {
          const t2 = s[r2], n3 = t2.index;
          if (!(n3 < _2)) {
            a2 = n3;
            break;
          }
          r2++, i.push(t2), o3 = n3, a2 = 1 / 0;
        }
        if (a2 - _2 >= t && _2 - o3 >= t)
          i.push(l3), o3 = _2;
        else if (this.Y_)
          return s;
      }
      for (; r2 < e2; r2++)
        i.push(s[r2]);
    }
    return i;
  }
};
var Tn = class {
  constructor(t) {
    this.tu = t;
  }
  iu() {
    return null === this.tu ? null : new kn(Math.floor(this.tu.Os()), Math.ceil(this.tu.di()));
  }
  nu() {
    return this.tu;
  }
  static su() {
    return new Tn(null);
  }
};
function Pn(t, i) {
  return t.weight > i.weight ? t : i;
}
var Rn = class {
  constructor(t, i, n, s) {
    this.e_ = 0, this.eu = null, this.ru = [], this.fo = null, this.do = null, this.hu = new Cn(), this.lu = /* @__PURE__ */ new Map(), this.au = Tn.su(), this.ou = true, this._u = new R(), this.uu = new R(), this.cu = new R(), this.du = null, this.fu = null, this.vu = [], this.cn = i, this.bo = n, this.pu = i.rightOffset, this.mu = i.barSpacing, this.Ui = t, this.N_ = s, this.bu(), this.hu.X_(i.uniformDistribution);
  }
  W() {
    return this.cn;
  }
  wu(t) {
    D(this.bo, t), this.gu(), this.bu();
  }
  Nh(t, i) {
    var n;
    D(this.cn, t), this.cn.fixLeftEdge && this.Mu(), this.cn.fixRightEdge && this.xu(), void 0 !== t.barSpacing && this.Ui.Gn(t.barSpacing), void 0 !== t.rightOffset && this.Ui.Jn(t.rightOffset), void 0 !== t.minBarSpacing && this.Ui.Gn(null !== (n = t.barSpacing) && void 0 !== n ? n : this.mu), this.gu(), this.bu(), this.cu.m();
  }
  mn(t) {
    var i, n;
    return null !== (n = null === (i = this.ru[t]) || void 0 === i ? void 0 : i.time) && void 0 !== n ? n : null;
  }
  qi(t) {
    var i;
    return null !== (i = this.ru[t]) && void 0 !== i ? i : null;
  }
  ya(t, i) {
    if (this.ru.length < 1)
      return null;
    if (this.N_.key(t) > this.N_.key(this.ru[this.ru.length - 1].time))
      return i ? this.ru.length - 1 : null;
    const n = Bt(this.ru, this.N_.key(t), (t2, i2) => this.N_.key(t2.time) < i2);
    return this.N_.key(t) < this.N_.key(this.ru[n].time) ? i ? n : null : n;
  }
  Fi() {
    return 0 === this.e_ || 0 === this.ru.length || null === this.eu;
  }
  ka() {
    return this.ru.length > 0;
  }
  Xs() {
    return this.Su(), this.au.iu();
  }
  ku() {
    return this.Su(), this.au.nu();
  }
  yu() {
    const t = this.Xs();
    if (null === t)
      return null;
    const i = { from: t.Os(), to: t.di() };
    return this.Cu(i);
  }
  Cu(t) {
    const i = Math.round(t.from), n = Math.round(t.to), s = b(this.Tu()), e2 = b(this.Pu());
    return { from: b(this.qi(Math.max(s, i))), to: b(this.qi(Math.min(e2, n))) };
  }
  Ru(t) {
    return { from: b(this.ya(t.from, true)), to: b(this.ya(t.to, true)) };
  }
  $i() {
    return this.e_;
  }
  m_(t) {
    if (!isFinite(t) || t <= 0)
      return;
    if (this.e_ === t)
      return;
    const i = this.ku(), n = this.e_;
    if (this.e_ = t, this.ou = true, this.cn.lockVisibleTimeRangeOnResize && 0 !== n) {
      const i2 = this.mu * t / n;
      this.mu = i2;
    }
    if (this.cn.fixLeftEdge && null !== i && i.Os() <= 0) {
      const i2 = n - t;
      this.pu -= Math.round(i2 / this.mu) + 1, this.ou = true;
    }
    this.Du(), this.Ou();
  }
  Et(t) {
    if (this.Fi() || !A(t))
      return 0;
    const i = this.Au() + this.pu - t;
    return this.e_ - (i + 0.5) * this.mu - 1;
  }
  Js(t, i) {
    const n = this.Au(), s = void 0 === i ? 0 : i.from, e2 = void 0 === i ? t.length : i.to;
    for (let i2 = s; i2 < e2; i2++) {
      const s2 = t[i2].ut, e3 = n + this.pu - s2, r2 = this.e_ - (e3 + 0.5) * this.mu - 1;
      t[i2].et = r2;
    }
  }
  Vu(t) {
    return Math.ceil(this.Bu(t));
  }
  Jn(t) {
    this.ou = true, this.pu = t, this.Ou(), this.Ui.Iu(), this.Ui.Fh();
  }
  he() {
    return this.mu;
  }
  Gn(t) {
    this.zu(t), this.Ou(), this.Ui.Iu(), this.Ui.Fh();
  }
  Eu() {
    return this.pu;
  }
  Ea() {
    if (this.Fi())
      return null;
    if (null !== this.fu)
      return this.fu;
    const t = this.mu, i = 5 * (this.Ui.W().layout.fontSize + 4) / 8 * (this.cn.tickMarkMaxCharacterLength || 8), n = Math.round(i / t), s = b(this.Xs()), e2 = Math.max(s.Os(), s.Os() - n), r2 = Math.max(s.di(), s.di() - n), h2 = this.hu.G_(t, i), l2 = this.Tu() + n, a2 = this.Pu() - n, o3 = this.Lu(), _2 = this.cn.fixLeftEdge || o3, u2 = this.cn.fixRightEdge || o3;
    let c2 = 0;
    for (const t2 of h2) {
      if (!(e2 <= t2.index && t2.index <= r2))
        continue;
      let n2;
      c2 < this.vu.length ? (n2 = this.vu[c2], n2.coord = this.Et(t2.index), n2.label = this.Nu(t2), n2.weight = t2.weight) : (n2 = { needAlignCoordinate: false, coord: this.Et(t2.index), label: this.Nu(t2), weight: t2.weight }, this.vu.push(n2)), this.mu > i / 2 && !o3 ? n2.needAlignCoordinate = false : n2.needAlignCoordinate = _2 && t2.index <= l2 || u2 && t2.index >= a2, c2++;
    }
    return this.vu.length = c2, this.fu = this.vu, this.vu;
  }
  Fu() {
    this.ou = true, this.Gn(this.cn.barSpacing), this.Jn(this.cn.rightOffset);
  }
  Wu(t) {
    this.ou = true, this.eu = t, this.Ou(), this.Mu();
  }
  ju(t, i) {
    const n = this.Bu(t), s = this.he(), e2 = s + i * (s / 10);
    this.Gn(e2), this.cn.rightBarStaysOnScroll || this.Jn(this.Eu() + (n - this.Bu(t)));
  }
  Uo(t) {
    this.fo && this.Zo(), null === this.do && null === this.du && (this.Fi() || (this.do = t, this.Hu()));
  }
  qo(t) {
    if (null === this.du)
      return;
    const i = yt(this.e_ - t, 0, this.e_), n = yt(this.e_ - b(this.do), 0, this.e_);
    0 !== i && 0 !== n && this.Gn(this.du.he * i / n);
  }
  Yo() {
    null !== this.do && (this.do = null, this.$u());
  }
  Xo(t) {
    null === this.fo && null === this.du && (this.Fi() || (this.fo = t, this.Hu()));
  }
  Ko(t) {
    if (null === this.fo)
      return;
    const i = (this.fo - t) / this.he();
    this.pu = b(this.du).Eu + i, this.ou = true, this.Ou();
  }
  Zo() {
    null !== this.fo && (this.fo = null, this.$u());
  }
  Uu() {
    this.qu(this.cn.rightOffset);
  }
  qu(t, i = 400) {
    if (!isFinite(t))
      throw new RangeError("offset is required and must be finite number");
    if (!isFinite(i) || i <= 0)
      throw new RangeError("animationDuration (optional) must be finite positive number");
    const n = this.pu, s = performance.now();
    this.Ui.Xn({ Yu: (t2) => (t2 - s) / i >= 1, Xu: (e2) => {
      const r2 = (e2 - s) / i;
      return r2 >= 1 ? t : n + (t - n) * r2;
    } });
  }
  gt(t, i) {
    this.ou = true, this.ru = t, this.hu.K_(t, i), this.Ou();
  }
  Ku() {
    return this._u;
  }
  Zu() {
    return this.uu;
  }
  Gu() {
    return this.cu;
  }
  Au() {
    return this.eu || 0;
  }
  Ju(t) {
    const i = t.U_();
    this.zu(this.e_ / i), this.pu = t.di() - this.Au(), this.Ou(), this.ou = true, this.Ui.Iu(), this.Ui.Fh();
  }
  Qu() {
    const t = this.Tu(), i = this.Pu();
    null !== t && null !== i && this.Ju(new kn(t, i + this.cn.rightOffset));
  }
  tc(t) {
    const i = new kn(t.from, t.to);
    this.Ju(i);
  }
  Yi(t) {
    return void 0 !== this.bo.timeFormatter ? this.bo.timeFormatter(t.originalTime) : this.N_.formatHorzItem(t.time);
  }
  Lu() {
    const { handleScroll: t, handleScale: i } = this.Ui.W();
    return !(t.horzTouchDrag || t.mouseWheel || t.pressedMouseMove || t.vertTouchDrag || i.axisDoubleClickReset.time || i.axisPressedMouseMove.time || i.mouseWheel || i.pinch);
  }
  Tu() {
    return 0 === this.ru.length ? null : 0;
  }
  Pu() {
    return 0 === this.ru.length ? null : this.ru.length - 1;
  }
  ic(t) {
    return (this.e_ - 1 - t) / this.mu;
  }
  Bu(t) {
    const i = this.ic(t), n = this.Au() + this.pu - i;
    return Math.round(1e6 * n) / 1e6;
  }
  zu(t) {
    const i = this.mu;
    this.mu = t, this.Du(), i !== this.mu && (this.ou = true, this.nc());
  }
  Su() {
    if (!this.ou)
      return;
    if (this.ou = false, this.Fi())
      return void this.sc(Tn.su());
    const t = this.Au(), i = this.e_ / this.mu, n = this.pu + t, s = new kn(n - i + 1, n);
    this.sc(new Tn(s));
  }
  Du() {
    const t = this.ec();
    if (this.mu < t && (this.mu = t, this.ou = true), 0 !== this.e_) {
      const t2 = 0.5 * this.e_;
      this.mu > t2 && (this.mu = t2, this.ou = true);
    }
  }
  ec() {
    return this.cn.fixLeftEdge && this.cn.fixRightEdge && 0 !== this.ru.length ? this.e_ / this.ru.length : this.cn.minBarSpacing;
  }
  Ou() {
    const t = this.rc();
    this.pu > t && (this.pu = t, this.ou = true);
    const i = this.hc();
    null !== i && this.pu < i && (this.pu = i, this.ou = true);
  }
  hc() {
    const t = this.Tu(), i = this.eu;
    if (null === t || null === i)
      return null;
    return t - i - 1 + (this.cn.fixLeftEdge ? this.e_ / this.mu : Math.min(2, this.ru.length));
  }
  rc() {
    return this.cn.fixRightEdge ? 0 : this.e_ / this.mu - Math.min(2, this.ru.length);
  }
  Hu() {
    this.du = { he: this.he(), Eu: this.Eu() };
  }
  $u() {
    this.du = null;
  }
  Nu(t) {
    let i = this.lu.get(t.weight);
    return void 0 === i && (i = new Sn((t2) => this.lc(t2), this.N_), this.lu.set(t.weight, i)), i.F_(t);
  }
  lc(t) {
    return this.N_.formatTickmark(t, this.bo);
  }
  sc(t) {
    const i = this.au;
    this.au = t, yn(i.iu(), this.au.iu()) || this._u.m(), yn(i.nu(), this.au.nu()) || this.uu.m(), this.nc();
  }
  nc() {
    this.fu = null;
  }
  gu() {
    this.nc(), this.lu.clear();
  }
  bu() {
    this.N_.updateFormatter(this.bo);
  }
  Mu() {
    if (!this.cn.fixLeftEdge)
      return;
    const t = this.Tu();
    if (null === t)
      return;
    const i = this.Xs();
    if (null === i)
      return;
    const n = i.Os() - t;
    if (n < 0) {
      const t2 = this.pu - n - 1;
      this.Jn(t2);
    }
    this.Du();
  }
  xu() {
    this.Ou(), this.Du();
  }
};
var Dn = class extends j {
  constructor(t) {
    super(), this.ac = /* @__PURE__ */ new Map(), this.Lt = t;
  }
  Z(t) {
  }
  J(t) {
    if (!this.Lt.Tt)
      return;
    const { context: i, mediaSize: n } = t;
    let s = 0;
    for (const t2 of this.Lt.oc) {
      if (0 === t2.Jt.length)
        continue;
      i.font = t2.R;
      const e3 = this._c(i, t2.Jt);
      e3 > n.width ? t2.ju = n.width / e3 : t2.ju = 1, s += t2.uc * t2.ju;
    }
    let e2 = 0;
    switch (this.Lt.cc) {
      case "top":
        e2 = 0;
        break;
      case "center":
        e2 = Math.max((n.height - s) / 2, 0);
        break;
      case "bottom":
        e2 = Math.max(n.height - s, 0);
    }
    i.fillStyle = this.Lt.O;
    for (const t2 of this.Lt.oc) {
      i.save();
      let s2 = 0;
      switch (this.Lt.dc) {
        case "left":
          i.textAlign = "left", s2 = t2.uc / 2;
          break;
        case "center":
          i.textAlign = "center", s2 = n.width / 2;
          break;
        case "right":
          i.textAlign = "right", s2 = n.width - 1 - t2.uc / 2;
      }
      i.translate(s2, e2), i.textBaseline = "top", i.font = t2.R, i.scale(t2.ju, t2.ju), i.fillText(t2.Jt, 0, t2.fc), i.restore(), e2 += t2.uc * t2.ju;
    }
  }
  _c(t, i) {
    const n = this.vc(t.font);
    let s = n.get(i);
    return void 0 === s && (s = t.measureText(i).width, n.set(i, s)), s;
  }
  vc(t) {
    let i = this.ac.get(t);
    return void 0 === i && (i = /* @__PURE__ */ new Map(), this.ac.set(t, i)), i;
  }
};
var On = class {
  constructor(t) {
    this.bt = true, this.jt = { Tt: false, O: "", oc: [], cc: "center", dc: "center" }, this.Ht = new Dn(this.jt), this.$t = t;
  }
  gt() {
    this.bt = true;
  }
  xt() {
    return this.bt && (this.St(), this.bt = false), this.Ht;
  }
  St() {
    const t = this.$t.W(), i = this.jt;
    i.Tt = t.visible, i.Tt && (i.O = t.color, i.dc = t.horzAlign, i.cc = t.vertAlign, i.oc = [{ Jt: t.text, R: N(t.fontSize, t.fontFamily, t.fontStyle), uc: 1.2 * t.fontSize, fc: 0, ju: 0 }]);
  }
};
var An = class extends at {
  constructor(t, i) {
    super(), this.cn = i, this.wn = new On(this);
  }
  Rn() {
    return [];
  }
  Pn() {
    return [this.wn];
  }
  W() {
    return this.cn;
  }
  On() {
    this.wn.gt();
  }
};
var Vn;
var Bn;
var In;
var zn;
var En;
!function(t) {
  t[t.OnTouchEnd = 0] = "OnTouchEnd", t[t.OnNextTap = 1] = "OnNextTap";
}(Vn || (Vn = {}));
var Ln = class {
  constructor(t, i, n) {
    this.mc = [], this.bc = [], this.e_ = 0, this.wc = null, this.gc = new R(), this.Mc = new R(), this.xc = null, this.Sc = t, this.cn = i, this.N_ = n, this.kc = new F(this), this.wl = new Rn(this, i.timeScale, this.cn.localization, n), this.wt = new _t(this, i.crosshair), this.yc = new tn(i.crosshair), this.Cc = new An(this, i.watermark), this.Tc(), this.mc[0].p_(2e3), this.Pc = this.Rc(0), this.Dc = this.Rc(1);
  }
  $l() {
    this.Oc(ct.es());
  }
  Fh() {
    this.Oc(ct.ss());
  }
  sa() {
    this.Oc(new ct(1));
  }
  Ul(t) {
    const i = this.Ac(t);
    this.Oc(i);
  }
  Vc() {
    return this.wc;
  }
  Bc(t) {
    const i = this.wc;
    this.wc = t, null !== i && this.Ul(i.Ic), null !== t && this.Ul(t.Ic);
  }
  W() {
    return this.cn;
  }
  Nh(t) {
    D(this.cn, t), this.mc.forEach((i) => i.c_(t)), void 0 !== t.timeScale && this.wl.Nh(t.timeScale), void 0 !== t.localization && this.wl.wu(t.localization), (t.leftPriceScale || t.rightPriceScale) && this.gc.m(), this.Pc = this.Rc(0), this.Dc = this.Rc(1), this.$l();
  }
  zc(t, i) {
    if ("left" === t)
      return void this.Nh({ leftPriceScale: i });
    if ("right" === t)
      return void this.Nh({ rightPriceScale: i });
    const n = this.Ec(t);
    null !== n && (n.At.Nh(i), this.gc.m());
  }
  Ec(t) {
    for (const i of this.mc) {
      const n = i.d_(t);
      if (null !== n)
        return { Ut: i, At: n };
    }
    return null;
  }
  yt() {
    return this.wl;
  }
  Lc() {
    return this.mc;
  }
  Nc() {
    return this.Cc;
  }
  Fc() {
    return this.wt;
  }
  Wc() {
    return this.Mc;
  }
  jc(t, i) {
    t.Oo(i), this.Iu();
  }
  m_(t) {
    this.e_ = t, this.wl.m_(this.e_), this.mc.forEach((i) => i.m_(t)), this.Iu();
  }
  Tc(t) {
    const i = new xn(this.wl, this);
    void 0 !== t ? this.mc.splice(t, 0, i) : this.mc.push(i);
    const n = void 0 === t ? this.mc.length - 1 : t, s = ct.es();
    return s.Nn(n, { Fn: 0, Wn: true }), this.Oc(s), i;
  }
  y_(t, i, n) {
    t.y_(i, n);
  }
  C_(t, i, n) {
    t.C_(i, n), this.ql(), this.Oc(this.Hc(t, 2));
  }
  T_(t, i) {
    t.T_(i), this.Oc(this.Hc(t, 2));
  }
  P_(t, i, n) {
    i.yo() || t.P_(i, n);
  }
  R_(t, i, n) {
    i.yo() || (t.R_(i, n), this.ql(), this.Oc(this.Hc(t, 2)));
  }
  D_(t, i) {
    i.yo() || (t.D_(i), this.Oc(this.Hc(t, 2)));
  }
  A_(t, i) {
    t.A_(i), this.Oc(this.Hc(t, 2));
  }
  $c(t) {
    this.wl.Uo(t);
  }
  Uc(t, i) {
    const n = this.yt();
    if (n.Fi() || 0 === i)
      return;
    const s = n.$i();
    t = Math.max(1, Math.min(t, s)), n.ju(t, i), this.Iu();
  }
  qc(t) {
    this.Yc(0), this.Xc(t), this.Kc();
  }
  Zc(t) {
    this.wl.qo(t), this.Iu();
  }
  Gc() {
    this.wl.Yo(), this.Fh();
  }
  Yc(t) {
    this.wl.Xo(t);
  }
  Xc(t) {
    this.wl.Ko(t), this.Iu();
  }
  Kc() {
    this.wl.Zo(), this.Fh();
  }
  Mt() {
    return this.bc;
  }
  Jc(t, i, n, s) {
    this.wt.gn(t, i);
    let e2 = NaN, r2 = this.wl.Vu(t);
    const h2 = this.wl.Xs();
    null !== h2 && (r2 = Math.min(Math.max(h2.Os(), r2), h2.di()));
    const l2 = s.vn(), a2 = l2.Pt();
    null !== a2 && (e2 = l2.pn(i, a2)), e2 = this.yc.Ca(e2, r2, s), this.wt.kn(r2, e2, s), this.sa(), this.Mc.m(this.wt.kt(), { x: t, y: i }, n);
  }
  Qc() {
    this.Fc().Cn(), this.sa(), this.Mc.m(null, null, null);
  }
  ql() {
    const t = this.wt.Ut();
    if (null !== t) {
      const i = this.wt.xn(), n = this.wt.Sn();
      this.Jc(i, n, null, t);
    }
    this.wt.On();
  }
  td(t, i, n) {
    const s = this.wl.mn(0);
    void 0 !== i && void 0 !== n && this.wl.gt(i, n);
    const e2 = this.wl.mn(0), r2 = this.wl.Au(), h2 = this.wl.Xs();
    if (null !== h2 && null !== s && null !== e2) {
      const i2 = h2.Kr(r2), n2 = this.N_.key(s) > this.N_.key(e2), l2 = null !== t && t > r2 && !n2, a2 = i2 && this.wl.W().shiftVisibleRangeOnNewBar;
      if (l2 && !a2) {
        const i3 = t - r2;
        this.wl.Jn(this.wl.Eu() - i3);
      }
    }
    this.wl.Wu(t);
  }
  Kl(t) {
    null !== t && t.B_();
  }
  cr(t) {
    const i = this.mc.find((i2) => i2.No().includes(t));
    return void 0 === i ? null : i;
  }
  Iu() {
    this.Cc.On(), this.mc.forEach((t) => t.B_()), this.ql();
  }
  S() {
    this.mc.forEach((t) => t.S()), this.mc.length = 0, this.cn.localization.priceFormatter = void 0, this.cn.localization.percentageFormatter = void 0, this.cn.localization.timeFormatter = void 0;
  }
  nd() {
    return this.kc;
  }
  mr() {
    return this.kc.W();
  }
  f_() {
    return this.gc;
  }
  sd(t, i, n) {
    const s = this.mc[0], e2 = this.ed(i, t, s, n);
    return this.bc.push(e2), 1 === this.bc.length ? this.$l() : this.Fh(), e2;
  }
  rd(t) {
    const i = this.cr(t), n = this.bc.indexOf(t);
    p(-1 !== n, "Series not found"), this.bc.splice(n, 1), b(i).jo(t), t.S && t.S();
  }
  Hl(t, i) {
    const n = b(this.cr(t));
    n.jo(t);
    const s = this.Ec(i);
    if (null === s) {
      const s2 = t.Zi();
      n.Fo(t, i, s2);
    } else {
      const e2 = s.Ut === n ? t.Zi() : void 0;
      s.Ut.Fo(t, i, e2);
    }
  }
  Qu() {
    const t = ct.ss();
    t.$n(), this.Oc(t);
  }
  hd(t) {
    const i = ct.ss();
    i.Yn(t), this.Oc(i);
  }
  Zn() {
    const t = ct.ss();
    t.Zn(), this.Oc(t);
  }
  Gn(t) {
    const i = ct.ss();
    i.Gn(t), this.Oc(i);
  }
  Jn(t) {
    const i = ct.ss();
    i.Jn(t), this.Oc(i);
  }
  Xn(t) {
    const i = ct.ss();
    i.Xn(t), this.Oc(i);
  }
  Un() {
    const t = ct.ss();
    t.Un(), this.Oc(t);
  }
  ld() {
    return this.cn.rightPriceScale.visible ? "right" : "left";
  }
  ad() {
    return this.Dc;
  }
  q() {
    return this.Pc;
  }
  It(t) {
    const i = this.Dc, n = this.Pc;
    if (i === n)
      return i;
    if (t = Math.max(0, Math.min(100, Math.round(100 * t))), null === this.xc || this.xc.Ts !== n || this.xc.Ps !== i)
      this.xc = { Ts: n, Ps: i, od: /* @__PURE__ */ new Map() };
    else {
      const i2 = this.xc.od.get(t);
      if (void 0 !== i2)
        return i2;
    }
    const s = function(t2, i2, n2) {
      const [s2, e2, r2, h2] = T(t2), [l2, a2, o3, _2] = T(i2), u2 = [M(s2 + n2 * (l2 - s2)), M(e2 + n2 * (a2 - e2)), M(r2 + n2 * (o3 - r2)), x(h2 + n2 * (_2 - h2))];
      return `rgba(${u2[0]}, ${u2[1]}, ${u2[2]}, ${u2[3]})`;
    }(n, i, t / 100);
    return this.xc.od.set(t, s), s;
  }
  Hc(t, i) {
    const n = new ct(i);
    if (null !== t) {
      const s = this.mc.indexOf(t);
      n.Nn(s, { Fn: i });
    }
    return n;
  }
  Ac(t, i) {
    return void 0 === i && (i = 2), this.Hc(this.cr(t), i);
  }
  Oc(t) {
    this.Sc && this.Sc(t), this.mc.forEach((t2) => t2.z_().Wh().gt());
  }
  ed(t, i, n, s) {
    const e2 = new Qi(this, t, i, n, s), r2 = void 0 !== t.priceScaleId ? t.priceScaleId : this.ld();
    return n.Fo(e2, r2), ut(r2) || e2.Nh(t), e2;
  }
  Rc(t) {
    const i = this.cn.layout;
    return "gradient" === i.background.type ? 0 === t ? i.background.topColor : i.background.bottomColor : i.background.color;
  }
};
function Nn(t) {
  return !O(t) && !V(t);
}
function Fn(t) {
  return O(t);
}
!function(t) {
  t[t.Disabled = 0] = "Disabled", t[t.Continuous = 1] = "Continuous", t[t.OnDataUpdate = 2] = "OnDataUpdate";
}(Bn || (Bn = {})), function(t) {
  t[t.LastBar = 0] = "LastBar", t[t.LastVisible = 1] = "LastVisible";
}(In || (In = {})), function(t) {
  t.Solid = "solid", t.VerticalGradient = "gradient";
}(zn || (zn = {})), function(t) {
  t[t.Year = 0] = "Year", t[t.Month = 1] = "Month", t[t.DayOfMonth = 2] = "DayOfMonth", t[t.Time = 3] = "Time", t[t.TimeWithSeconds = 4] = "TimeWithSeconds";
}(En || (En = {}));
var Wn = (t) => t.getUTCFullYear();
function jn(t, i, n) {
  return i.replace(/yyyy/g, ((t2) => ft(Wn(t2), 4))(t)).replace(/yy/g, ((t2) => ft(Wn(t2) % 100, 2))(t)).replace(/MMMM/g, ((t2, i2) => new Date(t2.getUTCFullYear(), t2.getUTCMonth(), 1).toLocaleString(i2, { month: "long" }))(t, n)).replace(/MMM/g, ((t2, i2) => new Date(t2.getUTCFullYear(), t2.getUTCMonth(), 1).toLocaleString(i2, { month: "short" }))(t, n)).replace(/MM/g, ((t2) => ft(((t3) => t3.getUTCMonth() + 1)(t2), 2))(t)).replace(/dd/g, ((t2) => ft(((t3) => t3.getUTCDate())(t2), 2))(t));
}
var Hn = class {
  constructor(t = "yyyy-MM-dd", i = "default") {
    this._d = t, this.ud = i;
  }
  F_(t) {
    return jn(t, this._d, this.ud);
  }
};
var $n = class {
  constructor(t) {
    this.dd = t || "%h:%m:%s";
  }
  F_(t) {
    return this.dd.replace("%h", ft(t.getUTCHours(), 2)).replace("%m", ft(t.getUTCMinutes(), 2)).replace("%s", ft(t.getUTCSeconds(), 2));
  }
};
var Un = { fd: "yyyy-MM-dd", vd: "%h:%m:%s", pd: " ", md: "default" };
var qn = class {
  constructor(t = {}) {
    const i = Object.assign(Object.assign({}, Un), t);
    this.bd = new Hn(i.fd, i.md), this.wd = new $n(i.vd), this.gd = i.pd;
  }
  F_(t) {
    return `${this.bd.F_(t)}${this.gd}${this.wd.F_(t)}`;
  }
};
function Yn(t) {
  return 60 * t * 60 * 1e3;
}
function Xn(t) {
  return 60 * t * 1e3;
}
var Kn = [{ Md: (Zn = 1, 1e3 * Zn), xd: 10 }, { Md: Xn(1), xd: 20 }, { Md: Xn(5), xd: 21 }, { Md: Xn(30), xd: 22 }, { Md: Yn(1), xd: 30 }, { Md: Yn(3), xd: 31 }, { Md: Yn(6), xd: 32 }, { Md: Yn(12), xd: 33 }];
var Zn;
function Gn(t, i) {
  if (t.getUTCFullYear() !== i.getUTCFullYear())
    return 70;
  if (t.getUTCMonth() !== i.getUTCMonth())
    return 60;
  if (t.getUTCDate() !== i.getUTCDate())
    return 50;
  for (let n = Kn.length - 1; n >= 0; --n)
    if (Math.floor(i.getTime() / Kn[n].Md) !== Math.floor(t.getTime() / Kn[n].Md))
      return Kn[n].xd;
  return 0;
}
function Jn(t) {
  let i = t;
  if (V(t) && (i = ts(t)), !Nn(i))
    throw new Error("time must be of type BusinessDay");
  const n = new Date(Date.UTC(i.year, i.month - 1, i.day, 0, 0, 0, 0));
  return { Sd: Math.round(n.getTime() / 1e3), kd: i };
}
function Qn(t) {
  if (!Fn(t))
    throw new Error("time must be of type isUTCTimestamp");
  return { Sd: t };
}
function ts(t) {
  const i = new Date(t);
  if (isNaN(i.getTime()))
    throw new Error(`Invalid date string=${t}, expected format=yyyy-mm-dd`);
  return { day: i.getUTCDate(), month: i.getUTCMonth() + 1, year: i.getUTCFullYear() };
}
function is(t) {
  V(t.time) && (t.time = ts(t.time));
}
var ns = class {
  options() {
    return this.cn;
  }
  setOptions(t) {
    this.cn = t, this.updateFormatter(t.localization);
  }
  preprocessData(t) {
    Array.isArray(t) ? function(t2) {
      t2.forEach(is);
    }(t) : is(t);
  }
  createConverterToInternalObj(t) {
    return b(function(t2) {
      return 0 === t2.length ? null : Nn(t2[0].time) || V(t2[0].time) ? Jn : Qn;
    }(t));
  }
  key(t) {
    return "object" == typeof t && "Sd" in t ? t.Sd : this.key(this.convertHorzItemToInternal(t));
  }
  cacheKey(t) {
    const i = t;
    return void 0 === i.kd ? new Date(1e3 * i.Sd).getTime() : new Date(Date.UTC(i.kd.year, i.kd.month - 1, i.kd.day)).getTime();
  }
  convertHorzItemToInternal(t) {
    return Fn(i = t) ? Qn(i) : Nn(i) ? Jn(i) : Jn(ts(i));
    var i;
  }
  updateFormatter(t) {
    if (!this.cn)
      return;
    const i = t.dateFormat;
    this.cn.timeScale.timeVisible ? this.yd = new qn({ fd: i, vd: this.cn.timeScale.secondsVisible ? "%h:%m:%s" : "%h:%m", pd: "   ", md: t.locale }) : this.yd = new Hn(i, t.locale);
  }
  formatHorzItem(t) {
    const i = t;
    return this.yd.F_(new Date(1e3 * i.Sd));
  }
  formatTickmark(t, i) {
    const n = function(t2, i2, n2) {
      switch (t2) {
        case 0:
        case 10:
          return i2 ? n2 ? 4 : 3 : 2;
        case 20:
        case 21:
        case 22:
        case 30:
        case 31:
        case 32:
        case 33:
          return i2 ? 3 : 2;
        case 50:
          return 2;
        case 60:
          return 1;
        case 70:
          return 0;
      }
    }(t.weight, this.cn.timeScale.timeVisible, this.cn.timeScale.secondsVisible), s = this.cn.timeScale;
    if (void 0 !== s.tickMarkFormatter) {
      const e2 = s.tickMarkFormatter(t.originalTime, n, i.locale);
      if (null !== e2)
        return e2;
    }
    return function(t2, i2, n2) {
      const s2 = {};
      switch (i2) {
        case 0:
          s2.year = "numeric";
          break;
        case 1:
          s2.month = "short";
          break;
        case 2:
          s2.day = "numeric";
          break;
        case 3:
          s2.hour12 = false, s2.hour = "2-digit", s2.minute = "2-digit";
          break;
        case 4:
          s2.hour12 = false, s2.hour = "2-digit", s2.minute = "2-digit", s2.second = "2-digit";
      }
      const e2 = void 0 === t2.kd ? new Date(1e3 * t2.Sd) : new Date(Date.UTC(t2.kd.year, t2.kd.month - 1, t2.kd.day));
      return new Date(e2.getUTCFullYear(), e2.getUTCMonth(), e2.getUTCDate(), e2.getUTCHours(), e2.getUTCMinutes(), e2.getUTCSeconds(), e2.getUTCMilliseconds()).toLocaleString(n2, s2);
    }(t.time, n, i.locale);
  }
  maxTickMarkWeight(t) {
    let i = t.reduce(Pn, t[0]).weight;
    return i > 30 && i < 50 && (i = 30), i;
  }
  fillWeightsForPoints(t, i) {
    !function(t2, i2 = 0) {
      if (0 === t2.length)
        return;
      let n = 0 === i2 ? null : t2[i2 - 1].time.Sd, s = null !== n ? new Date(1e3 * n) : null, e2 = 0;
      for (let r2 = i2; r2 < t2.length; ++r2) {
        const i3 = t2[r2], h2 = new Date(1e3 * i3.time.Sd);
        null !== s && (i3.timeWeight = Gn(h2, s)), e2 += i3.time.Sd - (n || i3.time.Sd), n = i3.time.Sd, s = h2;
      }
      if (0 === i2 && t2.length > 1) {
        const i3 = Math.ceil(e2 / (t2.length - 1)), n2 = new Date(1e3 * (t2[0].time.Sd - i3));
        t2[0].timeWeight = Gn(new Date(1e3 * t2[0].time.Sd), n2);
      }
    }(t, i);
  }
  static Cd(t) {
    return D({ localization: { dateFormat: "dd MMM 'yy" } }, null != t ? t : {});
  }
};
var ss = "undefined" != typeof window;
function es() {
  return !!ss && window.navigator.userAgent.toLowerCase().indexOf("firefox") > -1;
}
function rs() {
  return !!ss && /iPhone|iPad|iPod/.test(window.navigator.platform);
}
function hs(t) {
  return t + t % 2;
}
function ls(t, i) {
  return t.Td - i.Td;
}
function as(t, i, n) {
  const s = (t.Td - i.Td) / (t.ut - i.ut);
  return Math.sign(s) * Math.min(Math.abs(s), n);
}
var os = class {
  constructor(t, i, n, s) {
    this.Pd = null, this.Rd = null, this.Dd = null, this.Od = null, this.Ad = null, this.Vd = 0, this.Bd = 0, this.Id = t, this.zd = i, this.Ed = n, this.rs = s;
  }
  Ld(t, i) {
    if (null !== this.Pd) {
      if (this.Pd.ut === i)
        return void (this.Pd.Td = t);
      if (Math.abs(this.Pd.Td - t) < this.rs)
        return;
    }
    this.Od = this.Dd, this.Dd = this.Rd, this.Rd = this.Pd, this.Pd = { ut: i, Td: t };
  }
  Dr(t, i) {
    if (null === this.Pd || null === this.Rd)
      return;
    if (i - this.Pd.ut > 50)
      return;
    let n = 0;
    const s = as(this.Pd, this.Rd, this.zd), e2 = ls(this.Pd, this.Rd), r2 = [s], h2 = [e2];
    if (n += e2, null !== this.Dd) {
      const t2 = as(this.Rd, this.Dd, this.zd);
      if (Math.sign(t2) === Math.sign(s)) {
        const i2 = ls(this.Rd, this.Dd);
        if (r2.push(t2), h2.push(i2), n += i2, null !== this.Od) {
          const t3 = as(this.Dd, this.Od, this.zd);
          if (Math.sign(t3) === Math.sign(s)) {
            const i3 = ls(this.Dd, this.Od);
            r2.push(t3), h2.push(i3), n += i3;
          }
        }
      }
    }
    let l2 = 0;
    for (let t2 = 0; t2 < r2.length; ++t2)
      l2 += h2[t2] / n * r2[t2];
    Math.abs(l2) < this.Id || (this.Ad = { Td: t, ut: i }, this.Bd = l2, this.Vd = function(t2, i2) {
      const n2 = Math.log(i2);
      return Math.log(1 * n2 / -t2) / n2;
    }(Math.abs(l2), this.Ed));
  }
  Xu(t) {
    const i = b(this.Ad), n = t - i.ut;
    return i.Td + this.Bd * (Math.pow(this.Ed, n) - 1) / Math.log(this.Ed);
  }
  Yu(t) {
    return null === this.Ad || this.Nd(t) === this.Vd;
  }
  Nd(t) {
    const i = t - b(this.Ad).ut;
    return Math.min(i, this.Vd);
  }
};
function _s(t, n) {
  const s = b(t.ownerDocument).createElement("canvas");
  t.appendChild(s);
  const e2 = bindTo(s, { type: "device-pixel-content-box", options: { allowResizeObserver: false }, transform: (t2, i) => ({ width: Math.max(t2.width, i.width), height: Math.max(t2.height, i.height) }) });
  return e2.resizeCanvasElement(n), e2;
}
function us(t, i, n, s) {
  t.G && t.G(i, n, s);
}
function cs(t, i, n, s) {
  t.K(i, n, s);
}
function ds(t, i, n, s) {
  const e2 = t(n, s);
  for (const t2 of e2) {
    const n2 = t2.xt();
    null !== n2 && i(n2);
  }
}
function fs(t) {
  ss && void 0 !== window.chrome && t.addEventListener("mousedown", (t2) => {
    if (1 === t2.button)
      return t2.preventDefault(), false;
  });
}
var vs = class {
  constructor(t, i, n) {
    this.Fd = 0, this.Wd = null, this.jd = { et: Number.NEGATIVE_INFINITY, rt: Number.POSITIVE_INFINITY }, this.Hd = 0, this.$d = null, this.Ud = { et: Number.NEGATIVE_INFINITY, rt: Number.POSITIVE_INFINITY }, this.qd = null, this.Yd = false, this.Xd = null, this.Kd = null, this.Zd = false, this.Gd = false, this.Jd = false, this.Qd = null, this.tf = null, this.if = null, this.nf = null, this.sf = null, this.ef = null, this.rf = null, this.hf = 0, this.lf = false, this.af = false, this._f = false, this.uf = 0, this.cf = null, this.df = !rs(), this.ff = (t2) => {
      this.vf(t2);
    }, this.pf = (t2) => {
      if (this.mf(t2)) {
        const i2 = this.bf(t2);
        if (++this.Hd, this.$d && this.Hd > 1) {
          const { wf: n2 } = this.gf(bs(t2), this.Ud);
          n2 < 30 && !this.Jd && this.Mf(i2, this.Sf.xf), this.kf();
        }
      } else {
        const i2 = this.bf(t2);
        if (++this.Fd, this.Wd && this.Fd > 1) {
          const { wf: n2 } = this.gf(bs(t2), this.jd);
          n2 < 5 && !this.Gd && this.yf(i2, this.Sf.Cf), this.Tf();
        }
      }
    }, this.Pf = t, this.Sf = i, this.cn = n, this.Rf();
  }
  S() {
    null !== this.Qd && (this.Qd(), this.Qd = null), null !== this.tf && (this.tf(), this.tf = null), null !== this.nf && (this.nf(), this.nf = null), null !== this.sf && (this.sf(), this.sf = null), null !== this.ef && (this.ef(), this.ef = null), null !== this.if && (this.if(), this.if = null), this.Df(), this.Tf();
  }
  Of(t) {
    this.nf && this.nf();
    const i = this.Af.bind(this);
    if (this.nf = () => {
      this.Pf.removeEventListener("mousemove", i);
    }, this.Pf.addEventListener("mousemove", i), this.mf(t))
      return;
    const n = this.bf(t);
    this.yf(n, this.Sf.Vf), this.df = true;
  }
  Tf() {
    null !== this.Wd && clearTimeout(this.Wd), this.Fd = 0, this.Wd = null, this.jd = { et: Number.NEGATIVE_INFINITY, rt: Number.POSITIVE_INFINITY };
  }
  kf() {
    null !== this.$d && clearTimeout(this.$d), this.Hd = 0, this.$d = null, this.Ud = { et: Number.NEGATIVE_INFINITY, rt: Number.POSITIVE_INFINITY };
  }
  Af(t) {
    if (this._f || null !== this.Kd)
      return;
    if (this.mf(t))
      return;
    const i = this.bf(t);
    this.yf(i, this.Sf.Bf), this.df = true;
  }
  If(t) {
    const i = gs(t.changedTouches, b(this.cf));
    if (null === i)
      return;
    if (this.uf = ws(t), null !== this.rf)
      return;
    if (this.af)
      return;
    this.lf = true;
    const n = this.gf(bs(i), b(this.Kd)), { zf: s, Ef: e2, wf: r2 } = n;
    if (this.Zd || !(r2 < 5)) {
      if (!this.Zd) {
        const t2 = 0.5 * s, i2 = e2 >= t2 && !this.cn.Lf(), n2 = t2 > e2 && !this.cn.Nf();
        i2 || n2 || (this.af = true), this.Zd = true, this.Jd = true, this.Df(), this.kf();
      }
      if (!this.af) {
        const n2 = this.bf(t, i);
        this.Mf(n2, this.Sf.Ff), ms(t);
      }
    }
  }
  Wf(t) {
    if (0 !== t.button)
      return;
    const i = this.gf(bs(t), b(this.Xd)), { wf: n } = i;
    if (n >= 5 && (this.Gd = true, this.Tf()), this.Gd) {
      const i2 = this.bf(t);
      this.yf(i2, this.Sf.jf);
    }
  }
  gf(t, i) {
    const n = Math.abs(i.et - t.et), s = Math.abs(i.rt - t.rt);
    return { zf: n, Ef: s, wf: n + s };
  }
  Hf(t) {
    let i = gs(t.changedTouches, b(this.cf));
    if (null === i && 0 === t.touches.length && (i = t.changedTouches[0]), null === i)
      return;
    this.cf = null, this.uf = ws(t), this.Df(), this.Kd = null, this.ef && (this.ef(), this.ef = null);
    const n = this.bf(t, i);
    if (this.Mf(n, this.Sf.$f), ++this.Hd, this.$d && this.Hd > 1) {
      const { wf: t2 } = this.gf(bs(i), this.Ud);
      t2 < 30 && !this.Jd && this.Mf(n, this.Sf.xf), this.kf();
    } else
      this.Jd || (this.Mf(n, this.Sf.Uf), this.Sf.Uf && ms(t));
    0 === this.Hd && ms(t), 0 === t.touches.length && this.Yd && (this.Yd = false, ms(t));
  }
  vf(t) {
    if (0 !== t.button)
      return;
    const i = this.bf(t);
    if (this.Xd = null, this._f = false, this.sf && (this.sf(), this.sf = null), es()) {
      this.Pf.ownerDocument.documentElement.removeEventListener("mouseleave", this.ff);
    }
    if (!this.mf(t))
      if (this.yf(i, this.Sf.qf), ++this.Fd, this.Wd && this.Fd > 1) {
        const { wf: n } = this.gf(bs(t), this.jd);
        n < 5 && !this.Gd && this.yf(i, this.Sf.Cf), this.Tf();
      } else
        this.Gd || this.yf(i, this.Sf.Yf);
  }
  Df() {
    null !== this.qd && (clearTimeout(this.qd), this.qd = null);
  }
  Xf(t) {
    if (null !== this.cf)
      return;
    const i = t.changedTouches[0];
    this.cf = i.identifier, this.uf = ws(t);
    const n = this.Pf.ownerDocument.documentElement;
    this.Jd = false, this.Zd = false, this.af = false, this.Kd = bs(i), this.ef && (this.ef(), this.ef = null);
    {
      const i2 = this.If.bind(this), s2 = this.Hf.bind(this);
      this.ef = () => {
        n.removeEventListener("touchmove", i2), n.removeEventListener("touchend", s2);
      }, n.addEventListener("touchmove", i2, { passive: false }), n.addEventListener("touchend", s2, { passive: false }), this.Df(), this.qd = setTimeout(this.Kf.bind(this, t), 240);
    }
    const s = this.bf(t, i);
    this.Mf(s, this.Sf.Zf), this.$d || (this.Hd = 0, this.$d = setTimeout(this.kf.bind(this), 500), this.Ud = bs(i));
  }
  Gf(t) {
    if (0 !== t.button)
      return;
    const i = this.Pf.ownerDocument.documentElement;
    es() && i.addEventListener("mouseleave", this.ff), this.Gd = false, this.Xd = bs(t), this.sf && (this.sf(), this.sf = null);
    {
      const t2 = this.Wf.bind(this), n2 = this.vf.bind(this);
      this.sf = () => {
        i.removeEventListener("mousemove", t2), i.removeEventListener("mouseup", n2);
      }, i.addEventListener("mousemove", t2), i.addEventListener("mouseup", n2);
    }
    if (this._f = true, this.mf(t))
      return;
    const n = this.bf(t);
    this.yf(n, this.Sf.Jf), this.Wd || (this.Fd = 0, this.Wd = setTimeout(this.Tf.bind(this), 500), this.jd = bs(t));
  }
  Rf() {
    this.Pf.addEventListener("mouseenter", this.Of.bind(this)), this.Pf.addEventListener("touchcancel", this.Df.bind(this));
    {
      const t = this.Pf.ownerDocument, i = (t2) => {
        this.Sf.Qf && (t2.composed && this.Pf.contains(t2.composedPath()[0]) || t2.target && this.Pf.contains(t2.target) || this.Sf.Qf());
      };
      this.tf = () => {
        t.removeEventListener("touchstart", i);
      }, this.Qd = () => {
        t.removeEventListener("mousedown", i);
      }, t.addEventListener("mousedown", i), t.addEventListener("touchstart", i, { passive: true });
    }
    rs() && (this.if = () => {
      this.Pf.removeEventListener("dblclick", this.pf);
    }, this.Pf.addEventListener("dblclick", this.pf)), this.Pf.addEventListener("mouseleave", this.tv.bind(this)), this.Pf.addEventListener("touchstart", this.Xf.bind(this), { passive: true }), fs(this.Pf), this.Pf.addEventListener("mousedown", this.Gf.bind(this)), this.iv(), this.Pf.addEventListener("touchmove", () => {
    }, { passive: false });
  }
  iv() {
    void 0 === this.Sf.nv && void 0 === this.Sf.sv && void 0 === this.Sf.ev || (this.Pf.addEventListener("touchstart", (t) => this.rv(t.touches), { passive: true }), this.Pf.addEventListener("touchmove", (t) => {
      if (2 === t.touches.length && null !== this.rf && void 0 !== this.Sf.sv) {
        const i = ps(t.touches[0], t.touches[1]) / this.hf;
        this.Sf.sv(this.rf, i), ms(t);
      }
    }, { passive: false }), this.Pf.addEventListener("touchend", (t) => {
      this.rv(t.touches);
    }));
  }
  rv(t) {
    1 === t.length && (this.lf = false), 2 !== t.length || this.lf || this.Yd ? this.hv() : this.lv(t);
  }
  lv(t) {
    const i = this.Pf.getBoundingClientRect() || { left: 0, top: 0 };
    this.rf = { et: (t[0].clientX - i.left + (t[1].clientX - i.left)) / 2, rt: (t[0].clientY - i.top + (t[1].clientY - i.top)) / 2 }, this.hf = ps(t[0], t[1]), void 0 !== this.Sf.nv && this.Sf.nv(), this.Df();
  }
  hv() {
    null !== this.rf && (this.rf = null, void 0 !== this.Sf.ev && this.Sf.ev());
  }
  tv(t) {
    if (this.nf && this.nf(), this.mf(t))
      return;
    if (!this.df)
      return;
    const i = this.bf(t);
    this.yf(i, this.Sf.av), this.df = !rs();
  }
  Kf(t) {
    const i = gs(t.touches, b(this.cf));
    if (null === i)
      return;
    const n = this.bf(t, i);
    this.Mf(n, this.Sf.ov), this.Jd = true, this.Yd = true;
  }
  mf(t) {
    return t.sourceCapabilities && void 0 !== t.sourceCapabilities.firesTouchEvents ? t.sourceCapabilities.firesTouchEvents : ws(t) < this.uf + 500;
  }
  Mf(t, i) {
    i && i.call(this.Sf, t);
  }
  yf(t, i) {
    i && i.call(this.Sf, t);
  }
  bf(t, i) {
    const n = i || t, s = this.Pf.getBoundingClientRect() || { left: 0, top: 0 };
    return { clientX: n.clientX, clientY: n.clientY, pageX: n.pageX, pageY: n.pageY, screenX: n.screenX, screenY: n.screenY, localX: n.clientX - s.left, localY: n.clientY - s.top, ctrlKey: t.ctrlKey, altKey: t.altKey, shiftKey: t.shiftKey, metaKey: t.metaKey, _v: !t.type.startsWith("mouse") && "contextmenu" !== t.type && "click" !== t.type, uv: t.type, cv: n.target, dv: t.view, fv: () => {
      "touchstart" !== t.type && ms(t);
    } };
  }
};
function ps(t, i) {
  const n = t.clientX - i.clientX, s = t.clientY - i.clientY;
  return Math.sqrt(n * n + s * s);
}
function ms(t) {
  t.cancelable && t.preventDefault();
}
function bs(t) {
  return { et: t.pageX, rt: t.pageY };
}
function ws(t) {
  return t.timeStamp || performance.now();
}
function gs(t, i) {
  for (let n = 0; n < t.length; ++n)
    if (t[n].identifier === i)
      return t[n];
  return null;
}
function Ms(t) {
  return { Ic: t.Ic, vv: { wr: t.pv.externalId }, mv: t.pv.cursorStyle };
}
function xs(t, i, n) {
  for (const s of t) {
    const t2 = s.xt();
    if (null !== t2 && t2.br) {
      const e2 = t2.br(i, n);
      if (null !== e2)
        return { dv: s, vv: e2 };
    }
  }
  return null;
}
function Ss(t, i) {
  return (n) => {
    var s, e2, r2, h2;
    return (null !== (e2 = null === (s = n.At()) || void 0 === s ? void 0 : s.xa()) && void 0 !== e2 ? e2 : "") !== i ? [] : null !== (h2 = null === (r2 = n.la) || void 0 === r2 ? void 0 : r2.call(n, t)) && void 0 !== h2 ? h2 : [];
  };
}
var ks = class {
  constructor(i, n, s, e2) {
    this.Li = null, this.bv = null, this.wv = false, this.gv = new si(200), this.Gr = null, this.Mv = 0, this.xv = false, this.Sv = () => {
      this.xv || this.nn.kv().qt().Fh();
    }, this.yv = () => {
      this.xv || this.nn.kv().qt().Fh();
    }, this.nn = i, this.cn = n, this.mo = n.layout, this.kc = s, this.Cv = "left" === e2, this.Tv = Ss("normal", e2), this.Pv = Ss("top", e2), this.Rv = Ss("bottom", e2), this.Dv = document.createElement("div"), this.Dv.style.height = "100%", this.Dv.style.overflow = "hidden", this.Dv.style.width = "25px", this.Dv.style.left = "0", this.Dv.style.position = "relative", this.Ov = _s(this.Dv, size({ width: 16, height: 16 })), this.Ov.subscribeSuggestedBitmapSizeChanged(this.Sv);
    const r2 = this.Ov.canvasElement;
    r2.style.position = "absolute", r2.style.zIndex = "1", r2.style.left = "0", r2.style.top = "0", this.Av = _s(this.Dv, size({ width: 16, height: 16 })), this.Av.subscribeSuggestedBitmapSizeChanged(this.yv);
    const h2 = this.Av.canvasElement;
    h2.style.position = "absolute", h2.style.zIndex = "2", h2.style.left = "0", h2.style.top = "0";
    const l2 = { Jf: this.Vv.bind(this), Zf: this.Vv.bind(this), jf: this.Bv.bind(this), Ff: this.Bv.bind(this), Qf: this.Iv.bind(this), qf: this.zv.bind(this), $f: this.zv.bind(this), Cf: this.Ev.bind(this), xf: this.Ev.bind(this), Vf: this.Lv.bind(this), av: this.Nv.bind(this) };
    this.Fv = new vs(this.Av.canvasElement, l2, { Lf: () => false, Nf: () => true });
  }
  S() {
    this.Fv.S(), this.Av.unsubscribeSuggestedBitmapSizeChanged(this.yv), this.Av.dispose(), this.Ov.unsubscribeSuggestedBitmapSizeChanged(this.Sv), this.Ov.dispose(), null !== this.Li && this.Li.$o().p(this), this.Li = null;
  }
  Wv() {
    return this.Dv;
  }
  P() {
    return this.mo.fontSize;
  }
  jv() {
    const t = this.kc.W();
    return this.Gr !== t.R && (this.gv.ir(), this.Gr = t.R), t;
  }
  Hv() {
    if (null === this.Li)
      return 0;
    let t = 0;
    const i = this.jv(), n = b(this.Ov.canvasElement.getContext("2d"));
    n.save();
    const s = this.Li.Ea();
    n.font = this.$v(), s.length > 0 && (t = Math.max(this.gv.Si(n, s[0].Za), this.gv.Si(n, s[s.length - 1].Za)));
    const e2 = this.Uv();
    for (let i2 = e2.length; i2--; ) {
      const s2 = this.gv.Si(n, e2[i2].Jt());
      s2 > t && (t = s2);
    }
    const r2 = this.Li.Pt();
    if (null !== r2 && null !== this.bv) {
      const i2 = this.Li.pn(1, r2), s2 = this.Li.pn(this.bv.height - 2, r2);
      t = Math.max(t, this.gv.Si(n, this.Li.Wi(Math.floor(Math.min(i2, s2)) + 0.11111111111111, r2)), this.gv.Si(n, this.Li.Wi(Math.ceil(Math.max(i2, s2)) - 0.11111111111111, r2)));
    }
    n.restore();
    const h2 = t || 34;
    return hs(Math.ceil(i.C + i.T + i.B + i.I + 5 + h2));
  }
  qv(t) {
    null !== this.bv && equalSizes(this.bv, t) || (this.bv = t, this.xv = true, this.Ov.resizeCanvasElement(t), this.Av.resizeCanvasElement(t), this.xv = false, this.Dv.style.width = `${t.width}px`, this.Dv.style.height = `${t.height}px`);
  }
  Yv() {
    return b(this.bv).width;
  }
  Ji(t) {
    this.Li !== t && (null !== this.Li && this.Li.$o().p(this), this.Li = t, t.$o().l(this.ao.bind(this), this));
  }
  At() {
    return this.Li;
  }
  ir() {
    const t = this.nn.Xv();
    this.nn.kv().qt().A_(t, b(this.At()));
  }
  Kv(t) {
    if (null === this.bv)
      return;
    if (1 !== t) {
      this.Zv(), this.Ov.applySuggestedBitmapSize();
      const t2 = tryCreateCanvasRenderingTarget2D(this.Ov);
      null !== t2 && (t2.useBitmapCoordinateSpace((t3) => {
        this.Gv(t3), this.Be(t3);
      }), this.nn.Jv(t2, this.Rv), this.Qv(t2), this.nn.Jv(t2, this.Tv), this.tp(t2));
    }
    this.Av.applySuggestedBitmapSize();
    const i = tryCreateCanvasRenderingTarget2D(this.Av);
    null !== i && (i.useBitmapCoordinateSpace(({ context: t2, bitmapSize: i2 }) => {
      t2.clearRect(0, 0, i2.width, i2.height);
    }), this.ip(i), this.nn.Jv(i, this.Pv));
  }
  np() {
    return this.Ov.bitmapSize;
  }
  sp(t, i, n) {
    const s = this.np();
    s.width > 0 && s.height > 0 && t.drawImage(this.Ov.canvasElement, i, n);
  }
  gt() {
    var t;
    null === (t = this.Li) || void 0 === t || t.Ea();
  }
  Vv(t) {
    if (null === this.Li || this.Li.Fi() || !this.cn.handleScale.axisPressedMouseMove.price)
      return;
    const i = this.nn.kv().qt(), n = this.nn.Xv();
    this.wv = true, i.y_(n, this.Li, t.localY);
  }
  Bv(t) {
    if (null === this.Li || !this.cn.handleScale.axisPressedMouseMove.price)
      return;
    const i = this.nn.kv().qt(), n = this.nn.Xv(), s = this.Li;
    i.C_(n, s, t.localY);
  }
  Iv() {
    if (null === this.Li || !this.cn.handleScale.axisPressedMouseMove.price)
      return;
    const t = this.nn.kv().qt(), i = this.nn.Xv(), n = this.Li;
    this.wv && (this.wv = false, t.T_(i, n));
  }
  zv(t) {
    if (null === this.Li || !this.cn.handleScale.axisPressedMouseMove.price)
      return;
    const i = this.nn.kv().qt(), n = this.nn.Xv();
    this.wv = false, i.T_(n, this.Li);
  }
  Ev(t) {
    this.cn.handleScale.axisDoubleClickReset.price && this.ir();
  }
  Lv(t) {
    if (null === this.Li)
      return;
    !this.nn.kv().qt().W().handleScale.axisPressedMouseMove.price || this.Li.ph() || this.Li.Co() || this.ep(1);
  }
  Nv(t) {
    this.ep(0);
  }
  Uv() {
    const t = [], i = null === this.Li ? void 0 : this.Li;
    return ((n) => {
      for (let s = 0; s < n.length; ++s) {
        const e2 = n[s].Rn(this.nn.Xv(), i);
        for (let i2 = 0; i2 < e2.length; i2++)
          t.push(e2[i2]);
      }
    })(this.nn.Xv().No()), t;
  }
  Gv({ context: t, bitmapSize: i }) {
    const { width: n, height: s } = i, e2 = this.nn.Xv().qt(), r2 = e2.q(), h2 = e2.ad();
    r2 === h2 ? G(t, 0, 0, n, s, r2) : it(t, 0, 0, n, s, r2, h2);
  }
  Be({ context: t, bitmapSize: i, horizontalPixelRatio: n }) {
    if (null === this.bv || null === this.Li || !this.Li.W().borderVisible)
      return;
    t.fillStyle = this.Li.W().borderColor;
    const s = Math.max(1, Math.floor(this.jv().C * n));
    let e2;
    e2 = this.Cv ? i.width - s : 0, t.fillRect(e2, 0, s, i.height);
  }
  Qv(t) {
    if (null === this.bv || null === this.Li)
      return;
    const i = this.Li.Ea(), n = this.Li.W(), s = this.jv(), e2 = this.Cv ? this.bv.width - s.T : 0;
    n.borderVisible && n.ticksVisible && t.useBitmapCoordinateSpace(({ context: t2, horizontalPixelRatio: r2, verticalPixelRatio: h2 }) => {
      t2.fillStyle = n.borderColor;
      const l2 = Math.max(1, Math.floor(h2)), a2 = Math.floor(0.5 * h2), o3 = Math.round(s.T * r2);
      t2.beginPath();
      for (const n2 of i)
        t2.rect(Math.floor(e2 * r2), Math.round(n2.Aa * h2) - a2, o3, l2);
      t2.fill();
    }), t.useMediaCoordinateSpace(({ context: t2 }) => {
      var r2;
      t2.font = this.$v(), t2.fillStyle = null !== (r2 = n.textColor) && void 0 !== r2 ? r2 : this.mo.textColor, t2.textAlign = this.Cv ? "right" : "left", t2.textBaseline = "middle";
      const h2 = this.Cv ? Math.round(e2 - s.B) : Math.round(e2 + s.T + s.B), l2 = i.map((i2) => this.gv.xi(t2, i2.Za));
      for (let n2 = i.length; n2--; ) {
        const s2 = i[n2];
        t2.fillText(s2.Za, h2, s2.Aa + l2[n2]);
      }
    });
  }
  Zv() {
    if (null === this.bv || null === this.Li)
      return;
    let t = this.bv.height / 2;
    const i = [], n = this.Li.No().slice(), s = this.nn.Xv(), e2 = this.jv();
    this.Li === s.vr() && this.nn.Xv().No().forEach((t2) => {
      s.dr(t2) && n.push(t2);
    });
    const r2 = this.Li.Ta()[0], h2 = this.Li;
    n.forEach((n2) => {
      const e3 = n2.Rn(s, h2);
      e3.forEach((t2) => {
        t2.Vi(null), t2.Bi() && i.push(t2);
      }), r2 === n2 && e3.length > 0 && (t = e3[0].yi());
    }), i.forEach((t2) => t2.Vi(t2.yi()));
    this.Li.W().alignLabels && this.rp(i, e2, t);
  }
  rp(t, i, n) {
    if (null === this.bv)
      return;
    const s = t.filter((t2) => t2.yi() <= n), e2 = t.filter((t2) => t2.yi() > n);
    s.sort((t2, i2) => i2.yi() - t2.yi()), s.length && e2.length && e2.push(s[0]), e2.sort((t2, i2) => t2.yi() - i2.yi());
    for (const n2 of t) {
      const t2 = Math.floor(n2.zt(i) / 2), s2 = n2.yi();
      s2 > -t2 && s2 < t2 && n2.Vi(t2), s2 > this.bv.height - t2 && s2 < this.bv.height + t2 && n2.Vi(this.bv.height - t2);
    }
    for (let t2 = 1; t2 < s.length; t2++) {
      const n2 = s[t2], e3 = s[t2 - 1], r2 = e3.zt(i, false), h2 = n2.yi(), l2 = e3.Ai();
      h2 > l2 - r2 && n2.Vi(l2 - r2);
    }
    for (let t2 = 1; t2 < e2.length; t2++) {
      const n2 = e2[t2], s2 = e2[t2 - 1], r2 = s2.zt(i, true), h2 = n2.yi(), l2 = s2.Ai();
      h2 < l2 + r2 && n2.Vi(l2 + r2);
    }
  }
  tp(t) {
    if (null === this.bv)
      return;
    const i = this.Uv(), n = this.jv(), s = this.Cv ? "right" : "left";
    i.forEach((i2) => {
      if (i2.Ii()) {
        i2.xt(b(this.Li)).K(t, n, this.gv, s);
      }
    });
  }
  ip(t) {
    if (null === this.bv || null === this.Li)
      return;
    const i = this.nn.kv().qt(), n = [], s = this.nn.Xv(), e2 = i.Fc().Rn(s, this.Li);
    e2.length && n.push(e2);
    const r2 = this.jv(), h2 = this.Cv ? "right" : "left";
    n.forEach((i2) => {
      i2.forEach((i3) => {
        i3.xt(b(this.Li)).K(t, r2, this.gv, h2);
      });
    });
  }
  ep(t) {
    this.Dv.style.cursor = 1 === t ? "ns-resize" : "default";
  }
  ao() {
    const t = this.Hv();
    this.Mv < t && this.nn.kv().qt().$l(), this.Mv = t;
  }
  $v() {
    return N(this.mo.fontSize, this.mo.fontFamily);
  }
};
function ys(t, i) {
  var n, s;
  return null !== (s = null === (n = t.ra) || void 0 === n ? void 0 : n.call(t, i)) && void 0 !== s ? s : [];
}
function Cs(t, i) {
  var n, s;
  return null !== (s = null === (n = t.Pn) || void 0 === n ? void 0 : n.call(t, i)) && void 0 !== s ? s : [];
}
function Ts(t, i) {
  var n, s;
  return null !== (s = null === (n = t.Qi) || void 0 === n ? void 0 : n.call(t, i)) && void 0 !== s ? s : [];
}
function Ps(t, i) {
  var n, s;
  return null !== (s = null === (n = t.na) || void 0 === n ? void 0 : n.call(t, i)) && void 0 !== s ? s : [];
}
var Rs = class {
  constructor(i, n) {
    this.bv = size({ width: 0, height: 0 }), this.hp = null, this.lp = null, this.ap = null, this.op = false, this._p = new R(), this.up = new R(), this.cp = 0, this.dp = false, this.fp = null, this.vp = false, this.pp = null, this.mp = null, this.xv = false, this.Sv = () => {
      this.xv || null === this.bp || this.Ui().Fh();
    }, this.yv = () => {
      this.xv || null === this.bp || this.Ui().Fh();
    }, this.wp = i, this.bp = n, this.bp.I_().l(this.gp.bind(this), this, true), this.Mp = document.createElement("td"), this.Mp.style.padding = "0", this.Mp.style.position = "relative";
    const s = document.createElement("div");
    s.style.width = "100%", s.style.height = "100%", s.style.position = "relative", s.style.overflow = "hidden", this.xp = document.createElement("td"), this.xp.style.padding = "0", this.Sp = document.createElement("td"), this.Sp.style.padding = "0", this.Mp.appendChild(s), this.Ov = _s(s, size({ width: 16, height: 16 })), this.Ov.subscribeSuggestedBitmapSizeChanged(this.Sv);
    const e2 = this.Ov.canvasElement;
    e2.style.position = "absolute", e2.style.zIndex = "1", e2.style.left = "0", e2.style.top = "0", this.Av = _s(s, size({ width: 16, height: 16 })), this.Av.subscribeSuggestedBitmapSizeChanged(this.yv);
    const r2 = this.Av.canvasElement;
    r2.style.position = "absolute", r2.style.zIndex = "2", r2.style.left = "0", r2.style.top = "0", this.kp = document.createElement("tr"), this.kp.appendChild(this.xp), this.kp.appendChild(this.Mp), this.kp.appendChild(this.Sp), this.yp(), this.Fv = new vs(this.Av.canvasElement, this, { Lf: () => null === this.fp && !this.wp.W().handleScroll.vertTouchDrag, Nf: () => null === this.fp && !this.wp.W().handleScroll.horzTouchDrag });
  }
  S() {
    null !== this.hp && this.hp.S(), null !== this.lp && this.lp.S(), this.Av.unsubscribeSuggestedBitmapSizeChanged(this.yv), this.Av.dispose(), this.Ov.unsubscribeSuggestedBitmapSizeChanged(this.Sv), this.Ov.dispose(), null !== this.bp && this.bp.I_().p(this), this.Fv.S();
  }
  Xv() {
    return b(this.bp);
  }
  Cp(t) {
    null !== this.bp && this.bp.I_().p(this), this.bp = t, null !== this.bp && this.bp.I_().l(Rs.prototype.gp.bind(this), this, true), this.yp();
  }
  kv() {
    return this.wp;
  }
  Wv() {
    return this.kp;
  }
  yp() {
    if (null !== this.bp && (this.Tp(), 0 !== this.Ui().Mt().length)) {
      if (null !== this.hp) {
        const t = this.bp.S_();
        this.hp.Ji(b(t));
      }
      if (null !== this.lp) {
        const t = this.bp.k_();
        this.lp.Ji(b(t));
      }
    }
  }
  Pp() {
    null !== this.hp && this.hp.gt(), null !== this.lp && this.lp.gt();
  }
  v_() {
    return null !== this.bp ? this.bp.v_() : 0;
  }
  p_(t) {
    this.bp && this.bp.p_(t);
  }
  Vf(t) {
    if (!this.bp)
      return;
    this.Rp();
    const i = t.localX, n = t.localY;
    this.Dp(i, n, t);
  }
  Jf(t) {
    this.Rp(), this.Op(), this.Dp(t.localX, t.localY, t);
  }
  Bf(t) {
    var i;
    if (!this.bp)
      return;
    this.Rp();
    const n = t.localX, s = t.localY;
    this.Dp(n, s, t);
    const e2 = this.br(n, s);
    this.wp.Ap(null !== (i = null == e2 ? void 0 : e2.mv) && void 0 !== i ? i : null), this.Ui().Bc(e2 && { Ic: e2.Ic, vv: e2.vv });
  }
  Yf(t) {
    null !== this.bp && (this.Rp(), this.Vp(t));
  }
  Cf(t) {
    null !== this.bp && this.Bp(this.up, t);
  }
  xf(t) {
    this.Cf(t);
  }
  jf(t) {
    this.Rp(), this.Ip(t), this.Dp(t.localX, t.localY, t);
  }
  qf(t) {
    null !== this.bp && (this.Rp(), this.dp = false, this.zp(t));
  }
  Uf(t) {
    null !== this.bp && this.Vp(t);
  }
  ov(t) {
    if (this.dp = true, null === this.fp) {
      const i = { x: t.localX, y: t.localY };
      this.Ep(i, i, t);
    }
  }
  av(t) {
    null !== this.bp && (this.Rp(), this.bp.qt().Bc(null), this.Lp());
  }
  Np() {
    return this._p;
  }
  Fp() {
    return this.up;
  }
  nv() {
    this.cp = 1, this.Ui().Un();
  }
  sv(t, i) {
    if (!this.wp.W().handleScale.pinch)
      return;
    const n = 5 * (i - this.cp);
    this.cp = i, this.Ui().Uc(t.et, n);
  }
  Zf(t) {
    if (this.dp = false, this.vp = null !== this.fp, this.Op(), null !== this.fp) {
      const i = this.Ui().Fc();
      this.pp = { x: i.Kt(), y: i.Zt() }, this.fp = { x: t.localX, y: t.localY };
    }
  }
  Ff(t) {
    if (null === this.bp)
      return;
    const i = t.localX, n = t.localY;
    if (null === this.fp)
      this.Ip(t);
    else {
      this.vp = false;
      const s = b(this.pp), e2 = s.x + (i - this.fp.x), r2 = s.y + (n - this.fp.y);
      this.Dp(e2, r2, t);
    }
  }
  $f(t) {
    0 === this.kv().W().trackingMode.exitMode && (this.vp = true), this.Wp(), this.zp(t);
  }
  br(t, i) {
    const n = this.bp;
    return null === n ? null : function(t2, i2, n2) {
      const s = t2.No(), e2 = function(t3, i3, n3) {
        var s2, e3;
        let r2, h2;
        for (const o3 of t3) {
          const t4 = null !== (e3 = null === (s2 = o3.oa) || void 0 === s2 ? void 0 : s2.call(o3, i3, n3)) && void 0 !== e3 ? e3 : [];
          for (const i4 of t4)
            l2 = i4.zOrder, (!(a2 = null == r2 ? void 0 : r2.zOrder) || "top" === l2 && "top" !== a2 || "normal" === l2 && "bottom" === a2) && (r2 = i4, h2 = o3);
        }
        var l2, a2;
        return r2 && h2 ? { pv: r2, Ic: h2 } : null;
      }(s, i2, n2);
      if ("top" === (null == e2 ? void 0 : e2.pv.zOrder))
        return Ms(e2);
      for (const r2 of s) {
        if (e2 && e2.Ic === r2 && "bottom" !== e2.pv.zOrder && !e2.pv.isBackground)
          return Ms(e2);
        const s2 = xs(r2.Pn(t2), i2, n2);
        if (null !== s2)
          return { Ic: r2, dv: s2.dv, vv: s2.vv };
        if (e2 && e2.Ic === r2 && "bottom" !== e2.pv.zOrder && e2.pv.isBackground)
          return Ms(e2);
      }
      return (null == e2 ? void 0 : e2.pv) ? Ms(e2) : null;
    }(n, t, i);
  }
  jp(i, n) {
    b("left" === n ? this.hp : this.lp).qv(size({ width: i, height: this.bv.height }));
  }
  Hp() {
    return this.bv;
  }
  qv(t) {
    equalSizes(this.bv, t) || (this.bv = t, this.xv = true, this.Ov.resizeCanvasElement(t), this.Av.resizeCanvasElement(t), this.xv = false, this.Mp.style.width = t.width + "px", this.Mp.style.height = t.height + "px");
  }
  $p() {
    const t = b(this.bp);
    t.x_(t.S_()), t.x_(t.k_());
    for (const i of t.Ta())
      if (t.dr(i)) {
        const n = i.At();
        null !== n && t.x_(n), i.On();
      }
  }
  np() {
    return this.Ov.bitmapSize;
  }
  sp(t, i, n) {
    const s = this.np();
    s.width > 0 && s.height > 0 && t.drawImage(this.Ov.canvasElement, i, n);
  }
  Kv(t) {
    if (0 === t)
      return;
    if (null === this.bp)
      return;
    if (t > 1 && this.$p(), null !== this.hp && this.hp.Kv(t), null !== this.lp && this.lp.Kv(t), 1 !== t) {
      this.Ov.applySuggestedBitmapSize();
      const t2 = tryCreateCanvasRenderingTarget2D(this.Ov);
      null !== t2 && (t2.useBitmapCoordinateSpace((t3) => {
        this.Gv(t3);
      }), this.bp && (this.Up(t2, ys), this.qp(t2), this.Yp(t2), this.Up(t2, Cs), this.Up(t2, Ts)));
    }
    this.Av.applySuggestedBitmapSize();
    const i = tryCreateCanvasRenderingTarget2D(this.Av);
    null !== i && (i.useBitmapCoordinateSpace(({ context: t2, bitmapSize: i2 }) => {
      t2.clearRect(0, 0, i2.width, i2.height);
    }), this.Xp(i), this.Up(i, Ps));
  }
  Kp() {
    return this.hp;
  }
  Zp() {
    return this.lp;
  }
  Jv(t, i) {
    this.Up(t, i);
  }
  gp() {
    null !== this.bp && this.bp.I_().p(this), this.bp = null;
  }
  Vp(t) {
    this.Bp(this._p, t);
  }
  Bp(t, i) {
    const n = i.localX, s = i.localY;
    t.M() && t.m(this.Ui().yt().Vu(n), { x: n, y: s }, i);
  }
  Gv({ context: t, bitmapSize: i }) {
    const { width: n, height: s } = i, e2 = this.Ui(), r2 = e2.q(), h2 = e2.ad();
    r2 === h2 ? G(t, 0, 0, n, s, h2) : it(t, 0, 0, n, s, r2, h2);
  }
  qp(t) {
    const i = b(this.bp).z_().Wh().xt();
    null !== i && i.K(t, false);
  }
  Yp(t) {
    const i = this.Ui().Nc();
    this.Gp(t, Cs, us, i), this.Gp(t, Cs, cs, i);
  }
  Xp(t) {
    this.Gp(t, Cs, cs, this.Ui().Fc());
  }
  Up(t, i) {
    const n = b(this.bp).No();
    for (const s of n)
      this.Gp(t, i, us, s);
    for (const s of n)
      this.Gp(t, i, cs, s);
  }
  Gp(t, i, n, s) {
    const e2 = b(this.bp), r2 = e2.qt().Vc(), h2 = null !== r2 && r2.Ic === s, l2 = null !== r2 && h2 && void 0 !== r2.vv ? r2.vv.gr : void 0;
    ds(i, (i2) => n(i2, t, h2, l2), s, e2);
  }
  Tp() {
    if (null === this.bp)
      return;
    const t = this.wp, i = this.bp.S_().W().visible, n = this.bp.k_().W().visible;
    i || null === this.hp || (this.xp.removeChild(this.hp.Wv()), this.hp.S(), this.hp = null), n || null === this.lp || (this.Sp.removeChild(this.lp.Wv()), this.lp.S(), this.lp = null);
    const s = t.qt().nd();
    i && null === this.hp && (this.hp = new ks(this, t.W(), s, "left"), this.xp.appendChild(this.hp.Wv())), n && null === this.lp && (this.lp = new ks(this, t.W(), s, "right"), this.Sp.appendChild(this.lp.Wv()));
  }
  Jp(t) {
    return t._v && this.dp || null !== this.fp;
  }
  Qp(t) {
    return Math.max(0, Math.min(t, this.bv.width - 1));
  }
  tm(t) {
    return Math.max(0, Math.min(t, this.bv.height - 1));
  }
  Dp(t, i, n) {
    this.Ui().Jc(this.Qp(t), this.tm(i), n, b(this.bp));
  }
  Lp() {
    this.Ui().Qc();
  }
  Wp() {
    this.vp && (this.fp = null, this.Lp());
  }
  Ep(t, i, n) {
    this.fp = t, this.vp = false, this.Dp(i.x, i.y, n);
    const s = this.Ui().Fc();
    this.pp = { x: s.Kt(), y: s.Zt() };
  }
  Ui() {
    return this.wp.qt();
  }
  zp(t) {
    if (!this.op)
      return;
    const i = this.Ui(), n = this.Xv();
    if (i.D_(n, n.vn()), this.ap = null, this.op = false, i.Kc(), null !== this.mp) {
      const t2 = performance.now(), n2 = i.yt();
      this.mp.Dr(n2.Eu(), t2), this.mp.Yu(t2) || i.Xn(this.mp);
    }
  }
  Rp() {
    this.fp = null;
  }
  Op() {
    if (!this.bp)
      return;
    if (this.Ui().Un(), document.activeElement !== document.body && document.activeElement !== document.documentElement)
      b(document.activeElement).blur();
    else {
      const t = document.getSelection();
      null !== t && t.removeAllRanges();
    }
    !this.bp.vn().Fi() && this.Ui().yt().Fi();
  }
  Ip(t) {
    if (null === this.bp)
      return;
    const i = this.Ui(), n = i.yt();
    if (n.Fi())
      return;
    const s = this.wp.W(), e2 = s.handleScroll, r2 = s.kineticScroll;
    if ((!e2.pressedMouseMove || t._v) && (!e2.horzTouchDrag && !e2.vertTouchDrag || !t._v))
      return;
    const h2 = this.bp.vn(), l2 = performance.now();
    if (null !== this.ap || this.Jp(t) || (this.ap = { x: t.clientX, y: t.clientY, Sd: l2, im: t.localX, nm: t.localY }), null !== this.ap && !this.op && (this.ap.x !== t.clientX || this.ap.y !== t.clientY)) {
      if (t._v && r2.touch || !t._v && r2.mouse) {
        const t2 = n.he();
        this.mp = new os(0.2 / t2, 7 / t2, 0.997, 15 / t2), this.mp.Ld(n.Eu(), this.ap.Sd);
      } else
        this.mp = null;
      h2.Fi() || i.P_(this.bp, h2, t.localY), i.Yc(t.localX), this.op = true;
    }
    this.op && (h2.Fi() || i.R_(this.bp, h2, t.localY), i.Xc(t.localX), null !== this.mp && this.mp.Ld(n.Eu(), l2));
  }
};
var Ds = class {
  constructor(i, n, s, e2, r2) {
    this.bt = true, this.bv = size({ width: 0, height: 0 }), this.Sv = () => this.Kv(3), this.Cv = "left" === i, this.kc = s.nd, this.cn = n, this.sm = e2, this.rm = r2, this.Dv = document.createElement("div"), this.Dv.style.width = "25px", this.Dv.style.height = "100%", this.Dv.style.overflow = "hidden", this.Ov = _s(this.Dv, size({ width: 16, height: 16 })), this.Ov.subscribeSuggestedBitmapSizeChanged(this.Sv);
  }
  S() {
    this.Ov.unsubscribeSuggestedBitmapSizeChanged(this.Sv), this.Ov.dispose();
  }
  Wv() {
    return this.Dv;
  }
  Hp() {
    return this.bv;
  }
  qv(t) {
    equalSizes(this.bv, t) || (this.bv = t, this.Ov.resizeCanvasElement(t), this.Dv.style.width = `${t.width}px`, this.Dv.style.height = `${t.height}px`, this.bt = true);
  }
  Kv(t) {
    if (t < 3 && !this.bt)
      return;
    if (0 === this.bv.width || 0 === this.bv.height)
      return;
    this.bt = false, this.Ov.applySuggestedBitmapSize();
    const i = tryCreateCanvasRenderingTarget2D(this.Ov);
    null !== i && i.useBitmapCoordinateSpace((t2) => {
      this.Gv(t2), this.Be(t2);
    });
  }
  np() {
    return this.Ov.bitmapSize;
  }
  sp(t, i, n) {
    const s = this.np();
    s.width > 0 && s.height > 0 && t.drawImage(this.Ov.canvasElement, i, n);
  }
  Be({ context: t, bitmapSize: i, horizontalPixelRatio: n, verticalPixelRatio: s }) {
    if (!this.sm())
      return;
    t.fillStyle = this.cn.timeScale.borderColor;
    const e2 = Math.floor(this.kc.W().C * n), r2 = Math.floor(this.kc.W().C * s), h2 = this.Cv ? i.width - e2 : 0;
    t.fillRect(h2, 0, e2, r2);
  }
  Gv({ context: t, bitmapSize: i }) {
    G(t, 0, 0, i.width, i.height, this.rm());
  }
};
function Os(t) {
  return (i) => {
    var n, s;
    return null !== (s = null === (n = i.aa) || void 0 === n ? void 0 : n.call(i, t)) && void 0 !== s ? s : [];
  };
}
var As = Os("normal");
var Vs = Os("top");
var Bs = Os("bottom");
var Is = class {
  constructor(i, n) {
    this.hm = null, this.lm = null, this.k = null, this.am = false, this.bv = size({ width: 0, height: 0 }), this.om = new R(), this.gv = new si(5), this.xv = false, this.Sv = () => {
      this.xv || this.wp.qt().Fh();
    }, this.yv = () => {
      this.xv || this.wp.qt().Fh();
    }, this.wp = i, this.N_ = n, this.cn = i.W().layout, this._m = document.createElement("tr"), this.um = document.createElement("td"), this.um.style.padding = "0", this.dm = document.createElement("td"), this.dm.style.padding = "0", this.Dv = document.createElement("td"), this.Dv.style.height = "25px", this.Dv.style.padding = "0", this.fm = document.createElement("div"), this.fm.style.width = "100%", this.fm.style.height = "100%", this.fm.style.position = "relative", this.fm.style.overflow = "hidden", this.Dv.appendChild(this.fm), this.Ov = _s(this.fm, size({ width: 16, height: 16 })), this.Ov.subscribeSuggestedBitmapSizeChanged(this.Sv);
    const s = this.Ov.canvasElement;
    s.style.position = "absolute", s.style.zIndex = "1", s.style.left = "0", s.style.top = "0", this.Av = _s(this.fm, size({ width: 16, height: 16 })), this.Av.subscribeSuggestedBitmapSizeChanged(this.yv);
    const e2 = this.Av.canvasElement;
    e2.style.position = "absolute", e2.style.zIndex = "2", e2.style.left = "0", e2.style.top = "0", this._m.appendChild(this.um), this._m.appendChild(this.Dv), this._m.appendChild(this.dm), this.vm(), this.wp.qt().f_().l(this.vm.bind(this), this), this.Fv = new vs(this.Av.canvasElement, this, { Lf: () => true, Nf: () => false });
  }
  S() {
    this.Fv.S(), null !== this.hm && this.hm.S(), null !== this.lm && this.lm.S(), this.Av.unsubscribeSuggestedBitmapSizeChanged(this.yv), this.Av.dispose(), this.Ov.unsubscribeSuggestedBitmapSizeChanged(this.Sv), this.Ov.dispose();
  }
  Wv() {
    return this._m;
  }
  pm() {
    return this.hm;
  }
  bm() {
    return this.lm;
  }
  Jf(t) {
    if (this.am)
      return;
    this.am = true;
    const i = this.wp.qt();
    !i.yt().Fi() && this.wp.W().handleScale.axisPressedMouseMove.time && i.$c(t.localX);
  }
  Zf(t) {
    this.Jf(t);
  }
  Qf() {
    const t = this.wp.qt();
    !t.yt().Fi() && this.am && (this.am = false, this.wp.W().handleScale.axisPressedMouseMove.time && t.Gc());
  }
  jf(t) {
    const i = this.wp.qt();
    !i.yt().Fi() && this.wp.W().handleScale.axisPressedMouseMove.time && i.Zc(t.localX);
  }
  Ff(t) {
    this.jf(t);
  }
  qf() {
    this.am = false;
    const t = this.wp.qt();
    t.yt().Fi() && !this.wp.W().handleScale.axisPressedMouseMove.time || t.Gc();
  }
  $f() {
    this.qf();
  }
  Cf() {
    this.wp.W().handleScale.axisDoubleClickReset.time && this.wp.qt().Zn();
  }
  xf() {
    this.Cf();
  }
  Vf() {
    this.wp.qt().W().handleScale.axisPressedMouseMove.time && this.ep(1);
  }
  av() {
    this.ep(0);
  }
  Hp() {
    return this.bv;
  }
  wm() {
    return this.om;
  }
  gm(i, s, e2) {
    equalSizes(this.bv, i) || (this.bv = i, this.xv = true, this.Ov.resizeCanvasElement(i), this.Av.resizeCanvasElement(i), this.xv = false, this.Dv.style.width = `${i.width}px`, this.Dv.style.height = `${i.height}px`, this.om.m(i)), null !== this.hm && this.hm.qv(size({ width: s, height: i.height })), null !== this.lm && this.lm.qv(size({ width: e2, height: i.height }));
  }
  Mm() {
    const t = this.xm();
    return Math.ceil(t.C + t.T + t.P + t.L + t.V + t.Sm);
  }
  gt() {
    this.wp.qt().yt().Ea();
  }
  np() {
    return this.Ov.bitmapSize;
  }
  sp(t, i, n) {
    const s = this.np();
    s.width > 0 && s.height > 0 && t.drawImage(this.Ov.canvasElement, i, n);
  }
  Kv(t) {
    if (0 === t)
      return;
    if (1 !== t) {
      this.Ov.applySuggestedBitmapSize();
      const i2 = tryCreateCanvasRenderingTarget2D(this.Ov);
      null !== i2 && (i2.useBitmapCoordinateSpace((t2) => {
        this.Gv(t2), this.Be(t2), this.km(i2, Bs);
      }), this.Qv(i2), this.km(i2, As)), null !== this.hm && this.hm.Kv(t), null !== this.lm && this.lm.Kv(t);
    }
    this.Av.applySuggestedBitmapSize();
    const i = tryCreateCanvasRenderingTarget2D(this.Av);
    null !== i && (i.useBitmapCoordinateSpace(({ context: t2, bitmapSize: i2 }) => {
      t2.clearRect(0, 0, i2.width, i2.height);
    }), this.ym([...this.wp.qt().Mt(), this.wp.qt().Fc()], i), this.km(i, Vs));
  }
  km(t, i) {
    const n = this.wp.qt().Mt();
    for (const s of n)
      ds(i, (i2) => us(i2, t, false, void 0), s, void 0);
    for (const s of n)
      ds(i, (i2) => cs(i2, t, false, void 0), s, void 0);
  }
  Gv({ context: t, bitmapSize: i }) {
    G(t, 0, 0, i.width, i.height, this.wp.qt().ad());
  }
  Be({ context: t, bitmapSize: i, verticalPixelRatio: n }) {
    if (this.wp.W().timeScale.borderVisible) {
      t.fillStyle = this.Cm();
      const s = Math.max(1, Math.floor(this.xm().C * n));
      t.fillRect(0, 0, i.width, s);
    }
  }
  Qv(t) {
    const i = this.wp.qt().yt(), n = i.Ea();
    if (!n || 0 === n.length)
      return;
    const s = this.N_.maxTickMarkWeight(n), e2 = this.xm(), r2 = i.W();
    r2.borderVisible && r2.ticksVisible && t.useBitmapCoordinateSpace(({ context: t2, horizontalPixelRatio: i2, verticalPixelRatio: s2 }) => {
      t2.strokeStyle = this.Cm(), t2.fillStyle = this.Cm();
      const r3 = Math.max(1, Math.floor(i2)), h2 = Math.floor(0.5 * i2);
      t2.beginPath();
      const l2 = Math.round(e2.T * s2);
      for (let s3 = n.length; s3--; ) {
        const e3 = Math.round(n[s3].coord * i2);
        t2.rect(e3 - h2, 0, r3, l2);
      }
      t2.fill();
    }), t.useMediaCoordinateSpace(({ context: t2 }) => {
      const i2 = e2.C + e2.T + e2.L + e2.P / 2;
      t2.textAlign = "center", t2.textBaseline = "middle", t2.fillStyle = this.$(), t2.font = this.$v();
      for (const e3 of n)
        if (e3.weight < s) {
          const n2 = e3.needAlignCoordinate ? this.Tm(t2, e3.coord, e3.label) : e3.coord;
          t2.fillText(e3.label, n2, i2);
        }
      t2.font = this.Pm();
      for (const e3 of n)
        if (e3.weight >= s) {
          const n2 = e3.needAlignCoordinate ? this.Tm(t2, e3.coord, e3.label) : e3.coord;
          t2.fillText(e3.label, n2, i2);
        }
    });
  }
  Tm(t, i, n) {
    const s = this.gv.Si(t, n), e2 = s / 2, r2 = Math.floor(i - e2) + 0.5;
    return r2 < 0 ? i += Math.abs(0 - r2) : r2 + s > this.bv.width && (i -= Math.abs(this.bv.width - (r2 + s))), i;
  }
  ym(t, i) {
    const n = this.xm();
    for (const s of t)
      for (const t2 of s.tn())
        t2.xt().K(i, n);
  }
  Cm() {
    return this.wp.W().timeScale.borderColor;
  }
  $() {
    return this.cn.textColor;
  }
  j() {
    return this.cn.fontSize;
  }
  $v() {
    return N(this.j(), this.cn.fontFamily);
  }
  Pm() {
    return N(this.j(), this.cn.fontFamily, "bold");
  }
  xm() {
    null === this.k && (this.k = { C: 1, N: NaN, L: NaN, V: NaN, Hi: NaN, T: 5, P: NaN, R: "", ji: new si(), Sm: 0 });
    const t = this.k, i = this.$v();
    if (t.R !== i) {
      const n = this.j();
      t.P = n, t.R = i, t.L = 3 * n / 12, t.V = 3 * n / 12, t.Hi = 9 * n / 12, t.N = 0, t.Sm = 4 * n / 12, t.ji.ir();
    }
    return this.k;
  }
  ep(t) {
    this.Dv.style.cursor = 1 === t ? "ew-resize" : "default";
  }
  vm() {
    const t = this.wp.qt(), i = t.W();
    i.leftPriceScale.visible || null === this.hm || (this.um.removeChild(this.hm.Wv()), this.hm.S(), this.hm = null), i.rightPriceScale.visible || null === this.lm || (this.dm.removeChild(this.lm.Wv()), this.lm.S(), this.lm = null);
    const n = { nd: this.wp.qt().nd() }, s = () => i.leftPriceScale.borderVisible && t.yt().W().borderVisible, e2 = () => t.ad();
    i.leftPriceScale.visible && null === this.hm && (this.hm = new Ds("left", i, n, s, e2), this.um.appendChild(this.hm.Wv())), i.rightPriceScale.visible && null === this.lm && (this.lm = new Ds("right", i, n, s, e2), this.dm.appendChild(this.lm.Wv()));
  }
};
var zs = !!ss && !!navigator.userAgentData && navigator.userAgentData.brands.some((t) => t.brand.includes("Chromium")) && !!ss && ((null === (Es = null === navigator || void 0 === navigator ? void 0 : navigator.userAgentData) || void 0 === Es ? void 0 : Es.platform) ? "Windows" === navigator.userAgentData.platform : navigator.userAgent.toLowerCase().indexOf("win") >= 0);
var Es;
var Ls = class {
  constructor(t, i, n) {
    var s;
    this.Rm = [], this.Dm = 0, this.Qa = 0, this.e_ = 0, this.Om = 0, this.Am = 0, this.Vm = null, this.Bm = false, this._p = new R(), this.up = new R(), this.Mc = new R(), this.Im = null, this.zm = null, this.Em = t, this.cn = i, this.N_ = n, this._m = document.createElement("div"), this._m.classList.add("tv-lightweight-charts"), this._m.style.overflow = "hidden", this._m.style.direction = "ltr", this._m.style.width = "100%", this._m.style.height = "100%", (s = this._m).style.userSelect = "none", s.style.webkitUserSelect = "none", s.style.msUserSelect = "none", s.style.MozUserSelect = "none", s.style.webkitTapHighlightColor = "transparent", this.Lm = document.createElement("table"), this.Lm.setAttribute("cellspacing", "0"), this._m.appendChild(this.Lm), this.Nm = this.Fm.bind(this), Ns(this.cn) && this.Wm(true), this.Ui = new Ln(this.Sc.bind(this), this.cn, n), this.qt().Wc().l(this.jm.bind(this), this), this.Hm = new Is(this, this.N_), this.Lm.appendChild(this.Hm.Wv());
    const e2 = i.autoSize && this.$m();
    let r2 = this.cn.width, h2 = this.cn.height;
    if (e2 || 0 === r2 || 0 === h2) {
      const i2 = t.getBoundingClientRect();
      r2 = r2 || i2.width, h2 = h2 || i2.height;
    }
    this.Um(r2, h2), this.qm(), t.appendChild(this._m), this.Ym(), this.Ui.yt().Gu().l(this.Ui.$l.bind(this.Ui), this), this.Ui.f_().l(this.Ui.$l.bind(this.Ui), this);
  }
  qt() {
    return this.Ui;
  }
  W() {
    return this.cn;
  }
  Xm() {
    return this.Rm;
  }
  Km() {
    return this.Hm;
  }
  S() {
    this.Wm(false), 0 !== this.Dm && window.cancelAnimationFrame(this.Dm), this.Ui.Wc().p(this), this.Ui.yt().Gu().p(this), this.Ui.f_().p(this), this.Ui.S();
    for (const t of this.Rm)
      this.Lm.removeChild(t.Wv()), t.Np().p(this), t.Fp().p(this), t.S();
    this.Rm = [], b(this.Hm).S(), null !== this._m.parentElement && this._m.parentElement.removeChild(this._m), this.Mc.S(), this._p.S(), this.up.S(), this.Zm();
  }
  Um(i, n, s = false) {
    if (this.Qa === n && this.e_ === i)
      return;
    const e2 = function(i2) {
      const n2 = Math.floor(i2.width), s2 = Math.floor(i2.height);
      return size({ width: n2 - n2 % 2, height: s2 - s2 % 2 });
    }(size({ width: i, height: n }));
    this.Qa = e2.height, this.e_ = e2.width;
    const r2 = this.Qa + "px", h2 = this.e_ + "px";
    b(this._m).style.height = r2, b(this._m).style.width = h2, this.Lm.style.height = r2, this.Lm.style.width = h2, s ? this.Gm(ct.es(), performance.now()) : this.Ui.$l();
  }
  Kv(t) {
    void 0 === t && (t = ct.es());
    for (let i = 0; i < this.Rm.length; i++)
      this.Rm[i].Kv(t.Hn(i).Fn);
    this.cn.timeScale.visible && this.Hm.Kv(t.jn());
  }
  Nh(t) {
    const i = Ns(this.cn);
    this.Ui.Nh(t);
    const n = Ns(this.cn);
    n !== i && this.Wm(n), this.Ym(), this.Jm(t);
  }
  Np() {
    return this._p;
  }
  Fp() {
    return this.up;
  }
  Wc() {
    return this.Mc;
  }
  Qm() {
    null !== this.Vm && (this.Gm(this.Vm, performance.now()), this.Vm = null);
    const t = this.tb(null), i = document.createElement("canvas");
    i.width = t.width, i.height = t.height;
    const n = b(i.getContext("2d"));
    return this.tb(n), i;
  }
  ib(t) {
    if ("left" === t && !this.nb())
      return 0;
    if ("right" === t && !this.sb())
      return 0;
    if (0 === this.Rm.length)
      return 0;
    return b("left" === t ? this.Rm[0].Kp() : this.Rm[0].Zp()).Yv();
  }
  eb() {
    return this.cn.autoSize && null !== this.Im;
  }
  rb() {
    return this._m;
  }
  Ap(t) {
    this.zm = t, this.zm ? this.rb().style.setProperty("cursor", t) : this.rb().style.removeProperty("cursor");
  }
  hb() {
    return this.zm;
  }
  lb() {
    return m(this.Rm[0]).Hp();
  }
  Jm(t) {
    (void 0 !== t.autoSize || !this.Im || void 0 === t.width && void 0 === t.height) && (t.autoSize && !this.Im && this.$m(), false === t.autoSize && null !== this.Im && this.Zm(), t.autoSize || void 0 === t.width && void 0 === t.height || this.Um(t.width || this.e_, t.height || this.Qa));
  }
  tb(i) {
    let n = 0, s = 0;
    const e2 = this.Rm[0], r2 = (t, n2) => {
      let s2 = 0;
      for (let e3 = 0; e3 < this.Rm.length; e3++) {
        const r3 = this.Rm[e3], h3 = b("left" === t ? r3.Kp() : r3.Zp()), l2 = h3.np();
        null !== i && h3.sp(i, n2, s2), s2 += l2.height;
      }
    };
    if (this.nb()) {
      r2("left", 0);
      n += b(e2.Kp()).np().width;
    }
    for (let t = 0; t < this.Rm.length; t++) {
      const e3 = this.Rm[t], r3 = e3.np();
      null !== i && e3.sp(i, n, s), s += r3.height;
    }
    if (n += e2.np().width, this.sb()) {
      r2("right", n);
      n += b(e2.Zp()).np().width;
    }
    const h2 = (t, n2, s2) => {
      b("left" === t ? this.Hm.pm() : this.Hm.bm()).sp(b(i), n2, s2);
    };
    if (this.cn.timeScale.visible) {
      const t = this.Hm.np();
      if (null !== i) {
        let n2 = 0;
        this.nb() && (h2("left", n2, s), n2 = b(e2.Kp()).np().width), this.Hm.sp(i, n2, s), n2 += t.width, this.sb() && h2("right", n2, s);
      }
      s += t.height;
    }
    return size({ width: n, height: s });
  }
  ab() {
    let i = 0, n = 0, s = 0;
    for (const t of this.Rm)
      this.nb() && (n = Math.max(n, b(t.Kp()).Hv(), this.cn.leftPriceScale.minimumWidth)), this.sb() && (s = Math.max(s, b(t.Zp()).Hv(), this.cn.rightPriceScale.minimumWidth)), i += t.v_();
    n = hs(n), s = hs(s);
    const e2 = this.e_, r2 = this.Qa, h2 = Math.max(e2 - n - s, 0), l2 = this.cn.timeScale.visible;
    let a2 = l2 ? Math.max(this.Hm.Mm(), this.cn.timeScale.minimumHeight) : 0;
    var o3;
    a2 = (o3 = a2) + o3 % 2;
    const _2 = 0 + a2, u2 = r2 < _2 ? 0 : r2 - _2, c2 = u2 / i;
    let d2 = 0;
    for (let i2 = 0; i2 < this.Rm.length; ++i2) {
      const e3 = this.Rm[i2];
      e3.Cp(this.Ui.Lc()[i2]);
      let r3 = 0, l3 = 0;
      l3 = i2 === this.Rm.length - 1 ? u2 - d2 : Math.round(e3.v_() * c2), r3 = Math.max(l3, 2), d2 += r3, e3.qv(size({ width: h2, height: r3 })), this.nb() && e3.jp(n, "left"), this.sb() && e3.jp(s, "right"), e3.Xv() && this.Ui.jc(e3.Xv(), r3);
    }
    this.Hm.gm(size({ width: l2 ? h2 : 0, height: a2 }), l2 ? n : 0, l2 ? s : 0), this.Ui.m_(h2), this.Om !== n && (this.Om = n), this.Am !== s && (this.Am = s);
  }
  Wm(t) {
    t ? this._m.addEventListener("wheel", this.Nm, { passive: false }) : this._m.removeEventListener("wheel", this.Nm);
  }
  ob(t) {
    switch (t.deltaMode) {
      case t.DOM_DELTA_PAGE:
        return 120;
      case t.DOM_DELTA_LINE:
        return 32;
    }
    return zs ? 1 / window.devicePixelRatio : 1;
  }
  Fm(t) {
    if (!(0 !== t.deltaX && this.cn.handleScroll.mouseWheel || 0 !== t.deltaY && this.cn.handleScale.mouseWheel))
      return;
    const i = this.ob(t), n = i * t.deltaX / 100, s = -i * t.deltaY / 100;
    if (t.cancelable && t.preventDefault(), 0 !== s && this.cn.handleScale.mouseWheel) {
      const i2 = Math.sign(s) * Math.min(1, Math.abs(s)), n2 = t.clientX - this._m.getBoundingClientRect().left;
      this.qt().Uc(n2, i2);
    }
    0 !== n && this.cn.handleScroll.mouseWheel && this.qt().qc(-80 * n);
  }
  Gm(t, i) {
    var n;
    const s = t.jn();
    3 === s && this._b(), 3 !== s && 2 !== s || (this.ub(t), this.cb(t, i), this.Hm.gt(), this.Rm.forEach((t2) => {
      t2.Pp();
    }), 3 === (null === (n = this.Vm) || void 0 === n ? void 0 : n.jn()) && (this.Vm.ts(t), this._b(), this.ub(this.Vm), this.cb(this.Vm, i), t = this.Vm, this.Vm = null)), this.Kv(t);
  }
  cb(t, i) {
    for (const n of t.Qn())
      this.ns(n, i);
  }
  ub(t) {
    const i = this.Ui.Lc();
    for (let n = 0; n < i.length; n++)
      t.Hn(n).Wn && i[n].V_();
  }
  ns(t, i) {
    const n = this.Ui.yt();
    switch (t.qn) {
      case 0:
        n.Qu();
        break;
      case 1:
        n.tc(t.Vt);
        break;
      case 2:
        n.Gn(t.Vt);
        break;
      case 3:
        n.Jn(t.Vt);
        break;
      case 4:
        n.Fu();
        break;
      case 5:
        t.Vt.Yu(i) || n.Jn(t.Vt.Xu(i));
    }
  }
  Sc(t) {
    null !== this.Vm ? this.Vm.ts(t) : this.Vm = t, this.Bm || (this.Bm = true, this.Dm = window.requestAnimationFrame((t2) => {
      if (this.Bm = false, this.Dm = 0, null !== this.Vm) {
        const i = this.Vm;
        this.Vm = null, this.Gm(i, t2);
        for (const n of i.Qn())
          if (5 === n.qn && !n.Vt.Yu(t2)) {
            this.qt().Xn(n.Vt);
            break;
          }
      }
    }));
  }
  _b() {
    this.qm();
  }
  qm() {
    const t = this.Ui.Lc(), i = t.length, n = this.Rm.length;
    for (let t2 = i; t2 < n; t2++) {
      const t3 = m(this.Rm.pop());
      this.Lm.removeChild(t3.Wv()), t3.Np().p(this), t3.Fp().p(this), t3.S();
    }
    for (let s = n; s < i; s++) {
      const i2 = new Rs(this, t[s]);
      i2.Np().l(this.fb.bind(this), this), i2.Fp().l(this.vb.bind(this), this), this.Rm.push(i2), this.Lm.insertBefore(i2.Wv(), this.Hm.Wv());
    }
    for (let n2 = 0; n2 < i; n2++) {
      const i2 = t[n2], s = this.Rm[n2];
      s.Xv() !== i2 ? s.Cp(i2) : s.yp();
    }
    this.Ym(), this.ab();
  }
  pb(t, i, n) {
    var s;
    const e2 = /* @__PURE__ */ new Map();
    if (null !== t) {
      this.Ui.Mt().forEach((i2) => {
        const n2 = i2.In().nl(t);
        null !== n2 && e2.set(i2, n2);
      });
    }
    let r2;
    if (null !== t) {
      const i2 = null === (s = this.Ui.yt().qi(t)) || void 0 === s ? void 0 : s.originalTime;
      void 0 !== i2 && (r2 = i2);
    }
    const h2 = this.qt().Vc(), l2 = null !== h2 && h2.Ic instanceof Qi ? h2.Ic : void 0, a2 = null !== h2 && void 0 !== h2.vv ? h2.vv.wr : void 0;
    return { mb: r2, se: null != t ? t : void 0, bb: null != i ? i : void 0, wb: l2, gb: e2, Mb: a2, xb: null != n ? n : void 0 };
  }
  fb(t, i, n) {
    this._p.m(() => this.pb(t, i, n));
  }
  vb(t, i, n) {
    this.up.m(() => this.pb(t, i, n));
  }
  jm(t, i, n) {
    this.Mc.m(() => this.pb(t, i, n));
  }
  Ym() {
    const t = this.cn.timeScale.visible ? "" : "none";
    this.Hm.Wv().style.display = t;
  }
  nb() {
    return this.Rm[0].Xv().S_().W().visible;
  }
  sb() {
    return this.Rm[0].Xv().k_().W().visible;
  }
  $m() {
    return "ResizeObserver" in window && (this.Im = new ResizeObserver((t) => {
      const i = t.find((t2) => t2.target === this.Em);
      i && this.Um(i.contentRect.width, i.contentRect.height);
    }), this.Im.observe(this.Em, { box: "border-box" }), true);
  }
  Zm() {
    null !== this.Im && this.Im.disconnect(), this.Im = null;
  }
};
function Ns(t) {
  return Boolean(t.handleScroll.mouseWheel || t.handleScale.mouseWheel);
}
function Fs(t, i) {
  var n = {};
  for (var s in t)
    Object.prototype.hasOwnProperty.call(t, s) && i.indexOf(s) < 0 && (n[s] = t[s]);
  if (null != t && "function" == typeof Object.getOwnPropertySymbols) {
    var e2 = 0;
    for (s = Object.getOwnPropertySymbols(t); e2 < s.length; e2++)
      i.indexOf(s[e2]) < 0 && Object.prototype.propertyIsEnumerable.call(t, s[e2]) && (n[s[e2]] = t[s[e2]]);
  }
  return n;
}
function Ws(t, i, n, s) {
  const e2 = n.value, r2 = { se: i, ut: t, Vt: [e2, e2, e2, e2], mb: s };
  return void 0 !== n.color && (r2.O = n.color), r2;
}
function js(t, i, n, s) {
  const e2 = n.value, r2 = { se: i, ut: t, Vt: [e2, e2, e2, e2], mb: s };
  return void 0 !== n.lineColor && (r2._t = n.lineColor), void 0 !== n.topColor && (r2.Ts = n.topColor), void 0 !== n.bottomColor && (r2.Ps = n.bottomColor), r2;
}
function Hs(t, i, n, s) {
  const e2 = n.value, r2 = { se: i, ut: t, Vt: [e2, e2, e2, e2], mb: s };
  return void 0 !== n.topLineColor && (r2.Pe = n.topLineColor), void 0 !== n.bottomLineColor && (r2.Re = n.bottomLineColor), void 0 !== n.topFillColor1 && (r2.Se = n.topFillColor1), void 0 !== n.topFillColor2 && (r2.ke = n.topFillColor2), void 0 !== n.bottomFillColor1 && (r2.ye = n.bottomFillColor1), void 0 !== n.bottomFillColor2 && (r2.Ce = n.bottomFillColor2), r2;
}
function $s(t, i, n, s) {
  const e2 = { se: i, ut: t, Vt: [n.open, n.high, n.low, n.close], mb: s };
  return void 0 !== n.color && (e2.O = n.color), e2;
}
function Us(t, i, n, s) {
  const e2 = { se: i, ut: t, Vt: [n.open, n.high, n.low, n.close], mb: s };
  return void 0 !== n.color && (e2.O = n.color), void 0 !== n.borderColor && (e2.Bt = n.borderColor), void 0 !== n.wickColor && (e2.$h = n.wickColor), e2;
}
function qs(t, i, n, s, e2) {
  const r2 = m(e2)(n), h2 = Math.max(...r2), l2 = Math.min(...r2), a2 = r2[r2.length - 1], o3 = [a2, h2, l2, a2], _2 = n, { time: u2, color: c2 } = _2;
  return { se: i, ut: t, Vt: o3, mb: s, He: Fs(_2, ["time", "color"]), O: c2 };
}
function Ys(t) {
  return void 0 !== t.Vt;
}
function Xs(t, i) {
  return void 0 !== i.customValues && (t.Sb = i.customValues), t;
}
function Ks(t) {
  return (i, n, s, e2, r2, h2) => function(t2, i2) {
    return i2 ? i2(t2) : void 0 === (n2 = t2).open && void 0 === n2.value;
    var n2;
  }(s, h2) ? Xs({ ut: i, se: n, mb: e2 }, s) : Xs(t(i, n, s, e2, r2), s);
}
function Zs(t) {
  return { Candlestick: Ks(Us), Bar: Ks($s), Area: Ks(js), Baseline: Ks(Hs), Histogram: Ks(Ws), Line: Ks(Ws), Custom: Ks(qs) }[t];
}
function Gs(t) {
  return { se: 0, kb: /* @__PURE__ */ new Map(), ia: t };
}
function Js(t, i) {
  if (void 0 !== t && 0 !== t.length)
    return { yb: i.key(t[0].ut), Cb: i.key(t[t.length - 1].ut) };
}
function Qs(t) {
  let i;
  return t.forEach((t2) => {
    void 0 === i && (i = t2.mb);
  }), m(i);
}
var te = class {
  constructor(t) {
    this.Tb = /* @__PURE__ */ new Map(), this.Pb = /* @__PURE__ */ new Map(), this.Rb = /* @__PURE__ */ new Map(), this.Db = [], this.N_ = t;
  }
  S() {
    this.Tb.clear(), this.Pb.clear(), this.Rb.clear(), this.Db = [];
  }
  Ob(t, i) {
    let n = 0 !== this.Tb.size, s = false;
    const e2 = this.Pb.get(t);
    if (void 0 !== e2)
      if (1 === this.Pb.size)
        n = false, s = true, this.Tb.clear();
      else
        for (const i2 of this.Db)
          i2.pointData.kb.delete(t) && (s = true);
    let r2 = [];
    if (0 !== i.length) {
      const n2 = i.map((t2) => t2.time), e3 = this.N_.createConverterToInternalObj(i), h3 = Zs(t.Xh()), l2 = t.ga(), a2 = t.Ma();
      r2 = i.map((i2, r3) => {
        const o3 = e3(i2.time), _2 = this.N_.key(o3);
        let u2 = this.Tb.get(_2);
        void 0 === u2 && (u2 = Gs(o3), this.Tb.set(_2, u2), s = true);
        const c2 = h3(o3, u2.se, i2, n2[r3], l2, a2);
        return u2.kb.set(t, c2), c2;
      });
    }
    n && this.Ab(), this.Vb(t, r2);
    let h2 = -1;
    if (s) {
      const t2 = [];
      this.Tb.forEach((i2) => {
        t2.push({ timeWeight: 0, time: i2.ia, pointData: i2, originalTime: Qs(i2.kb) });
      }), t2.sort((t3, i2) => this.N_.key(t3.time) - this.N_.key(i2.time)), h2 = this.Bb(t2);
    }
    return this.Ib(t, h2, function(t2, i2, n2) {
      const s2 = Js(t2, n2), e3 = Js(i2, n2);
      if (void 0 !== s2 && void 0 !== e3)
        return { Xl: s2.Cb >= e3.Cb && s2.yb >= e3.yb };
    }(this.Pb.get(t), e2, this.N_));
  }
  rd(t) {
    return this.Ob(t, []);
  }
  zb(t, i) {
    const n = i;
    !function(t2) {
      void 0 === t2.mb && (t2.mb = t2.time);
    }(n), this.N_.preprocessData(i);
    const s = this.N_.createConverterToInternalObj([i])(i.time), e2 = this.Rb.get(t);
    if (void 0 !== e2 && this.N_.key(s) < this.N_.key(e2))
      throw new Error(`Cannot update oldest data, last time=${e2}, new time=${s}`);
    let r2 = this.Tb.get(this.N_.key(s));
    const h2 = void 0 === r2;
    void 0 === r2 && (r2 = Gs(s), this.Tb.set(this.N_.key(s), r2));
    const l2 = Zs(t.Xh()), a2 = t.ga(), o3 = t.Ma(), _2 = l2(s, r2.se, i, n.mb, a2, o3);
    r2.kb.set(t, _2), this.Eb(t, _2);
    const u2 = { Xl: Ys(_2) };
    if (!h2)
      return this.Ib(t, -1, u2);
    const c2 = { timeWeight: 0, time: r2.ia, pointData: r2, originalTime: Qs(r2.kb) }, d2 = Bt(this.Db, this.N_.key(c2.time), (t2, i2) => this.N_.key(t2.time) < i2);
    this.Db.splice(d2, 0, c2);
    for (let t2 = d2; t2 < this.Db.length; ++t2)
      ie(this.Db[t2].pointData, t2);
    return this.N_.fillWeightsForPoints(this.Db, d2), this.Ib(t, d2, u2);
  }
  Eb(t, i) {
    let n = this.Pb.get(t);
    void 0 === n && (n = [], this.Pb.set(t, n));
    const s = 0 !== n.length ? n[n.length - 1] : null;
    null === s || this.N_.key(i.ut) > this.N_.key(s.ut) ? Ys(i) && n.push(i) : Ys(i) ? n[n.length - 1] = i : n.splice(-1, 1), this.Rb.set(t, i.ut);
  }
  Vb(t, i) {
    0 !== i.length ? (this.Pb.set(t, i.filter(Ys)), this.Rb.set(t, i[i.length - 1].ut)) : (this.Pb.delete(t), this.Rb.delete(t));
  }
  Ab() {
    for (const t of this.Db)
      0 === t.pointData.kb.size && this.Tb.delete(this.N_.key(t.time));
  }
  Bb(t) {
    let i = -1;
    for (let n = 0; n < this.Db.length && n < t.length; ++n) {
      const s = this.Db[n], e2 = t[n];
      if (this.N_.key(s.time) !== this.N_.key(e2.time)) {
        i = n;
        break;
      }
      e2.timeWeight = s.timeWeight, ie(e2.pointData, n);
    }
    if (-1 === i && this.Db.length !== t.length && (i = Math.min(this.Db.length, t.length)), -1 === i)
      return -1;
    for (let n = i; n < t.length; ++n)
      ie(t[n].pointData, n);
    return this.N_.fillWeightsForPoints(t, i), this.Db = t, i;
  }
  Lb() {
    if (0 === this.Pb.size)
      return null;
    let t = 0;
    return this.Pb.forEach((i) => {
      0 !== i.length && (t = Math.max(t, i[i.length - 1].se));
    }), t;
  }
  Ib(t, i, n) {
    const s = { Nb: /* @__PURE__ */ new Map(), yt: { Au: this.Lb() } };
    if (-1 !== i)
      this.Pb.forEach((i2, e2) => {
        s.Nb.set(e2, { He: i2, Fb: e2 === t ? n : void 0 });
      }), this.Pb.has(t) || s.Nb.set(t, { He: [], Fb: n }), s.yt.Wb = this.Db, s.yt.jb = i;
    else {
      const i2 = this.Pb.get(t);
      s.Nb.set(t, { He: i2 || [], Fb: n });
    }
    return s;
  }
};
function ie(t, i) {
  t.se = i, t.kb.forEach((t2) => {
    t2.se = i;
  });
}
function ne(t) {
  const i = { value: t.Vt[3], time: t.mb };
  return void 0 !== t.Sb && (i.customValues = t.Sb), i;
}
function se(t) {
  const i = ne(t);
  return void 0 !== t.O && (i.color = t.O), i;
}
function ee(t) {
  const i = ne(t);
  return void 0 !== t._t && (i.lineColor = t._t), void 0 !== t.Ts && (i.topColor = t.Ts), void 0 !== t.Ps && (i.bottomColor = t.Ps), i;
}
function re(t) {
  const i = ne(t);
  return void 0 !== t.Pe && (i.topLineColor = t.Pe), void 0 !== t.Re && (i.bottomLineColor = t.Re), void 0 !== t.Se && (i.topFillColor1 = t.Se), void 0 !== t.ke && (i.topFillColor2 = t.ke), void 0 !== t.ye && (i.bottomFillColor1 = t.ye), void 0 !== t.Ce && (i.bottomFillColor2 = t.Ce), i;
}
function he(t) {
  const i = { open: t.Vt[0], high: t.Vt[1], low: t.Vt[2], close: t.Vt[3], time: t.mb };
  return void 0 !== t.Sb && (i.customValues = t.Sb), i;
}
function le(t) {
  const i = he(t);
  return void 0 !== t.O && (i.color = t.O), i;
}
function ae(t) {
  const i = he(t), { O: n, Bt: s, $h: e2 } = t;
  return void 0 !== n && (i.color = n), void 0 !== s && (i.borderColor = s), void 0 !== e2 && (i.wickColor = e2), i;
}
function oe(t) {
  return { Area: ee, Line: se, Baseline: re, Histogram: se, Bar: le, Candlestick: ae, Custom: _e }[t];
}
function _e(t) {
  const i = t.mb;
  return Object.assign(Object.assign({}, t.He), { time: i });
}
var ue = { vertLine: { color: "#9598A1", width: 1, style: 3, visible: true, labelVisible: true, labelBackgroundColor: "#131722" }, horzLine: { color: "#9598A1", width: 1, style: 3, visible: true, labelVisible: true, labelBackgroundColor: "#131722" }, mode: 1 };
var ce = { vertLines: { color: "#D6DCDE", style: 0, visible: true }, horzLines: { color: "#D6DCDE", style: 0, visible: true } };
var de = { background: { type: "solid", color: "#FFFFFF" }, textColor: "#191919", fontSize: 12, fontFamily: L };
var fe = { autoScale: true, mode: 0, invertScale: false, alignLabels: true, borderVisible: true, borderColor: "#2B2B43", entireTextOnly: false, visible: false, ticksVisible: false, scaleMargins: { bottom: 0.1, top: 0.2 }, minimumWidth: 0 };
var ve = { rightOffset: 0, barSpacing: 6, minBarSpacing: 0.5, fixLeftEdge: false, fixRightEdge: false, lockVisibleTimeRangeOnResize: false, rightBarStaysOnScroll: false, borderVisible: true, borderColor: "#2B2B43", visible: true, timeVisible: false, secondsVisible: true, shiftVisibleRangeOnNewBar: true, ticksVisible: false, uniformDistribution: false, minimumHeight: 0 };
var pe = { color: "rgba(0, 0, 0, 0)", visible: false, fontSize: 48, fontFamily: L, fontStyle: "", text: "", horzAlign: "center", vertAlign: "center" };
function me() {
  return { width: 0, height: 0, autoSize: false, layout: de, crosshair: ue, grid: ce, overlayPriceScales: Object.assign({}, fe), leftPriceScale: Object.assign(Object.assign({}, fe), { visible: false }), rightPriceScale: Object.assign(Object.assign({}, fe), { visible: true }), timeScale: ve, watermark: pe, localization: { locale: ss ? navigator.language : "", dateFormat: "dd MMM 'yy" }, handleScroll: { mouseWheel: true, pressedMouseMove: true, horzTouchDrag: true, vertTouchDrag: true }, handleScale: { axisPressedMouseMove: { time: true, price: true }, axisDoubleClickReset: { time: true, price: true }, mouseWheel: true, pinch: true }, kineticScroll: { mouse: false, touch: true }, trackingMode: { exitMode: 1 } };
}
var be = class {
  constructor(t, i) {
    this.Hb = t, this.$b = i;
  }
  applyOptions(t) {
    this.Hb.qt().zc(this.$b, t);
  }
  options() {
    return this.Li().W();
  }
  width() {
    return ut(this.$b) ? this.Hb.ib(this.$b) : 0;
  }
  Li() {
    return b(this.Hb.qt().Ec(this.$b)).At;
  }
};
function we(t, i, n) {
  const s = Fs(t, ["time", "originalTime"]), e2 = Object.assign({ time: i }, s);
  return void 0 !== n && (e2.originalTime = n), e2;
}
var ge = { color: "#FF0000", price: 0, lineStyle: 2, lineWidth: 1, lineVisible: true, axisLabelVisible: true, title: "", axisLabelColor: "", axisLabelTextColor: "" };
var Me = class {
  constructor(t) {
    this.Bh = t;
  }
  applyOptions(t) {
    this.Bh.Nh(t);
  }
  options() {
    return this.Bh.W();
  }
  Ub() {
    return this.Bh;
  }
};
var xe = class {
  constructor(t, i, n, s, e2) {
    this.qb = new R(), this.Es = t, this.Yb = i, this.Xb = n, this.N_ = e2, this.Kb = s;
  }
  S() {
    this.qb.S();
  }
  priceFormatter() {
    return this.Es.ca();
  }
  priceToCoordinate(t) {
    const i = this.Es.Pt();
    return null === i ? null : this.Es.At().Ot(t, i.Vt);
  }
  coordinateToPrice(t) {
    const i = this.Es.Pt();
    return null === i ? null : this.Es.At().pn(t, i.Vt);
  }
  barsInLogicalRange(t) {
    if (null === t)
      return null;
    const i = new Tn(new kn(t.from, t.to)).iu(), n = this.Es.In();
    if (n.Fi())
      return null;
    const s = n.nl(i.Os(), 1), e2 = n.nl(i.di(), -1), r2 = b(n.Qh()), h2 = b(n.Bn());
    if (null !== s && null !== e2 && s.se > e2.se)
      return { barsBefore: t.from - r2, barsAfter: h2 - t.to };
    const l2 = { barsBefore: null === s || s.se === r2 ? t.from - r2 : s.se - r2, barsAfter: null === e2 || e2.se === h2 ? h2 - t.to : h2 - e2.se };
    return null !== s && null !== e2 && (l2.from = s.mb, l2.to = e2.mb), l2;
  }
  setData(t) {
    this.N_, this.Es.Xh(), this.Yb.Zb(this.Es, t), this.Gb("full");
  }
  update(t) {
    this.Es.Xh(), this.Yb.Jb(this.Es, t), this.Gb("update");
  }
  dataByIndex(t, i) {
    const n = this.Es.In().nl(t, i);
    if (null === n)
      return null;
    return oe(this.seriesType())(n);
  }
  data() {
    const t = oe(this.seriesType());
    return this.Es.In().ie().map((i) => t(i));
  }
  subscribeDataChanged(t) {
    this.qb.l(t);
  }
  unsubscribeDataChanged(t) {
    this.qb.v(t);
  }
  setMarkers(t) {
    this.N_;
    const i = t.map((t2) => we(t2, this.N_.convertHorzItemToInternal(t2.time), t2.time));
    this.Es.Zl(i);
  }
  markers() {
    return this.Es.Gl().map((t) => we(t, t.originalTime, void 0));
  }
  applyOptions(t) {
    this.Es.Nh(t);
  }
  options() {
    return I(this.Es.W());
  }
  priceScale() {
    return this.Xb.priceScale(this.Es.At().xa());
  }
  createPriceLine(t) {
    const i = D(I(ge), t), n = this.Es.Jl(i);
    return new Me(n);
  }
  removePriceLine(t) {
    this.Es.Ql(t.Ub());
  }
  seriesType() {
    return this.Es.Xh();
  }
  attachPrimitive(t) {
    this.Es.ba(t), t.attached && t.attached({ chart: this.Kb, series: this, requestUpdate: () => this.Es.qt().$l() });
  }
  detachPrimitive(t) {
    this.Es.wa(t), t.detached && t.detached();
  }
  Gb(t) {
    this.qb.M() && this.qb.m(t);
  }
};
var Se = class {
  constructor(t, i, n) {
    this.Qb = new R(), this.uu = new R(), this.om = new R(), this.Ui = t, this.wl = t.yt(), this.Hm = i, this.wl.Ku().l(this.tw.bind(this)), this.wl.Zu().l(this.iw.bind(this)), this.Hm.wm().l(this.nw.bind(this)), this.N_ = n;
  }
  S() {
    this.wl.Ku().p(this), this.wl.Zu().p(this), this.Hm.wm().p(this), this.Qb.S(), this.uu.S(), this.om.S();
  }
  scrollPosition() {
    return this.wl.Eu();
  }
  scrollToPosition(t, i) {
    i ? this.wl.qu(t, 1e3) : this.Ui.Jn(t);
  }
  scrollToRealTime() {
    this.wl.Uu();
  }
  getVisibleRange() {
    const t = this.wl.yu();
    return null === t ? null : { from: t.from.originalTime, to: t.to.originalTime };
  }
  setVisibleRange(t) {
    const i = { from: this.N_.convertHorzItemToInternal(t.from), to: this.N_.convertHorzItemToInternal(t.to) }, n = this.wl.Ru(i);
    this.Ui.hd(n);
  }
  getVisibleLogicalRange() {
    const t = this.wl.ku();
    return null === t ? null : { from: t.Os(), to: t.di() };
  }
  setVisibleLogicalRange(t) {
    p(t.from <= t.to, "The from index cannot be after the to index."), this.Ui.hd(t);
  }
  resetTimeScale() {
    this.Ui.Zn();
  }
  fitContent() {
    this.Ui.Qu();
  }
  logicalToCoordinate(t) {
    const i = this.Ui.yt();
    return i.Fi() ? null : i.Et(t);
  }
  coordinateToLogical(t) {
    return this.wl.Fi() ? null : this.wl.Vu(t);
  }
  timeToCoordinate(t) {
    const i = this.N_.convertHorzItemToInternal(t), n = this.wl.ya(i, false);
    return null === n ? null : this.wl.Et(n);
  }
  coordinateToTime(t) {
    const i = this.Ui.yt(), n = i.Vu(t), s = i.qi(n);
    return null === s ? null : s.originalTime;
  }
  width() {
    return this.Hm.Hp().width;
  }
  height() {
    return this.Hm.Hp().height;
  }
  subscribeVisibleTimeRangeChange(t) {
    this.Qb.l(t);
  }
  unsubscribeVisibleTimeRangeChange(t) {
    this.Qb.v(t);
  }
  subscribeVisibleLogicalRangeChange(t) {
    this.uu.l(t);
  }
  unsubscribeVisibleLogicalRangeChange(t) {
    this.uu.v(t);
  }
  subscribeSizeChange(t) {
    this.om.l(t);
  }
  unsubscribeSizeChange(t) {
    this.om.v(t);
  }
  applyOptions(t) {
    this.wl.Nh(t);
  }
  options() {
    return Object.assign(Object.assign({}, I(this.wl.W())), { barSpacing: this.wl.he() });
  }
  tw() {
    this.Qb.M() && this.Qb.m(this.getVisibleRange());
  }
  iw() {
    this.uu.M() && this.uu.m(this.getVisibleLogicalRange());
  }
  nw(t) {
    this.om.m(t.width, t.height);
  }
};
function ke(t) {
  if (void 0 === t || "custom" === t.type)
    return;
  const i = t;
  void 0 !== i.minMove && void 0 === i.precision && (i.precision = function(t2) {
    if (t2 >= 1)
      return 0;
    let i2 = 0;
    for (; i2 < 8; i2++) {
      const n = Math.round(t2);
      if (Math.abs(n - t2) < 1e-8)
        return i2;
      t2 *= 10;
    }
    return i2;
  }(i.minMove));
}
function ye(t) {
  return function(t2) {
    if (B(t2.handleScale)) {
      const i2 = t2.handleScale;
      t2.handleScale = { axisDoubleClickReset: { time: i2, price: i2 }, axisPressedMouseMove: { time: i2, price: i2 }, mouseWheel: i2, pinch: i2 };
    } else if (void 0 !== t2.handleScale) {
      const { axisPressedMouseMove: i2, axisDoubleClickReset: n } = t2.handleScale;
      B(i2) && (t2.handleScale.axisPressedMouseMove = { time: i2, price: i2 }), B(n) && (t2.handleScale.axisDoubleClickReset = { time: n, price: n });
    }
    const i = t2.handleScroll;
    B(i) && (t2.handleScroll = { horzTouchDrag: i, vertTouchDrag: i, mouseWheel: i, pressedMouseMove: i });
  }(t), t;
}
var Ce = class {
  constructor(t, i, n) {
    this.sw = /* @__PURE__ */ new Map(), this.ew = /* @__PURE__ */ new Map(), this.rw = new R(), this.hw = new R(), this.lw = new R(), this.aw = new te(i);
    const s = void 0 === n ? I(me()) : D(I(me()), ye(n));
    this.N_ = i, this.Hb = new Ls(t, s, i), this.Hb.Np().l((t2) => {
      this.rw.M() && this.rw.m(this.ow(t2()));
    }, this), this.Hb.Fp().l((t2) => {
      this.hw.M() && this.hw.m(this.ow(t2()));
    }, this), this.Hb.Wc().l((t2) => {
      this.lw.M() && this.lw.m(this.ow(t2()));
    }, this);
    const e2 = this.Hb.qt();
    this._w = new Se(e2, this.Hb.Km(), this.N_);
  }
  remove() {
    this.Hb.Np().p(this), this.Hb.Fp().p(this), this.Hb.Wc().p(this), this._w.S(), this.Hb.S(), this.sw.clear(), this.ew.clear(), this.rw.S(), this.hw.S(), this.lw.S(), this.aw.S();
  }
  resize(t, i, n) {
    this.autoSizeActive() || this.Hb.Um(t, i, n);
  }
  addCustomSeries(t, i) {
    const n = w(t), s = Object.assign(Object.assign({}, _), n.defaultOptions());
    return this.uw("Custom", s, i, n);
  }
  addAreaSeries(t) {
    return this.uw("Area", l, t);
  }
  addBaselineSeries(t) {
    return this.uw("Baseline", a, t);
  }
  addBarSeries(t) {
    return this.uw("Bar", r, t);
  }
  addCandlestickSeries(t = {}) {
    return function(t2) {
      void 0 !== t2.borderColor && (t2.borderUpColor = t2.borderColor, t2.borderDownColor = t2.borderColor), void 0 !== t2.wickColor && (t2.wickUpColor = t2.wickColor, t2.wickDownColor = t2.wickColor);
    }(t), this.uw("Candlestick", e, t);
  }
  addHistogramSeries(t) {
    return this.uw("Histogram", o2, t);
  }
  addLineSeries(t) {
    return this.uw("Line", h, t);
  }
  removeSeries(t) {
    const i = m(this.sw.get(t)), n = this.aw.rd(i);
    this.Hb.qt().rd(i), this.cw(n), this.sw.delete(t), this.ew.delete(i);
  }
  Zb(t, i) {
    this.cw(this.aw.Ob(t, i));
  }
  Jb(t, i) {
    this.cw(this.aw.zb(t, i));
  }
  subscribeClick(t) {
    this.rw.l(t);
  }
  unsubscribeClick(t) {
    this.rw.v(t);
  }
  subscribeCrosshairMove(t) {
    this.lw.l(t);
  }
  unsubscribeCrosshairMove(t) {
    this.lw.v(t);
  }
  subscribeDblClick(t) {
    this.hw.l(t);
  }
  unsubscribeDblClick(t) {
    this.hw.v(t);
  }
  priceScale(t) {
    return new be(this.Hb, t);
  }
  timeScale() {
    return this._w;
  }
  applyOptions(t) {
    this.Hb.Nh(ye(t));
  }
  options() {
    return this.Hb.W();
  }
  takeScreenshot() {
    return this.Hb.Qm();
  }
  autoSizeActive() {
    return this.Hb.eb();
  }
  chartElement() {
    return this.Hb.rb();
  }
  paneSize() {
    const t = this.Hb.lb();
    return { height: t.height, width: t.width };
  }
  uw(t, i, n = {}, s) {
    ke(n.priceFormat);
    const e2 = D(I(u), I(i), n), r2 = this.Hb.qt().sd(t, e2, s), h2 = new xe(r2, this, this, this, this.N_);
    return this.sw.set(h2, r2), this.ew.set(r2, h2), h2;
  }
  cw(t) {
    const i = this.Hb.qt();
    i.td(t.yt.Au, t.yt.Wb, t.yt.jb), t.Nb.forEach((t2, i2) => i2.it(t2.He, t2.Fb)), i.Iu();
  }
  dw(t) {
    return m(this.ew.get(t));
  }
  ow(t) {
    const i = /* @__PURE__ */ new Map();
    t.gb.forEach((t2, n2) => {
      const s = n2.Xh(), e2 = oe(s)(t2);
      if ("Custom" !== s)
        p(function(t3) {
          return void 0 !== t3.open || void 0 !== t3.value;
        }(e2));
      else {
        const t3 = n2.Ma();
        p(!t3 || false === t3(e2));
      }
      i.set(this.dw(n2), e2);
    });
    const n = void 0 === t.wb ? void 0 : this.dw(t.wb);
    return { time: t.mb, logical: t.se, point: t.bb, hoveredSeries: n, hoveredObjectId: t.Mb, seriesData: i, sourceEvent: t.xb };
  }
};
function Te(t, i, n) {
  let s;
  if (V(t)) {
    const i2 = document.getElementById(t);
    p(null !== i2, `Cannot find element in DOM with id=${t}`), s = i2;
  } else
    s = t;
  const e2 = new Ce(s, i, n);
  return i.setOptions(e2.options()), e2;
}
function Pe(t, i) {
  return Te(t, new ns(), ns.Cd(i));
}
var Re = Object.assign(Object.assign({}, u), _);

// node_modules/.pnpm/@nbit+chart-web@1.0.0-beta.109/node_modules/@nbit/chart-web/src/components/k-line/k-line-chart.tsx
var import_react5 = __toESM(require_react());
import "/Users/xiaoyu/Desktop/xiangmu/newbit-web/node_modules/.pnpm/@nbit+chart-web@1.0.0-beta.109/node_modules/@nbit/chart-web/src/components/k-line/index.css";

// node_modules/.pnpm/@nbit+chart-web@1.0.0-beta.109/node_modules/@nbit/chart-web/src/components/k-line/k-line-render/index.tsx
var import_react4 = __toESM(require_react());
var import_classnames = __toESM(require_classnames());

// node_modules/.pnpm/@nbit+chart-web@1.0.0-beta.109/node_modules/@nbit/chart-web/src/components/k-line/order-pop/index.tsx
var import_react = __toESM(require_react());
function OrderModal(props) {
  var _a, _b, _c, _d, _e2, _f;
  const { curMarkers, ordersKlineData, showOrderDetail, createChart, locale } = props;
  const orderPopRef = (0, import_react.useRef)(null);
  return import_react.default.createElement(
    "div",
    {
      ref: orderPopRef,
      style: {
        position: "absolute",
        top: curMarkers == null ? void 0 : curMarkers.y,
        left: curMarkers == null ? void 0 : curMarkers.x,
        zIndex: 4,
        background: createChart.bgColor,
        padding: "12px",
        boxShadow: "0px 4px 10px rgba(0, 0, 0, 0.1)",
        borderRadius: "4px",
        transform: "translate(-50%, -200%)"
      }
    },
    ((_a = curMarkers == null ? void 0 : curMarkers.buyData) == null ? void 0 : _a.length) ? import_react.default.createElement("div", { className: "text-xs", style: { color: createChart.textColor, whiteSpace: "nowrap" } }, import_react.default.createElement("span", null, `${timeLocaleLanguageMap[locale][`\u6210\u4EA4`]} ${(_b = curMarkers == null ? void 0 : curMarkers.buyData) == null ? void 0 : _b.length} ${timeLocaleLanguageMap[locale][`\u7B14`]}`), import_react.default.createElement("span", { className: "ml-2" }, `${timeLocaleLanguageMap[locale][`\u5747\u4EF7`]} ${curMarkers == null ? void 0 : curMarkers.buyDetail.avg}`), import_react.default.createElement(
      "span",
      {
        style: {
          color: createChart.upColor
        },
        className: "ml-2"
      },
      timeLocaleLanguageMap[locale][`\u4E70\u5165`]
    ), import_react.default.createElement("span", { className: "ml-2" }, curMarkers == null ? void 0 : curMarkers.buyDetail.count, import_react.default.createElement("span", { className: "ml-1" }, (_c = ordersKlineData == null ? void 0 : ordersKlineData[0]) == null ? void 0 : _c.sellCoinShortName)), import_react.default.createElement(
      "span",
      {
        style: {
          color: createChart.brandColor
        },
        className: "ml-2 cursor-pointer",
        onClick: (e2) => {
          showOrderDetail("buy", e2);
        }
      },
      `${timeLocaleLanguageMap[locale][`\u67E5\u770B\u660E\u7EC6`]} >`
    )) : null,
    ((_d = curMarkers == null ? void 0 : curMarkers.sellData) == null ? void 0 : _d.length) ? import_react.default.createElement("div", { className: "text-xs mt-2", style: { color: createChart.textColor, whiteSpace: "nowrap" } }, import_react.default.createElement("span", null, `${timeLocaleLanguageMap[locale][`\u6210\u4EA4`]} ${(_e2 = curMarkers == null ? void 0 : curMarkers.sellData) == null ? void 0 : _e2.length} ${timeLocaleLanguageMap[locale][`\u7B14`]}`), import_react.default.createElement("span", { className: "ml-2" }, `${timeLocaleLanguageMap[locale][`\u5747\u4EF7`]} ${curMarkers == null ? void 0 : curMarkers.sellDetail.avg}`), import_react.default.createElement(
      "span",
      {
        style: {
          color: createChart.downColor
        },
        className: "ml-2"
      },
      timeLocaleLanguageMap[locale][`\u5356\u51FA`]
    ), import_react.default.createElement("span", { className: "ml-2" }, curMarkers == null ? void 0 : curMarkers.sellDetail.count, import_react.default.createElement("span", { className: "ml-1" }, (_f = ordersKlineData == null ? void 0 : ordersKlineData[0]) == null ? void 0 : _f.sellCoinShortName)), import_react.default.createElement(
      "span",
      {
        style: {
          color: createChart.brandColor
        },
        className: "ml-2 cursor-pointer",
        onClick: (e2) => {
          showOrderDetail("sell", e2);
        }
      },
      `${timeLocaleLanguageMap[locale][`\u67E5\u770B\u660E\u7EC6`]} >`
    )) : null,
    import_react.default.createElement(
      "div",
      {
        style: {
          position: "absolute",
          width: "8px",
          height: "8px",
          background: createChart.bgColor,
          left: "calc(50% - 4px)",
          bottom: "-4px",
          transform: "rotate(45deg)"
        }
      }
    )
  );
}
var order_pop_default = OrderModal;

// node_modules/.pnpm/@nbit+chart-web@1.0.0-beta.109/node_modules/@nbit/chart-web/src/components/k-line/order-modal/index.tsx
var import_react2 = __toESM(require_react());
function OrderPop(props) {
  const { modalVisible, setModalVisible, tableData, locale } = props;
  const columns = [
    {
      title: timeLocaleLanguageMap[locale][`\u65F6\u95F4`],
      dataIndex: "time",
      key: "time"
    },
    {
      title: timeLocaleLanguageMap[locale][`\u6570\u91CF`],
      dataIndex: "count",
      key: "count"
    },
    {
      title: timeLocaleLanguageMap[locale][`\u4EF7\u683C`],
      dataIndex: "price",
      key: "price"
    },
    {
      title: timeLocaleLanguageMap[locale][`\u624B\u7EED\u8D39`],
      dataIndex: "fees",
      key: "fees"
    }
  ];
  return import_react2.default.createElement(
    Modal_default,
    {
      title: timeLocaleLanguageMap[locale][`\u8BA2\u5355\u8BE6\u60C5`],
      visible: modalVisible,
      footer: null,
      className: "chart-order-pop",
      onOk: () => setModalVisible(false),
      onCancel: () => setModalVisible(false)
    },
    import_react2.default.createElement(
      Table_default,
      {
        rowKey: (record) => record.id,
        className: "chart-order-table",
        border: false,
        pagination: false,
        columns,
        data: tableData
      }
    )
  );
}
var order_modal_default = OrderPop;

// node_modules/.pnpm/@nbit+chart-web@1.0.0-beta.109/node_modules/@nbit/chart-web/src/components/k-line/k-line-render/index.tsx
import "/Users/xiaoyu/Desktop/xiangmu/newbit-web/node_modules/.pnpm/@nbit+chart-web@1.0.0-beta.109/node_modules/@nbit/chart-web/src/components/k-line/index.css";

// node_modules/.pnpm/@nbit+chart-web@1.0.0-beta.109/node_modules/@nbit/chart-web/src/components/k-line/k-line-render/set-chart.tsx
var import_react3 = __toESM(require_react());
import "/Users/xiaoyu/Desktop/xiangmu/newbit-web/node_modules/.pnpm/@nbit+chart-web@1.0.0-beta.109/node_modules/@nbit/chart-web/src/components/k-line/index.css";
function SetChart(props) {
  const {
    mainIndicator,
    subIndicator,
    chartSettingIcon,
    allChartRef,
    updateMainIndicator,
    updateSubIndicator,
    modalRef,
    type
  } = props;
  const hideMainChart = (value) => {
    var _a, _b, _c, _d, _e2, _f, _g, _h, _i2, _j, _k, _l, _m, _n2, _o, _p;
    switch (value) {
      case "ma":
        (_a = allChartRef.smaLineRef) == null ? void 0 : _a.forEach((item) => {
          item.applyOptions({
            visible: mainIndicator.ma.hide
          });
        });
        updateMainIndicator({
          ...mainIndicator,
          ma: {
            ...mainIndicator.ma,
            hide: !mainIndicator.ma.hide
          }
        });
        break;
      case "boll":
        (_b = allChartRef.bollRef) == null ? void 0 : _b.mid.applyOptions({
          visible: mainIndicator.boll.hide
        });
        (_c = allChartRef.bollRef) == null ? void 0 : _c.upper.applyOptions({
          visible: mainIndicator.boll.hide
        });
        (_d = allChartRef.bollRef) == null ? void 0 : _d.lower.applyOptions({
          visible: mainIndicator.boll.hide
        });
        updateMainIndicator({
          ...mainIndicator,
          boll: {
            ...mainIndicator.boll,
            hide: !mainIndicator.boll.hide
          }
        });
        break;
      case "vol":
        (_f = allChartRef.volumeSeriesRef) == null ? void 0 : _f.applyOptions({
          visible: (_e2 = subIndicator.vol) == null ? void 0 : _e2.hide
        });
        updateSubIndicator({
          ...subIndicator,
          vol: {
            ...subIndicator.vol,
            hide: !((_g = subIndicator.vol) == null ? void 0 : _g.hide)
          }
        });
        break;
      case "macd":
        (_h = allChartRef.difRef) == null ? void 0 : _h.applyOptions({
          visible: subIndicator.macd.hide
        });
        (_i2 = allChartRef.deaRef) == null ? void 0 : _i2.applyOptions({
          visible: subIndicator.macd.hide
        });
        (_j = allChartRef.macdVolumeSeriesRef) == null ? void 0 : _j.applyOptions({
          visible: subIndicator.macd.hide
        });
        updateSubIndicator({
          ...subIndicator,
          macd: {
            ...subIndicator.macd,
            hide: !subIndicator.macd.hide
          }
        });
        break;
      case "kdj":
        (_k = allChartRef.kdjRef) == null ? void 0 : _k.k.applyOptions({
          visible: subIndicator.kdj.hide
        });
        (_l = allChartRef.kdjRef) == null ? void 0 : _l.d.applyOptions({
          visible: subIndicator.kdj.hide
        });
        (_m = allChartRef.kdjRef) == null ? void 0 : _m.j.applyOptions({
          visible: subIndicator.kdj.hide
        });
        updateSubIndicator({
          ...subIndicator,
          kdj: {
            ...subIndicator.kdj,
            hide: !subIndicator.kdj.hide
          }
        });
        break;
      case "rsi":
        (_n2 = allChartRef.rsiRef) == null ? void 0 : _n2.forEach((item) => {
          item.applyOptions({
            visible: subIndicator.rsi.hide
          });
        });
        updateSubIndicator({
          ...subIndicator,
          rsi: {
            ...subIndicator.rsi,
            hide: !subIndicator.rsi.hide
          }
        });
        break;
      case "wr":
        (_o = allChartRef.wrRef) == null ? void 0 : _o.forEach((item) => {
          item.applyOptions({
            visible: subIndicator.wr.hide
          });
        });
        updateSubIndicator({
          ...subIndicator,
          wr: {
            ...subIndicator.wr,
            hide: !subIndicator.wr.hide
          }
        });
        break;
      default:
        (_p = allChartRef.smaLineRef) == null ? void 0 : _p.forEach((item) => {
          item.applyOptions({
            visible: !mainIndicator.ma.hide
          });
        });
        updateMainIndicator({
          ...mainIndicator,
          ma: {
            ...mainIndicator.ma,
            hide: !mainIndicator.ma.hide
          }
        });
        break;
    }
  };
  const openSetChartModal = () => {
    modalRef == null ? void 0 : modalRef.openChartSettingModal();
  };
  const deleteMainChart = (value) => {
    var _a;
    switch (value) {
      case "ma":
        updateMainIndicator({
          ...mainIndicator,
          ma: {
            ...mainIndicator.ma,
            select: false
          }
        });
        break;
      case "boll":
        updateMainIndicator({
          ...mainIndicator,
          boll: {
            ...mainIndicator.boll,
            select: false
          }
        });
        break;
      case "vol":
        updateSubIndicator({
          ...subIndicator,
          vol: {
            ...subIndicator.vol,
            select: false
          }
        });
        break;
      case "macd":
        updateSubIndicator({
          ...subIndicator,
          macd: {
            ...subIndicator.macd,
            select: false
          }
        });
        break;
      case "kdj":
        updateSubIndicator({
          ...subIndicator,
          kdj: {
            ...subIndicator.kdj,
            select: false
          }
        });
        break;
      case "rsi":
        updateSubIndicator({
          ...subIndicator,
          rsi: {
            ...subIndicator.rsi,
            select: false
          }
        });
        break;
      case "wr":
        updateSubIndicator({
          ...subIndicator,
          wr: {
            ...subIndicator.wr,
            select: false
          }
        });
        break;
      default:
        (_a = allChartRef.smaLineRef) == null ? void 0 : _a.forEach((item) => {
          item.applyOptions({
            visible: !mainIndicator.ma.hide
          });
        });
        updateMainIndicator({
          ...mainIndicator,
          ma: {
            ...mainIndicator.ma,
            hide: !mainIndicator.ma.hide
          }
        });
        break;
    }
  };
  return import_react3.default.createElement(import_react3.default.Fragment, null, import_react3.default.createElement("div", { key: "hidden", onClick: () => hideMainChart(type), className: "chart-hidden chart-set-icon-wrap common-ml-5" }, import_react3.default.createElement("span", { className: "not-hidden-hover" }, chartSettingIcon.hidden), import_react3.default.createElement("span", { className: "have-hidden-hover" }, chartSettingIcon.hiddenHover)), import_react3.default.createElement("div", { key: "setting", onClick: openSetChartModal, className: "chart-set chart-set-icon-wrap common-ml-5" }, import_react3.default.createElement("span", { className: "not-set-hover" }, chartSettingIcon.setting), import_react3.default.createElement("span", { className: "have-set-hover" }, chartSettingIcon.settingHover)), import_react3.default.createElement(
    "div",
    {
      key: "delete",
      onClick: () => deleteMainChart(type),
      className: "chart-delete chart-set-icon-wrap common-ml-5"
    },
    import_react3.default.createElement("span", { className: "not-delete-hover" }, chartSettingIcon.delete),
    import_react3.default.createElement("span", { className: "have-delete-hover" }, chartSettingIcon.deleteHover)
  ));
}
var set_chart_default = SetChart;

// node_modules/.pnpm/@nbit+chart-web@1.0.0-beta.109/node_modules/@nbit/chart-web/src/components/k-line/helper/index.ts
var tradeDirection = {
  call: "call",
  put: "put",
  overCall: "over_call",
  overPut: "over_put"
};
var tradeStatus = {
  processing: "processing",
  revoke: "revoke",
  complete: "complete",
  fail: "fail"
};
var subscribeClickChange = (param, markersRef, setPopVisible, props, priceOffset, setCurMarkers) => {
  var _a;
  if (!param.point || !param.hoveredMarkerId || !((_a = markersRef.current) == null ? void 0 : _a.length)) {
    setPopVisible(false);
    return;
  }
  const findTime = markersRef.current.filter((item) => {
    return Number(item.id) === Number(param.hoveredMarkerId);
  });
  const buyData = [];
  const sellData = [];
  markersRef.current.forEach((item) => {
    var _a2;
    if (item.time === ((_a2 = findTime == null ? void 0 : findTime[0]) == null ? void 0 : _a2.time)) {
      if (item.color === props.createChart.upColor) {
        buyData.push(item);
      } else {
        sellData.push(item);
      }
    }
  });
  const _curMarkers = {
    x: param.point.x,
    y: param.point.y,
    buyData,
    sellData,
    buyDetail: {
      total: buyData == null ? void 0 : buyData.length,
      avg: Number(
        (((buyData == null ? void 0 : buyData.reduce((init, item) => {
          return init + item.price;
        }, 0)) || 0) / ((buyData == null ? void 0 : buyData.length) || 1)).toFixed(priceOffset)
      ),
      count: buyData == null ? void 0 : buyData.reduce((init, item) => {
        return init + item.count;
      }, 0)
    },
    sellDetail: {
      total: sellData == null ? void 0 : sellData.length,
      avg: Number(
        (((sellData == null ? void 0 : sellData.reduce((init, item) => {
          return init + item.price;
        }, 0)) || 0) / ((sellData == null ? void 0 : sellData.length) || 1)).toFixed(priceOffset)
      ),
      count: sellData == null ? void 0 : sellData.reduce((init, item) => {
        return init + item.count;
      }, 0)
    }
  };
  setCurMarkers(_curMarkers);
  if ((buyData == null ? void 0 : buyData.length) || (sellData == null ? void 0 : sellData.length)) {
    setPopVisible(true);
  }
};
var calChartIndicatorPositon = (subIndicator) => {
  var _a, _b, _c, _d, _e2, _f;
  let selectNum = 0;
  let chartScaleMargins = {
    top: 0.12,
    bottom: 0.01
  };
  let volScaleMargins = {
    top: 0,
    bottom: 0
  };
  let macdScaleMargins = {
    top: 0,
    bottom: 0
  };
  let kdjScaleMargins = {
    top: 0,
    bottom: 0
  };
  let rsiScaleMargins = {
    top: 0,
    bottom: 0
  };
  let wrScaleMargins = {
    top: 0,
    bottom: 0
  };
  for (let i in subIndicator) {
    if ((_a = subIndicator[i]) == null ? void 0 : _a.select) {
      selectNum += 1;
    }
  }
  if (selectNum) {
    chartScaleMargins = {
      top: 0.12,
      bottom: 0.01 + selectNum * 0.16 + 0.02
    };
    if ((_b = subIndicator.vol) == null ? void 0 : _b.select) {
      volScaleMargins = {
        top: 1 - (chartScaleMargins.bottom - 0.02) + 0.06,
        bottom: chartScaleMargins.bottom - 0.02 - 0.16
      };
    } else {
      volScaleMargins = chartScaleMargins;
    }
    if ((_c = subIndicator.macd) == null ? void 0 : _c.select) {
      macdScaleMargins = {
        top: 1 - volScaleMargins.bottom + 0.06,
        bottom: volScaleMargins.bottom - 0.16
      };
    } else {
      macdScaleMargins = volScaleMargins;
    }
    if ((_d = subIndicator.kdj) == null ? void 0 : _d.select) {
      kdjScaleMargins = {
        top: 1 - macdScaleMargins.bottom + 0.06,
        bottom: macdScaleMargins.bottom - 0.16
      };
    } else {
      kdjScaleMargins = macdScaleMargins;
    }
    if ((_e2 = subIndicator.rsi) == null ? void 0 : _e2.select) {
      rsiScaleMargins = {
        top: 1 - kdjScaleMargins.bottom + 0.06,
        bottom: kdjScaleMargins.bottom - 0.16
      };
    } else {
      rsiScaleMargins = kdjScaleMargins;
    }
    if ((_f = subIndicator.wr) == null ? void 0 : _f.select) {
      wrScaleMargins = {
        top: 1 - rsiScaleMargins.bottom + 0.06,
        bottom: rsiScaleMargins.bottom - 0.16
      };
    } else {
      wrScaleMargins = rsiScaleMargins;
    }
  }
  return {
    chartScaleMargins,
    volScaleMargins,
    macdScaleMargins,
    kdjScaleMargins,
    rsiScaleMargins,
    wrScaleMargins
  };
};
var calHeightAndLowPoint = (visibleTimeRange, curTimeRef, propsDataRef, timeLineRef, candlestickSeriesRef, chartRef, setCurMaxAndMinPoint, createChart, priceOffset) => {
  var _a, _b, _c, _d, _e2, _f, _g, _h, _i2, _j, _k, _l;
  if (!visibleTimeRange.from || !visibleTimeRange.to) {
    return;
  }
  const { from, to } = visibleTimeRange;
  const maxAndMinPoint = {
    min: {
      time: 0,
      value: 0,
      x: 0,
      y: 0
    },
    max: {
      time: 0,
      value: 0,
      x: 0,
      y: 0
    }
  };
  const curRef = curTimeRef.current.unit === "time" || curTimeRef.current.unit === "s" ? timeLineRef.current : candlestickSeriesRef.current;
  if (curTimeRef.current.unit === "time" || curTimeRef.current.unit === "s") {
    (_a = propsDataRef.current) == null ? void 0 : _a.forEach((item) => {
      if (from === item.time) {
        maxAndMinPoint.max.value = item.close;
        maxAndMinPoint.max.time = item.time;
        maxAndMinPoint.min.value = item.close;
        maxAndMinPoint.min.time = item.time;
      } else if (from < item.time && item.time <= to) {
        if (item.close > maxAndMinPoint.max.value) {
          maxAndMinPoint.max.value = item.close;
          maxAndMinPoint.max.time = item.time;
        }
        if (item.close < maxAndMinPoint.min.value) {
          maxAndMinPoint.min.value = item.close;
          maxAndMinPoint.min.time = item.time;
        }
      }
    });
  } else {
    (_b = propsDataRef.current) == null ? void 0 : _b.forEach((item) => {
      if (from === item.time) {
        maxAndMinPoint.max.value = item.high;
        maxAndMinPoint.max.time = item.time;
        maxAndMinPoint.min.value = item.low;
        maxAndMinPoint.min.time = item.time;
      } else if (from < item.time && item.time <= to) {
        if (item.high > maxAndMinPoint.max.value) {
          maxAndMinPoint.max.value = item.high;
          maxAndMinPoint.max.time = item.time;
        }
        if (item.low < maxAndMinPoint.min.value) {
          maxAndMinPoint.min.value = item.low;
          maxAndMinPoint.min.time = item.time;
        }
      }
    });
  }
  maxAndMinPoint.max.y = curRef == null ? void 0 : curRef.priceToCoordinate(maxAndMinPoint.max.value);
  maxAndMinPoint.min.y = curRef == null ? void 0 : curRef.priceToCoordinate(maxAndMinPoint.min.value);
  maxAndMinPoint.max.x = (_c = chartRef.current) == null ? void 0 : _c.timeScale().timeToCoordinate(maxAndMinPoint.max.time);
  maxAndMinPoint.min.x = (_d = chartRef.current) == null ? void 0 : _d.timeScale().timeToCoordinate(maxAndMinPoint.min.time);
  maxAndMinPoint.min.value = Number(maxAndMinPoint.min.value).toFixed(priceOffset);
  maxAndMinPoint.max.value = Number(maxAndMinPoint.max.value).toFixed(priceOffset);
  const isMac = ((_f = (_e2 = navigator == null ? void 0 : navigator.userAgent) == null ? void 0 : _e2.toLowerCase()) == null ? void 0 : _f.indexOf("mac")) !== -1;
  const calcMin = isMac ? ((((_g = maxAndMinPoint.min.value) == null ? void 0 : _g.toString().length) || 0) + 2) * 2 : ((((_h = maxAndMinPoint.min.value) == null ? void 0 : _h.toString().length) || 0) + 2) * 2 - 2;
  const calcMax = isMac ? ((((_i2 = maxAndMinPoint.max.value) == null ? void 0 : _i2.toString().length) || 0) + 2) * 2 : ((((_j = maxAndMinPoint.max.value) == null ? void 0 : _j.toString().length) || 0) + 2) * 2 - 2;
  let minBlank = "";
  let maxBlank = "";
  for (let i = 0; i < calcMin; i += 1) {
    minBlank += " ";
  }
  for (let i = 0; i < calcMax; i += 1) {
    maxBlank += " ";
  }
  let markers = [
    {
      time: maxAndMinPoint.min.time,
      position: "belowBar",
      color: createChart.textColor01,
      shape: "arrowUp",
      text: maxAndMinPoint.min.x < 80 ? `${minBlank}\u4E00 ${maxAndMinPoint.min.value}` : `${maxAndMinPoint.min.value} \u4E00${minBlank}`,
      id: 1,
      size: 0
    }
  ];
  if (maxAndMinPoint.max.value !== maxAndMinPoint.min.value) {
    markers = [
      {
        time: maxAndMinPoint.min.time,
        position: "belowBar",
        color: createChart.textColor01,
        shape: "arrowUp",
        text: maxAndMinPoint.min.x < 80 ? `${minBlank}\u4E00 ${maxAndMinPoint.min.value}` : `${maxAndMinPoint.min.value} \u4E00${minBlank}`,
        id: 1,
        size: 0
      },
      {
        time: maxAndMinPoint.max.time,
        position: "aboveBar",
        color: createChart.textColor01,
        shape: "arrowUp",
        text: maxAndMinPoint.max.x < 80 ? `${maxBlank}\u4E00 ${maxAndMinPoint.max.value}` : `${maxAndMinPoint.max.value} \u4E00${maxBlank}`,
        id: 2,
        size: 0
      }
    ];
  }
  const oldData = ((_k = curRef == null ? void 0 : curRef.markers()) == null ? void 0 : _k.filter((item) => {
    var _a2, _b2;
    return ((_a2 = item.id) == null ? void 0 : _a2.toString()) !== "1" && ((_b2 = item.id) == null ? void 0 : _b2.toString()) !== "2";
  })) || [];
  curRef == null ? void 0 : curRef.setMarkers(
    (_l = oldData.concat(markers)) == null ? void 0 : _l.sort((a2, b2) => {
      return a2.time - b2.time;
    })
  );
};
var calQuickBuyAndSellPoint = (visibleTimeRange, curTimeRef, propsDataRef, timeLineRef, candlestickSeriesRef, chartRef, setCurBuyAndSellPoint, createChart, priceOffset) => {
  var _a, _b, _c, _d;
  if (!visibleTimeRange.from || !visibleTimeRange.to) {
    return;
  }
  const { from, to } = visibleTimeRange;
  const maxAndMinPoint = {
    min: {
      time: 0,
      value: 0,
      x: 0,
      y: 0
    },
    max: {
      time: 0,
      value: 0,
      x: 0,
      y: 0
    }
  };
  const curRef = curTimeRef.current.unit === "time" || curTimeRef.current.unit === "s" ? timeLineRef.current : candlestickSeriesRef.current;
  if (curTimeRef.current.unit === "time" || curTimeRef.current.unit === "s") {
    (_a = propsDataRef.current) == null ? void 0 : _a.forEach((item) => {
      maxAndMinPoint.max.value = item.close;
      maxAndMinPoint.max.time = item.time;
      maxAndMinPoint.min.value = item.close;
      maxAndMinPoint.min.time = item.time;
    });
  } else {
    (_b = propsDataRef.current) == null ? void 0 : _b.forEach((item) => {
      maxAndMinPoint.max.value = item.high;
      maxAndMinPoint.max.time = item.time;
      maxAndMinPoint.min.value = item.low;
      maxAndMinPoint.min.time = item.time;
    });
  }
  if (maxAndMinPoint.max.time > to) {
    setCurBuyAndSellPoint({
      min: {
        time: 0,
        value: 0,
        x: 0,
        y: 0
      },
      max: {
        time: 0,
        value: 0,
        x: 0,
        y: 0
      }
    });
    return;
  }
  maxAndMinPoint.max.y = curRef == null ? void 0 : curRef.priceToCoordinate(maxAndMinPoint.max.value);
  maxAndMinPoint.min.y = curRef == null ? void 0 : curRef.priceToCoordinate(maxAndMinPoint.min.value);
  maxAndMinPoint.max.x = (_c = chartRef.current) == null ? void 0 : _c.timeScale().timeToCoordinate(maxAndMinPoint.max.time);
  maxAndMinPoint.min.x = (_d = chartRef.current) == null ? void 0 : _d.timeScale().timeToCoordinate(maxAndMinPoint.min.time);
  maxAndMinPoint.min.value = Number(maxAndMinPoint.min.value).toFixed(priceOffset);
  maxAndMinPoint.max.value = Number(maxAndMinPoint.max.value).toFixed(priceOffset);
  setCurBuyAndSellPoint(maxAndMinPoint);
};
var getMarkers = (ordersKlineData, propsDataRef, createChart) => {
  var _a, _b, _c, _d, _e2, _f, _g, _h, _i2, _j, _k, _l, _m, _n2, _o, _p, _q, _r, _s2, _t2, _u, _v, _w, _x, _y, _z, _A, _B, _C, _D, _E, _F, _G, _H, _I;
  let markers = [];
  for (let i = 0; i < (ordersKlineData == null ? void 0 : ordersKlineData.length); i += 1) {
    for (let j2 = 0; j2 < ((_b = ((_a = ordersKlineData[i]) == null ? void 0 : _a.transactionLogs) || []) == null ? void 0 : _b.length); j2 += 1) {
      for (let k2 = 0; k2 < ((_c = propsDataRef.current) == null ? void 0 : _c.length); k2 += 1) {
        if (ordersKlineData[i].side === 1) {
          if (Number((_f = (_e2 = (_d = ordersKlineData[i]) == null ? void 0 : _d.transactionLogs) == null ? void 0 : _e2[j2]) == null ? void 0 : _f.createdByTime) === propsDataRef.current[k2].time || Number((_h = (_g = ordersKlineData[i]) == null ? void 0 : _g.transactionLogs) == null ? void 0 : _h[j2].createdByTime) > propsDataRef.current[k2].time && Number((_j = (_i2 = ordersKlineData[i]) == null ? void 0 : _i2.transactionLogs) == null ? void 0 : _j[j2].createdByTime) < ((_k = propsDataRef.current[k2 + 1]) == null ? void 0 : _k.time)) {
            markers.push({
              time: (_l = propsDataRef.current[k2]) == null ? void 0 : _l.time,
              position: "belowBar",
              color: createChart.upColor,
              shape: "arrowUp",
              text: "B",
              id: k2,
              price: (_n2 = (_m = ordersKlineData[i]) == null ? void 0 : _m.transactionLogs) == null ? void 0 : _n2[j2].price,
              count: (_p = (_o = ordersKlineData[i]) == null ? void 0 : _o.transactionLogs) == null ? void 0 : _p[j2].count,
              fees: (_r = (_q = ordersKlineData[i]) == null ? void 0 : _q.transactionLogs) == null ? void 0 : _r[j2].fees
            });
            break;
          }
        } else {
          if (Number((_u = (_t2 = (_s2 = ordersKlineData[i]) == null ? void 0 : _s2.transactionLogs) == null ? void 0 : _t2[j2]) == null ? void 0 : _u.createdByTime) === ((_v = propsDataRef.current[k2]) == null ? void 0 : _v.time) || Number((_x = (_w = ordersKlineData[i]) == null ? void 0 : _w.transactionLogs) == null ? void 0 : _x[j2].createdByTime) > ((_y = propsDataRef.current[k2]) == null ? void 0 : _y.time) && Number((_A = (_z = ordersKlineData[i]) == null ? void 0 : _z.transactionLogs) == null ? void 0 : _A[j2].createdByTime) < ((_B = propsDataRef.current[k2 + 1]) == null ? void 0 : _B.time)) {
            markers.push({
              time: (_C = propsDataRef.current[k2]) == null ? void 0 : _C.time,
              position: "aboveBar",
              color: createChart.downColor,
              shape: "arrowDown",
              text: "S",
              id: k2,
              price: (_E = (_D = ordersKlineData[i]) == null ? void 0 : _D.transactionLogs) == null ? void 0 : _E[j2].price,
              count: (_G = (_F = ordersKlineData[i]) == null ? void 0 : _F.transactionLogs) == null ? void 0 : _G[j2].count,
              fees: (_I = (_H = ordersKlineData[i]) == null ? void 0 : _H.transactionLogs) == null ? void 0 : _I[j2].fees
            });
            break;
          }
        }
      }
    }
  }
  let temp = {};
  markers == null ? void 0 : markers.forEach((item) => {
    if (!temp[item.time]) {
      temp[item.time] = 0;
    } else {
      temp[item.time] += 1;
    }
  });
  markers = markers == null ? void 0 : markers.map((item) => {
    if (temp[item.time]) {
      return {
        ...item,
        color: createChart.brandColor,
        shape: "circle",
        text: "T"
      };
    }
    return item;
  });
  return markers;
};
var getBuyMarkers = (ordersData, propsDataRef, createChart) => {
  var _a;
  let markers = [];
  const tempObj = {};
  ordersData == null ? void 0 : ordersData.forEach((item) => {
    if (!tempObj[`${item.ts}${item.sideInd}`]) {
      tempObj[`${item.ts}${item.sideInd}`] = {
        ...item
      };
    } else {
      tempObj[`${item.ts}${item.sideInd}`] = {
        ...tempObj[`${item.ts}${item.sideInd}`],
        amount: Number(item.amount) + Number(tempObj[`${item.ts}${item.sideInd}`].amount)
      };
    }
  });
  (_a = Object.keys(tempObj)) == null ? void 0 : _a.forEach((item) => {
    if (tempObj[item].sideInd === tradeDirection.call) {
      markers.push({
        time: tempObj[item].ts,
        position: "aboveBar",
        statusCd: tempObj[item].statusCd,
        realizedProfit: Number(tempObj[item].realizedProfit),
        color: tempObj[item].statusCd === tradeStatus.processing ? "#FFFFFF" : Number(tempObj[item].realizedProfit) > 0 ? createChart.upColor : createChart.textColor02,
        bgColor: tempObj[item].statusCd === tradeStatus.processing ? createChart.upColor : Number(tempObj[item].realizedProfit) > 0 ? createChart.upSpecialColor02 : createChart.cardBgColor02,
        shape: "arrowNormalUp",
        text: "",
        id: `${tempObj[item].ts}${tempObj[item].sideInd}`,
        sideInd: tempObj[item].sideInd,
        size: 1,
        price: tempObj[item].amount,
        count: tempObj[item].currency,
        fees: 0
      });
    } else if (tempObj[item].sideInd === tradeDirection.put) {
      markers.push({
        time: tempObj[item].ts,
        position: "belowBar",
        statusCd: tempObj[item].statusCd,
        realizedProfit: Number(tempObj[item].realizedProfit),
        color: tempObj[item].statusCd === tradeStatus.processing ? "#FFFFFF" : Number(tempObj[item].realizedProfit) > 0 ? createChart.downColor : createChart.textColor02,
        bgColor: tempObj[item].statusCd === tradeStatus.processing ? createChart.downColor : Number(tempObj[item].realizedProfit) > 0 ? createChart.downSpecialColor02 : createChart.cardBgColor02,
        shape: "arrowNormalDown",
        text: "",
        id: `${tempObj[item].ts}${tempObj[item].sideInd}`,
        sideInd: tempObj[item].sideInd,
        size: 1,
        price: tempObj[item].amount,
        count: tempObj[item].currency,
        fees: 0
      });
    } else if (tempObj[item].sideInd === tradeDirection.overCall) {
      markers.push({
        time: tempObj[item].ts,
        position: "aboveBar",
        statusCd: tempObj[item].statusCd,
        realizedProfit: Number(tempObj[item].realizedProfit),
        color: tempObj[item].statusCd === tradeStatus.processing ? "#FFFFFF" : Number(tempObj[item].realizedProfit) > 0 ? createChart.upColor : createChart.textColor02,
        bgColor: tempObj[item].statusCd === tradeStatus.processing ? createChart.upColor : Number(tempObj[item].realizedProfit) > 0 ? createChart.upSpecialColor02 : createChart.cardBgColor02,
        shape: "arrowOptionUp",
        text: "",
        id: `${tempObj[item].ts}${tempObj[item].sideInd}`,
        sideInd: tempObj[item].sideInd,
        size: 1,
        price: tempObj[item].amount,
        count: tempObj[item].currency,
        fees: 0
      });
    } else if (tempObj[item].sideInd === tradeDirection.overPut) {
      markers.push({
        time: tempObj[item].ts,
        position: "belowBar",
        statusCd: tempObj[item].statusCd,
        realizedProfit: Number(tempObj[item].realizedProfit),
        color: tempObj[item].statusCd === tradeStatus.processing ? "#FFFFFF" : Number(tempObj[item].realizedProfit) > 0 ? createChart.downColor : createChart.textColor02,
        bgColor: tempObj[item].statusCd === tradeStatus.processing ? createChart.downColor : Number(tempObj[item].realizedProfit) > 0 ? createChart.downSpecialColor02 : createChart.cardBgColor02,
        shape: "arrowOptionDown",
        text: "",
        id: `${tempObj[item].ts}${tempObj[item].sideInd}`,
        sideInd: tempObj[item].sideInd,
        size: 1,
        price: tempObj[item].amount,
        count: tempObj[item].currency,
        fees: 0
      });
    }
  });
  return markers;
};

// node_modules/.pnpm/@nbit+chart-web@1.0.0-beta.109/node_modules/@nbit/chart-web/src/components/k-line/k-line-render/index.tsx
function KLineRender(props) {
  var _a, _b, _c, _d, _e2, _f, _g, _h;
  const {
    mainIndicator,
    subIndicator,
    ordersKlineData,
    expand,
    expandClick,
    mainK,
    maIndicator,
    bollK,
    macdScaleMargins,
    subK,
    kdjScaleMargins,
    kdjK,
    rsiScaleMargins,
    rsiK,
    wrScaleMargins,
    containerRef,
    curMaxAndMinPoint,
    curBuyAndSellPoint,
    wrK,
    modalVisible,
    setModalVisible,
    tableData,
    popVisible,
    curMarkers,
    showOrderDetail,
    volume,
    volScaleMargins,
    coinInfo,
    createChart,
    priceOffset,
    chartSettingIcon,
    allChartRef,
    updateMainIndicator,
    updateSubIndicator,
    modalRef,
    optionBuyCallback,
    optionSellCallback,
    optionIcon,
    optionActiveTab,
    countDownComponent,
    tradeRestSecond,
    curTime,
    tradeStatusOverList,
    optionAnimation
  } = props;
  const maxElementRef = (0, import_react4.useRef)(null);
  const minElementRef = (0, import_react4.useRef)(null);
  const [audioStatus, setAudioStatus] = (0, import_react4.useState)("wait" /* wait */);
  const mainKList = [
    {
      name: timeLocaleLanguageMap[props.locale]["\u5F00"],
      value: "open"
    },
    {
      name: timeLocaleLanguageMap[props.locale]["\u9AD8"],
      value: "high"
    },
    {
      name: timeLocaleLanguageMap[props.locale]["\u4F4E"],
      value: "low"
    },
    {
      name: timeLocaleLanguageMap[props.locale]["\u6536"],
      value: "close"
    },
    {
      name: timeLocaleLanguageMap[props.locale]["\u6DA8\u8DCC\u5E45"],
      value: "chg"
    },
    {
      name: timeLocaleLanguageMap[props.locale]["\u632F\u5E45"],
      value: "amp"
    }
  ];
  const getHeight = (scaleMargins) => {
    var _a2;
    if ((_a2 = containerRef.current) == null ? void 0 : _a2.clientHeight) {
      return (containerRef.current.clientHeight - 26) * scaleMargins - 18;
    }
  };
  return import_react4.default.createElement("div", { className: "rel-chart" }, import_react4.default.createElement("div", { className: "k-data" }, import_react4.default.createElement("div", { className: "k-line-ind-wrap h-4 text-text_color_03 common-text" }, import_react4.default.createElement(
    "div",
    {
      className: "mr-2 expand-icon-wrap",
      style: {
        transform: !expand.mainK ? "rotate(-90deg)" : "unset"
      },
      onClick: () => {
        expandClick("mainK");
      }
    },
    props.expandIcon
  ), expand.mainK ? [
    import_react4.default.createElement("span", { key: "time", className: "leading-4" }, mainK == null ? void 0 : mainK.time),
    mainKList.map((item) => {
      var _a2;
      return import_react4.default.createElement("span", { key: item.value, className: "common-ml-5 leading-4" }, item.name, ":", import_react4.default.createElement(
        "span",
        {
          className: (0, import_classnames.default)("common-ml-5", {
            "text-buy_up_color": mainK == null ? void 0 : mainK.isUp,
            "text-sell_down_color": !(mainK == null ? void 0 : mainK.isUp)
          })
        },
        item.value === "open" || item.value === "high" || item.value === "low" || item.value === "close" ? (_a2 = Number(mainK == null ? void 0 : mainK[item.value])) == null ? void 0 : _a2.toFixed(priceOffset) : mainK == null ? void 0 : mainK[item.value]
      ));
    }),
    (mainK == null ? void 0 : mainK.buy) ? import_react4.default.createElement("span", { className: "common-ml-5 leading-4" }, timeLocaleLanguageMap[props.locale]["\u4E70\u6DA8"], ":", import_react4.default.createElement(
      "span",
      {
        className: (0, import_classnames.default)("common-ml-5", {
          "text-buy_up_color": mainK == null ? void 0 : mainK.isUp,
          "text-sell_down_color": !(mainK == null ? void 0 : mainK.isUp)
        })
      },
      mainK == null ? void 0 : mainK.buy
    )) : null,
    (mainK == null ? void 0 : mainK.sell) ? import_react4.default.createElement("span", { className: "common-ml-5 leading-4" }, timeLocaleLanguageMap[props.locale]["\u4E70\u8DCC"], ":", import_react4.default.createElement(
      "span",
      {
        className: (0, import_classnames.default)("common-ml-5", {
          "text-buy_up_color": mainK == null ? void 0 : mainK.isUp,
          "text-sell_down_color": !(mainK == null ? void 0 : mainK.isUp)
        })
      },
      mainK == null ? void 0 : mainK.sell
    )) : null,
    (mainK == null ? void 0 : mainK.overBuy) ? import_react4.default.createElement("span", { className: "common-ml-5 leading-4" }, timeLocaleLanguageMap[props.locale]["\u4E70\u8D85\u6DA8"], ":", import_react4.default.createElement(
      "span",
      {
        className: (0, import_classnames.default)("common-ml-5", {
          "text-buy_up_color": mainK == null ? void 0 : mainK.isUp,
          "text-sell_down_color": !(mainK == null ? void 0 : mainK.isUp)
        })
      },
      mainK == null ? void 0 : mainK.overBuy
    )) : null,
    (mainK == null ? void 0 : mainK.overSell) ? import_react4.default.createElement("span", { className: "common-ml-5 leading-4" }, timeLocaleLanguageMap[props.locale]["\u4E70\u8D85\u8DCC"], ":", import_react4.default.createElement(
      "span",
      {
        className: (0, import_classnames.default)("common-ml-5", {
          "text-buy_up_color": mainK == null ? void 0 : mainK.isUp,
          "text-sell_down_color": !(mainK == null ? void 0 : mainK.isUp)
        })
      },
      mainK == null ? void 0 : mainK.overSell
    )) : null,
    (mainK == null ? void 0 : mainK.priceSpread) && curTime.unit === "s" ? import_react4.default.createElement("span", { className: "common-ml-5 leading-4" }, timeLocaleLanguageMap[props.locale]["\u4EF7\u5DEE"], ":", import_react4.default.createElement(
      "span",
      {
        className: (0, import_classnames.default)("common-ml-5", {
          "text-buy_up_color": mainK == null ? void 0 : mainK.isUp,
          "text-sell_down_color": !(mainK == null ? void 0 : mainK.isUp)
        })
      },
      mainK == null ? void 0 : mainK.priceSpread
    )) : null
  ] : null)), import_react4.default.createElement("div", { className: "ma" }, mainIndicator.ma.select ? import_react4.default.createElement("div", { className: "flex text-text_color_03 k-line-ind-wrap common-text" }, import_react4.default.createElement(
    "div",
    {
      className: "mr-2 expand-icon-wrap",
      style: {
        transform: !expand.ma ? "rotate(-90deg)" : "unset"
      },
      onClick: () => {
        expandClick("ma");
      }
    },
    props.expandIcon
  ), expand.ma ? mainIndicator.ma.cur.map((item, index) => {
    var _a2;
    if (item.select) {
      return import_react4.default.createElement("span", { key: item.strip, className: "ma-child" }, `MA(${item.strip}):`, import_react4.default.createElement("span", { className: "common-ml-5", style: { color: item.color } }, (_a2 = maIndicator == null ? void 0 : maIndicator[index]) == null ? void 0 : _a2.toFixed(priceOffset)));
    }
    return null;
  }) : null, import_react4.default.createElement(
    set_chart_default,
    {
      mainIndicator,
      subIndicator,
      chartSettingIcon,
      allChartRef,
      updateMainIndicator,
      updateSubIndicator,
      modalRef,
      type: "ma"
    }
  )) : null, mainIndicator.boll.select ? import_react4.default.createElement("div", { className: "text-text_color_03 k-line-ind-wrap flex" }, import_react4.default.createElement(
    "div",
    {
      className: "mr-2 expand-icon-wrap",
      style: {
        transform: !expand.boll ? "rotate(-90deg)" : "unset"
      },
      onClick: () => {
        expandClick("boll");
      }
    },
    props.expandIcon
  ), expand.boll ? import_react4.default.createElement("span", { className: "ma-child" }, `BOLL(${mainIndicator.boll.cur.mid.value}, ${mainIndicator.boll.cur.std.value}):`, (_a = mainIndicator.boll.curLine) == null ? void 0 : _a.map((item, index) => {
    var _a2;
    if (item.select) {
      return [
        import_react4.default.createElement("span", { key: `${item.color}1`, className: "common-ml-5" }, bollKList[index].name),
        import_react4.default.createElement("span", { key: `${item.color}2`, className: "common-ml-5", style: { color: item.color } }, bollK[(_a2 = bollKList[index]) == null ? void 0 : _a2.value])
      ];
    }
    return null;
  })) : null, import_react4.default.createElement(
    set_chart_default,
    {
      mainIndicator,
      subIndicator,
      chartSettingIcon,
      allChartRef,
      updateMainIndicator,
      updateSubIndicator,
      modalRef,
      type: "boll"
    }
  )) : null), ((_b = subIndicator.vol) == null ? void 0 : _b.select) ? import_react4.default.createElement(
    "div",
    {
      className: "common-sub-ind text-text_color_03",
      style: {
        top: getHeight(volScaleMargins.top)
      }
    },
    import_react4.default.createElement(
      "div",
      {
        className: "mr-2 expand-icon-wrap",
        style: {
          transform: !expand.vol ? "rotate(-90deg)" : "unset"
        },
        onClick: () => {
          expandClick("vol");
        }
      },
      props.expandIcon
    ),
    expand.vol ? [
      import_react4.default.createElement("span", { key: 1 }, import_react4.default.createElement("span", null, "Vol(", coinInfo.baseSymbolName, ")"), import_react4.default.createElement(
        "span",
        {
          className: "common-ml-5",
          style: { color: volume.dir === "rise" ? createChart.upColor : createChart.downColor }
        },
        volume.vol
      )),
      import_react4.default.createElement("span", { key: 2, className: "common-ml-5" }, import_react4.default.createElement("span", null, "Vol(", coinInfo.quoteSymbolName, ")"), import_react4.default.createElement(
        "span",
        {
          style: { color: volume.dir === "rise" ? createChart.upColor : createChart.downColor },
          className: "common-ml-5"
        },
        volume.quoteVolume
      ))
    ] : null,
    import_react4.default.createElement(
      set_chart_default,
      {
        mainIndicator,
        subIndicator,
        chartSettingIcon,
        allChartRef,
        updateMainIndicator,
        updateSubIndicator,
        modalRef,
        type: "vol"
      }
    )
  ) : null, subIndicator.macd.select ? import_react4.default.createElement(
    "div",
    {
      className: "common-sub-ind text-text_color_03",
      style: {
        top: getHeight(macdScaleMargins.top)
      }
    },
    import_react4.default.createElement(
      "div",
      {
        className: "mr-2 expand-icon-wrap",
        style: {
          transform: !expand.macd ? "rotate(-90deg)" : "unset"
        },
        onClick: () => {
          expandClick("macd");
        }
      },
      props.expandIcon
    ),
    expand.macd ? [
      import_react4.default.createElement("span", { key: "macd" }, `MACD(${subIndicator.macd.cur.fast.value}, ${subIndicator.macd.cur.slow.value}, ${subIndicator.macd.cur.signal.value})`),
      (_c = subIndicator.macd.curLine) == null ? void 0 : _c.map((item, index) => {
        var _a2;
        return import_react4.default.createElement("span", { key: item.color, className: "common-ml-5", style: { color: item.color } }, Number(subK == null ? void 0 : subK[(_a2 = macdKList[index]) == null ? void 0 : _a2.value]).toFixed(priceOffset));
      })
    ] : null,
    import_react4.default.createElement(
      set_chart_default,
      {
        mainIndicator,
        subIndicator,
        chartSettingIcon,
        allChartRef,
        updateMainIndicator,
        updateSubIndicator,
        modalRef,
        type: "macd"
      }
    )
  ) : null, subIndicator.kdj.select ? import_react4.default.createElement(
    "div",
    {
      style: {
        top: getHeight(kdjScaleMargins.top)
      },
      className: "common-sub-ind text-text_color_03"
    },
    import_react4.default.createElement(
      "div",
      {
        className: "mr-2 expand-icon-wrap",
        style: {
          transform: !expand.kdj ? "rotate(-90deg)" : "unset"
        },
        onClick: () => {
          expandClick("kdj");
        }
      },
      props.expandIcon
    ),
    expand.kdj ? import_react4.default.createElement("span", { className: "ma-child" }, `KDJ(${subIndicator.kdj.cur.k.value}, ${subIndicator.kdj.cur.d.value}, ${subIndicator.kdj.cur.j.value}):`, (_d = subIndicator.kdj.curLine) == null ? void 0 : _d.map((item, index) => {
      var _a2;
      return [
        import_react4.default.createElement("span", { key: `${item.color}1`, className: "common-ml-5" }, kdjKList[index].name),
        import_react4.default.createElement("span", { key: `${item.color}2`, className: "common-ml-5", style: { color: item.color } }, kdjK == null ? void 0 : kdjK[(_a2 = kdjKList[index]) == null ? void 0 : _a2.value])
      ];
    })) : null,
    import_react4.default.createElement(
      set_chart_default,
      {
        mainIndicator,
        subIndicator,
        chartSettingIcon,
        allChartRef,
        updateMainIndicator,
        updateSubIndicator,
        modalRef,
        type: "kdj"
      }
    )
  ) : null, subIndicator.rsi.select ? import_react4.default.createElement(
    "div",
    {
      style: {
        top: getHeight(rsiScaleMargins.top)
      },
      className: "common-sub-ind text-text_color_03"
    },
    import_react4.default.createElement(
      "div",
      {
        className: "mr-2 expand-icon-wrap",
        style: {
          transform: !expand.rsi ? "rotate(-90deg)" : "unset"
        },
        onClick: () => {
          expandClick("rsi");
        }
      },
      props.expandIcon
    ),
    expand.rsi ? subIndicator.rsi.cur.map((item, index) => {
      if (item.select) {
        return import_react4.default.createElement("span", { key: index, className: "ma-child" }, `RSI(${item.value})`, import_react4.default.createElement("span", { className: "common-ml-5", style: { color: item.color } }, rsiK == null ? void 0 : rsiK[Object.keys(rsiK)[index]]));
      }
      return null;
    }) : null,
    import_react4.default.createElement(
      set_chart_default,
      {
        mainIndicator,
        subIndicator,
        chartSettingIcon,
        allChartRef,
        updateMainIndicator,
        updateSubIndicator,
        modalRef,
        type: "rsi"
      }
    )
  ) : null, subIndicator.wr.select ? import_react4.default.createElement(
    "div",
    {
      style: {
        top: getHeight(wrScaleMargins.top)
      },
      className: "common-sub-ind text-text_color_03"
    },
    import_react4.default.createElement(
      "div",
      {
        className: "mr-2 expand-icon-wrap",
        style: {
          transform: !expand.wr ? "rotate(-90deg)" : "unset"
        },
        onClick: () => {
          expandClick("wr");
        }
      },
      props.expandIcon
    ),
    expand.wr ? subIndicator.wr.cur.map((item, index) => {
      if (item.select) {
        return import_react4.default.createElement("span", { key: index, className: "ma-child" }, `Wm %R(${item.value})`, import_react4.default.createElement("span", { className: "common-ml-5", style: { color: item.color } }, wrK == null ? void 0 : wrK[index]));
      }
      return null;
    }) : null,
    import_react4.default.createElement(
      set_chart_default,
      {
        mainIndicator,
        subIndicator,
        chartSettingIcon,
        allChartRef,
        updateMainIndicator,
        updateSubIndicator,
        modalRef,
        type: "wr"
      }
    )
  ) : null, import_react4.default.createElement("div", { className: "chart", id: "chart", ref: containerRef }, (tradeStatusOverList == null ? void 0 : tradeStatusOverList.length) ? tradeStatusOverList[0].loading ? import_react4.default.createElement(
    "div",
    {
      className: "chart-max-or-min-price",
      style: {
        top: tradeStatusOverList[0].sideInd === tradeDirection.call || tradeStatusOverList[0].sideInd === tradeDirection.overCall ? tradeStatusOverList[0].y - 35 : tradeStatusOverList[0].y,
        left: tradeStatusOverList[0].x - 17 || 0,
        color: createChart.textColor01
      }
    },
    import_react4.default.createElement("div", { style: { width: "34px", height: "34px", background: createChart.bgColor } }, optionAnimation.loading)
  ) : import_react4.default.createElement(
    "div",
    {
      className: "chart-max-or-min-price",
      style: {
        top: tradeStatusOverList[0].sideInd === tradeDirection.call || tradeStatusOverList[0].sideInd === tradeDirection.overCall ? tradeStatusOverList[0].y - 35 : tradeStatusOverList[0].y,
        left: tradeStatusOverList[0].x - 17 || 0,
        color: createChart.textColor01
      }
    },
    tradeStatusOverList[0].realizedProfit > 0 ? import_react4.default.createElement(
      "audio",
      {
        src: "https://bitcastle-frontend-static.s3.ap-southeast-1.amazonaws.com/audio/win.mp3",
        autoPlay: true,
        onEnded: () => {
          setAudioStatus("wait" /* wait */);
        }
      }
    ) : import_react4.default.createElement(
      "audio",
      {
        src: "https://bitcastle-frontend-static.s3.ap-southeast-1.amazonaws.com/audio/lose.mp3",
        autoPlay: true,
        onEnded: () => {
          setAudioStatus("wait" /* wait */);
        }
      }
    ),
    tradeStatusOverList[0].realizedProfit > 0 ? null : import_react4.default.createElement("div", { style: { width: "34px", height: "34px", background: createChart.bgColor } }, optionAnimation[tradeStatusOverList[0].sideInd])
  ) : null, !((_e2 = tradeStatusOverList[0]) == null ? void 0 : _e2.loading) && ((_f = tradeStatusOverList[0]) == null ? void 0 : _f.realizedProfit) > 0 ? import_react4.default.createElement(
    "div",
    {
      className: "chart-max-or-min-price",
      style: {
        top: (((_g = containerRef.current) == null ? void 0 : _g.clientHeight) || tradeStatusOverList[0].y) / 2 - 200,
        left: (((_h = containerRef.current) == null ? void 0 : _h.clientWidth) || tradeStatusOverList[0].x) / 2 - 400,
        color: createChart.textColor01,
        width: "800px",
        height: "400px"
      }
    },
    optionAnimation.win
  ) : null, curTime.unit === "s" && curBuyAndSellPoint.max.time ? import_react4.default.createElement(
    "div",
    {
      className: "chart-max-or-min-price",
      style: {
        top: curBuyAndSellPoint.max.y - 34 - 12 || 0,
        left: curBuyAndSellPoint.max.x || 0,
        color: createChart.textColor01
      }
    },
    tradeRestSecond ? countDownComponent("call" /* call */) : import_react4.default.createElement(
      "div",
      {
        onClick: () => {
          optionBuyCallback();
        }
      },
      optionActiveTab === 1 ? optionIcon.up : optionIcon.overUp
    )
  ) : null, curTime.unit === "s" && curBuyAndSellPoint.max.time ? import_react4.default.createElement(
    "div",
    {
      className: "chart-max-or-min-price",
      style: {
        top: curBuyAndSellPoint.max.y + 12 || 0,
        left: curBuyAndSellPoint.max.x || 0,
        color: createChart.textColor01
      }
    },
    tradeRestSecond ? countDownComponent("put" /* put */) : import_react4.default.createElement(
      "div",
      {
        onClick: () => {
          optionSellCallback();
        }
      },
      optionActiveTab === 1 ? optionIcon.down : optionIcon.overDown
    )
  ) : null), import_react4.default.createElement(
    order_modal_default,
    {
      locale: props.locale,
      modalVisible,
      setModalVisible,
      tableData
    }
  ), popVisible ? import_react4.default.createElement(
    order_pop_default,
    {
      ordersKlineData,
      curMarkers,
      showOrderDetail,
      createChart,
      locale: props.locale
    }
  ) : null);
}
var k_line_render_default = KLineRender;

// node_modules/.pnpm/@nbit+chart-web@1.0.0-beta.109/node_modules/@nbit/chart-web/src/components/k-line/k-line-chart.tsx
function KLineChart(props, ref) {
  var _a;
  const {
    mainIndicator,
    subIndicator,
    ordersKlineData,
    getMoreKlineData,
    offset,
    updateMarketChangesTime,
    colors,
    chartSettingIcon,
    ordersData,
    optionBuyCallback,
    optionSellCallback,
    optionIcon,
    optionActiveTab,
    countDownComponent,
    tradeRestSecond,
    optionAnimation
  } = props;
  const { priceOffset, amountOffset } = offset;
  const chartPriceLineProperty = {
    crosshairMarkerVisible: false,
    baseLineVisible: false,
    priceLineVisible: false,
    lastValueVisible: false,
    lineType: 2
  };
  const mainIndicatorRef = (0, import_react5.useRef)();
  const subIndicatorRef = (0, import_react5.useRef)();
  const isHoverChart = (0, import_react5.useRef)(false);
  const chartRef = (0, import_react5.useRef)();
  const candlestickSeriesRef = (0, import_react5.useRef)();
  const macdVolumeSeriesRef = (0, import_react5.useRef)();
  const volumeSeriesRef = (0, import_react5.useRef)();
  const smaLineRef = (0, import_react5.useRef)();
  const timeLineRef = (0, import_react5.useRef)();
  const [popVisible, setPopVisible] = (0, import_react5.useState)(false);
  const [modalVisible, setModalVisible] = (0, import_react5.useState)(false);
  const propsDataRef = (0, import_react5.useRef)(props.data);
  const curTimeRef = (0, import_react5.useRef)(props.curTime);
  const colorsRef = (0, import_react5.useRef)(1 /* greenUpRedDown */);
  (0, import_react5.useEffect)(() => {
    curTimeRef.current = props.curTime;
    mainIndicatorRef.current = props.mainIndicator;
    subIndicatorRef.current = props.subIndicator;
    colorsRef.current = colors;
  }, [props.data, props.curTime, props.mainIndicator, props.subIndicator, colors]);
  const markersRef = (0, import_react5.useRef)();
  const buyMarkersRef = (0, import_react5.useRef)();
  const ordersDataRef = (0, import_react5.useRef)();
  const deaRef = (0, import_react5.useRef)();
  const difRef = (0, import_react5.useRef)();
  const containerRef = (0, import_react5.useRef)(null);
  const outOfTimeValue = (0, import_react5.useRef)();
  const [heightChange, setHeightChange] = (0, import_react5.useState)(0);
  const [tradeStatusOverList, setTradeStatusOverList] = (0, import_react5.useState)([]);
  ordersDataRef.current = ordersData;
  const bollRef = (0, import_react5.useRef)();
  const kdjRef = (0, import_react5.useRef)();
  const [curMaxAndMinPoint, setCurMaxAndMinPoint] = (0, import_react5.useState)({
    min: {
      time: 0,
      value: 0,
      x: 0,
      y: 0
    },
    max: {
      time: 0,
      value: 0,
      x: 0,
      y: 0
    }
  });
  const [curBuyAndSellPoint, setCurBuyAndSellPoint] = (0, import_react5.useState)({
    min: {
      time: 0,
      value: 0,
      x: 0,
      y: 0
    },
    max: {
      time: 0,
      value: 0,
      x: 0,
      y: 0
    }
  });
  const rsiRef = (0, import_react5.useRef)();
  const wrRef = (0, import_react5.useRef)();
  const [tableData, setTableData] = (0, import_react5.useState)([]);
  const [curMarkers, setCurMarkers] = (0, import_react5.useState)();
  const [maIndicator, setMaIndicator] = (0, import_react5.useState)();
  const [visibleTimeRange, setVisibleTimeRange] = (0, import_react5.useState)({
    from: 0,
    to: 0
  });
  const [mainK, setMainK] = (0, import_react5.useState)();
  const [subK, setSubK] = (0, import_react5.useState)();
  const [volume, setVolume] = (0, import_react5.useState)({
    vol: 0,
    quoteVolume: 0,
    dir: "rise"
  });
  const [bollK, setBollK] = (0, import_react5.useState)({
    mid: 0,
    upper: 0,
    lower: 0
  });
  const [kdjK, setKdjK] = (0, import_react5.useState)();
  const [rsiK, setRsiK] = (0, import_react5.useState)();
  const [wrK, setWrK] = (0, import_react5.useState)();
  const { chartScaleMargins, volScaleMargins, macdScaleMargins, kdjScaleMargins, rsiScaleMargins, wrScaleMargins } = calChartIndicatorPositon(subIndicator);
  const gridColor = props.theme === ThemeEnum.light ? "rgba(0,0,0,0.02)" : "rgba(255,255,255,0.02)";
  (0, import_react5.useEffect)(() => {
    if (chartRef.current) {
      chartRef.current.applyOptions({
        timeScale: {
          barSpacing: 10,
          minBarSpacing: 1,
          tickMarkFormatter: (item) => {
            return showFormatTime(item, props.curTime.unit);
          }
        }
      });
    }
  }, [props.curTime.unit, props.curTime.value]);
  const chartPropertySetting = {
    layout: props.chartLayoutOptions,
    localization: {
      timeFormatter: (item) => {
        if (props.curTime.unit === TimeSharingType.Second) {
          return (0, import_dayjs.default)(item).format("YYYY/MM/DD HH:mm:ss");
        }
        return (0, import_dayjs.default)(item).format("YYYY/MM/DD HH:mm");
      },
      priceFormatter: (item) => {
        return `${item.toFixed(priceOffset)}`;
      }
    },
    crosshair: {
      mode: ot.Normal
    },
    timeScale: {
      barSpacing: 6,
      minBarSpacing: 1,
      tickMarkFormatter: (item) => {
        return showFormatTime(item, props.curTime.unit);
      },
      borderColor: gridColor,
      lockVisibleTimeRangeOnResize: true
    },
    rightPriceScale: {
      scaleMargins: chartScaleMargins,
      visible: true,
      alignLabels: true,
      autoScale: true,
      borderColor: gridColor
    }
  };
  (0, import_react5.useEffect)(() => {
    requestAnimationFrame(() => {
      calHeightAndLowPoint(
        visibleTimeRange,
        curTimeRef,
        propsDataRef,
        timeLineRef,
        candlestickSeriesRef,
        chartRef,
        setCurMaxAndMinPoint,
        props.createChart,
        priceOffset
      );
      calQuickBuyAndSellPoint(
        visibleTimeRange,
        curTimeRef,
        propsDataRef,
        timeLineRef,
        candlestickSeriesRef,
        chartRef,
        setCurBuyAndSellPoint,
        props.createChart,
        priceOffset
      );
    });
  }, [visibleTimeRange, subIndicator, props.getDataAndUpdateChart]);
  (0, import_react5.useEffect)(() => {
    var _a2, _b, _c, _d, _e2, _f;
    (_c = chartRef.current) == null ? void 0 : _c.applyOptions({
      width: (_a2 = containerRef.current) == null ? void 0 : _a2.clientWidth,
      height: (_b = containerRef.current) == null ? void 0 : _b.clientHeight,
      rightPriceScale: {
        ...chartPropertySetting.rightPriceScale,
        scaleMargins: chartScaleMargins
      }
    });
    if ((_e2 = (_d = chartRef.current) == null ? void 0 : _d.timeScale().getVisibleRange()) == null ? void 0 : _e2.from) {
      setVisibleTimeRange((_f = chartRef.current) == null ? void 0 : _f.timeScale().getVisibleRange());
    }
  }, [(_a = containerRef.current) == null ? void 0 : _a.clientHeight]);
  (0, import_react5.useEffect)(() => {
    chartRef.current = Pe(document.getElementById("chart"), chartPropertySetting);
    chartRef.current.applyOptions({
      handleScale: {
        axisPressedMouseMove: {
          time: true,
          price: false
        },
        pinch: true
      }
    });
    chartRef.current.timeScale().fitContent();
    const subscribeTimeChange = (newVisibleTimeRange) => {
      var _a2, _b, _c;
      if ((_b = (_a2 = chartRef.current) == null ? void 0 : _a2.timeScale().getVisibleRange()) == null ? void 0 : _b.from) {
        setVisibleTimeRange((_c = chartRef.current) == null ? void 0 : _c.timeScale().getVisibleRange());
      }
      setPopVisible(false);
    };
    chartRef.current.timeScale().subscribeVisibleTimeRangeChange(subscribeTimeChange);
    const sizeChange = () => {
      var _a2, _b, _c, _d, _e2;
      buyMarkersRef.current = getBuyMarkers(ordersData, propsDataRef, props.createChart) || [];
      const oldData = ((_b = (_a2 = timeLineRef.current) == null ? void 0 : _a2.markers()) == null ? void 0 : _b.filter((item) => {
        var _a3, _b2;
        return ((_a3 = item.id) == null ? void 0 : _a3.toString()) === "1" || ((_b2 = item.id) == null ? void 0 : _b2.toString()) === "2";
      })) || [];
      (_e2 = timeLineRef.current) == null ? void 0 : _e2.setMarkers(
        (_d = (_c = oldData.concat(buyMarkersRef.current)) == null ? void 0 : _c.sort) == null ? void 0 : _d.call(_c, (a2, b2) => {
          return Number(a2.time) - Number(b2.time);
        })
      );
    };
    let timer;
    function onVisibleLogicalRangeChanged(newVisibleLogicalRange) {
      var _a2, _b, _c;
      if ((_b = (_a2 = chartRef.current) == null ? void 0 : _a2.timeScale().getVisibleRange()) == null ? void 0 : _b.from) {
        setVisibleTimeRange((_c = chartRef.current) == null ? void 0 : _c.timeScale().getVisibleRange());
      }
      timer = setTimeout(() => {
        var _a3, _b2, _c2, _d;
        let logicalRange = (_b2 = (_a3 = chartRef.current) == null ? void 0 : _a3.timeScale()) == null ? void 0 : _b2.getVisibleLogicalRange();
        if (logicalRange !== null) {
          const curRef = curTimeRef.current.unit === "time" || curTimeRef.current.unit === "s" ? timeLineRef.current : candlestickSeriesRef.current;
          const barsInfo = curRef == null ? void 0 : curRef.barsInLogicalRange(logicalRange);
          if (barsInfo !== null && (barsInfo == null ? void 0 : barsInfo.barsBefore) < 10) {
            getMoreKlineData({ time: (_d = (_c2 = propsDataRef.current) == null ? void 0 : _c2[0]) == null ? void 0 : _d.time });
            clearTimeout(timer);
          }
        }
      }, 500);
    }
    chartRef.current.timeScale().subscribeVisibleLogicalRangeChange(onVisibleLogicalRangeChanged);
    chartRef.current.subscribeClick((param) => {
      subscribeClickChange(param, markersRef, setPopVisible, props, priceOffset, setCurMarkers);
    });
    const subscribeMoveChange = (param) => {
      var _a2, _b, _c, _d, _e2, _f, _g, _h, _i2, _j, _k, _l, _m, _n2, _o, _p, _q, _r, _s2, _t2, _u, _v, _w, _x, _y, _z, _A, _B, _C, _D, _E, _F, _G, _H, _I, _J, _K, _L;
      const time = param.time;
      if (time) {
        isHoverChart.current = true;
        const volumeSeriesData = volumeSeriesRef.current ? param.seriesData.get(volumeSeriesRef.current) : void 0;
        const macdVolumeSeriesData = macdVolumeSeriesRef.current ? param.seriesData.get(macdVolumeSeriesRef.current) : void 0;
        let chartData = candlestickSeriesRef.current ? param.seriesData.get(candlestickSeriesRef.current) : null;
        if (!chartData) {
          chartData = (_a2 = propsDataRef.current.filter((item) => {
            return item.time === time;
          })) == null ? void 0 : _a2[0];
        }
        const smaLineArr = [];
        (_b = smaLineRef.current) == null ? void 0 : _b.forEach((item) => {
          var _a3;
          smaLineArr.push((_a3 = param.seriesData.get(item)) == null ? void 0 : _a3.value);
        });
        const dif = difRef.current ? param.seriesData.get(difRef.current) : void 0;
        const dea = deaRef.current ? param.seriesData.get(deaRef.current) : void 0;
        setMaIndicator(smaLineArr);
        const buyAmount = (_c = ordersDataRef.current) == null ? void 0 : _c.filter((item) => {
          return item.ts.toString() === time.toString();
        });
        const tempObj = {};
        buyAmount == null ? void 0 : buyAmount.forEach((item) => {
          if (!tempObj[`${item.sideInd}`]) {
            tempObj[`${item.sideInd}`] = {
              ...item
            };
          } else {
            tempObj[`${item.sideInd}`] = {
              ...tempObj[`${item.sideInd}`],
              amount: Number(item.amount) + Number(tempObj[`${item.sideInd}`].amount)
            };
          }
        });
        setMainK({
          time: (0, import_dayjs.default)(time).format("YYYY/MM/DD HH:mm"),
          open: chartData == null ? void 0 : chartData.open,
          close: chartData == null ? void 0 : chartData.close,
          high: chartData == null ? void 0 : chartData.high,
          low: chartData == null ? void 0 : chartData.low,
          isUp: checkIsUp(chartData),
          chg: calcChg(chartData, priceOffset),
          amp: calcAmp(chartData, priceOffset),
          buy: ((_d = tempObj[tradeDirection.call]) == null ? void 0 : _d.amount) ? `${(_e2 = tempObj[tradeDirection.call]) == null ? void 0 : _e2.amount} ${(_f = tempObj[tradeDirection.call]) == null ? void 0 : _f.currency}` : "",
          sell: ((_g = tempObj[tradeDirection.put]) == null ? void 0 : _g.amount) ? `${(_h = tempObj[tradeDirection.put]) == null ? void 0 : _h.amount} ${(_i2 = tempObj[tradeDirection.put]) == null ? void 0 : _i2.currency}` : "",
          overBuy: ((_j = tempObj[tradeDirection.overCall]) == null ? void 0 : _j.amount) ? `${(_k = tempObj[tradeDirection.overCall]) == null ? void 0 : _k.amount} ${(_l = tempObj[tradeDirection.overCall]) == null ? void 0 : _l.currency}` : "",
          overSell: ((_m = tempObj[tradeDirection.overPut]) == null ? void 0 : _m.amount) ? `${(_n2 = tempObj[tradeDirection.overPut]) == null ? void 0 : _n2.amount} ${(_o = tempObj[tradeDirection.overPut]) == null ? void 0 : _o.currency}` : "",
          priceSpread: ((_p = tempObj[tradeDirection.overCall]) == null ? void 0 : _p.amplitude) || ((_q = tempObj[tradeDirection.overPut]) == null ? void 0 : _q.amplitude)
        });
        setSubK({
          macd: macdVolumeSeriesData == null ? void 0 : macdVolumeSeriesData.value,
          dea: dea == null ? void 0 : dea.value,
          dif: dif == null ? void 0 : dif.value
        });
        setVolume({
          vol: volumeSeriesData == null ? void 0 : volumeSeriesData.value,
          quoteVolume: (_s2 = (_r = propsDataRef.current.filter((item) => {
            return item.time === time;
          })) == null ? void 0 : _r[0]) == null ? void 0 : _s2.quoteVolume,
          dir: (chartData == null ? void 0 : chartData.close) > (chartData == null ? void 0 : chartData.open) ? "rise" : "fall"
        });
        setBollK({
          mid: (_u = param.seriesData.get((_t2 = bollRef.current) == null ? void 0 : _t2.mid)) == null ? void 0 : _u.value,
          upper: (_w = param.seriesData.get((_v = bollRef.current) == null ? void 0 : _v.upper)) == null ? void 0 : _w.value,
          lower: (_y = param.seriesData.get((_x = bollRef.current) == null ? void 0 : _x.lower)) == null ? void 0 : _y.value
        });
        setKdjK({
          k: (_A = param.seriesData.get((_z = kdjRef.current) == null ? void 0 : _z.k)) == null ? void 0 : _A.value,
          d: (_C = param.seriesData.get((_B = kdjRef.current) == null ? void 0 : _B.d)) == null ? void 0 : _C.value,
          j: (_E = param.seriesData.get((_D = kdjRef.current) == null ? void 0 : _D.j)) == null ? void 0 : _E.value
        });
        setRsiK({
          r: (_G = param.seriesData.get((_F = rsiRef.current) == null ? void 0 : _F[0])) == null ? void 0 : _G.value,
          s: (_I = param.seriesData.get((_H = rsiRef.current) == null ? void 0 : _H[1])) == null ? void 0 : _I.value,
          i: (_K = param.seriesData.get((_J = rsiRef.current) == null ? void 0 : _J[2])) == null ? void 0 : _K.value
        });
        const wrLineArr = [];
        (_L = wrRef.current) == null ? void 0 : _L.forEach((item) => {
          var _a3;
          wrLineArr.push((_a3 = param.seriesData.get(item)) == null ? void 0 : _a3.value);
        });
        setWrK(wrLineArr);
      } else {
        isHoverChart.current = false;
        if (outOfTimeValue.current) {
          setMaIndicator(outOfTimeValue.current._ma);
          setMainK(outOfTimeValue.current._mainK);
          setSubK(outOfTimeValue.current._subK);
          setBollK(outOfTimeValue.current._boll);
          setKdjK(outOfTimeValue.current._kdjK);
          setRsiK(outOfTimeValue.current._rsiK);
          setWrK(outOfTimeValue.current._wrK);
          setVolume(outOfTimeValue.current._volK);
        }
      }
    };
    chartRef.current.subscribeCrosshairMove(subscribeMoveChange);
    return () => {
      var _a2, _b, _c, _d;
      (_a2 = chartRef.current) == null ? void 0 : _a2.timeScale().unsubscribeVisibleTimeRangeChange(subscribeTimeChange);
      (_b = chartRef.current) == null ? void 0 : _b.unsubscribeClick((param) => {
        subscribeClickChange(param, markersRef, setPopVisible, props, priceOffset, setCurMarkers);
      });
      (_c = chartRef.current) == null ? void 0 : _c.unsubscribeCrosshairMove(subscribeMoveChange);
      (_d = chartRef.current) == null ? void 0 : _d.timeScale().unsubscribeVisibleLogicalRangeChange(onVisibleLogicalRangeChanged);
    };
  }, []);
  const getColorOfSetting = (close, open) => {
    if (colorsRef.current === 1 /* greenUpRedDown */) {
      return close > open ? "rgba(80, 177, 108, 0.5)" : "rgba(233, 90, 92, 0.5)";
    } else {
      return close > open ? "rgba(233, 90, 92, 0.5)" : "rgba(80, 177, 108, 0.5)";
    }
  };
  (0, import_react5.useImperativeHandle)(ref, () => ({
    scrollToTime(marketChangesTime) {
      var _a2, _b;
      if (chartRef.current && ((_a2 = propsDataRef.current) == null ? void 0 : _a2.length)) {
        const timeToCoordinate = (_b = chartRef.current) == null ? void 0 : _b.timeScale().timeToCoordinate(marketChangesTime);
        setTimeout(() => {
          var _a3;
          (_a3 = chartRef.current) == null ? void 0 : _a3.timeScale().setVisibleRange({
            from: curTimeRef.current.unit === "m" ? marketChangesTime - 1e3 * 60 * 120 : marketChangesTime - 1e3 * 60 * 60 * 120,
            to: curTimeRef.current.unit === "m" ? marketChangesTime + 1e3 * 60 : marketChangesTime + 1e3 * 60 * 60
          });
        });
        updateMarketChangesTime(0);
      }
    },
    updateCandlestickData(data, curRefData) {
      var _a2, _b, _c, _d;
      propsDataRef.current = curRefData || [];
      (_a2 = candlestickSeriesRef.current) == null ? void 0 : _a2.update(data);
      const temp = {
        ...data,
        time: (0, import_dayjs.default)(data.time).format("YYYY/MM/DD HH:mm"),
        isUp: checkIsUp(data),
        chg: calcChg(data, priceOffset),
        amp: calcAmp(data, priceOffset)
      };
      if (!isHoverChart.current) {
        setMainK(temp);
      }
      outOfTimeValue.current._mainK = temp;
      if ((_c = (_b = chartRef.current) == null ? void 0 : _b.timeScale().getVisibleRange()) == null ? void 0 : _c.from) {
        setVisibleTimeRange((_d = chartRef.current) == null ? void 0 : _d.timeScale().getVisibleRange());
      }
    },
    updateTimeData(data, curRefData) {
      var _a2, _b, _c, _d;
      propsDataRef.current = curRefData || [];
      (_a2 = timeLineRef.current) == null ? void 0 : _a2.update(data);
      const temp = {
        ...data,
        time: (0, import_dayjs.default)(data.time).format("YYYY/MM/DD HH:mm"),
        isUp: checkIsUp(data),
        chg: calcChg(data, priceOffset),
        amp: calcAmp(data, priceOffset)
      };
      if (!isHoverChart.current) {
        setMainK(temp);
      }
      outOfTimeValue.current._mainK = temp;
      if ((_c = (_b = chartRef.current) == null ? void 0 : _b.timeScale().getVisibleRange()) == null ? void 0 : _c.from) {
        setVisibleTimeRange((_d = chartRef.current) == null ? void 0 : _d.timeScale().getVisibleRange());
      }
    },
    updateVolumeData(data) {
      var _a2, _b, _c;
      if ((_b = (_a2 = subIndicatorRef.current) == null ? void 0 : _a2.vol) == null ? void 0 : _b.select) {
        (_c = volumeSeriesRef.current) == null ? void 0 : _c.update({
          ...data,
          color: getColorOfSetting(data.close, data.open)
        });
        const temp = {
          ...data,
          vol: data.value
        };
        if (!isHoverChart.current) {
          setVolume(temp);
        }
        outOfTimeValue.current._volK = temp;
      }
    },
    updateMaData() {
      var _a2, _b;
      if ((_a2 = mainIndicatorRef.current) == null ? void 0 : _a2.ma.select) {
        let _ma = [];
        (_b = mainIndicatorRef.current) == null ? void 0 : _b.ma.cur.forEach((item, index) => {
          var _a3, _b2, _c, _d;
          if (item.select) {
            const { strip, type } = item;
            let smaData = calculateSMA(propsDataRef.current, Number(strip), type, priceOffset);
            _ma.push((_a3 = smaData[smaData.length - 1]) == null ? void 0 : _a3.value);
            ((_b2 = smaData[smaData.length - 1]) == null ? void 0 : _b2.time) && ((_d = (_c = smaLineRef.current) == null ? void 0 : _c[index]) == null ? void 0 : _d.update(smaData[smaData.length - 1]));
          }
        });
        if (!isHoverChart.current) {
          setMaIndicator(_ma);
        }
        outOfTimeValue.current._ma = _ma;
      }
    },
    updateMacdData(data) {
      var _a2, _b, _c, _d, _e2, _f, _g, _h;
      if ((_a2 = subIndicatorRef.current) == null ? void 0 : _a2.macd.select) {
        let _subK = {
          dea: void 0,
          dif: void 0,
          macd: void 0
        };
        const fast = ((_b = subIndicatorRef.current) == null ? void 0 : _b.macd.cur.fast).value;
        const slow = ((_c = subIndicatorRef.current) == null ? void 0 : _c.macd.cur.slow).value;
        const signal = ((_d = subIndicatorRef.current) == null ? void 0 : _d.macd.cur.signal).value;
        const newData = calculateMACD(propsDataRef.current, Number(fast), Number(slow), Number(signal), priceOffset);
        _subK.dif = (_e2 = newData[newData.length - 1]) == null ? void 0 : _e2.dif;
        _subK.dea = (_f = newData[newData.length - 1]) == null ? void 0 : _f.dea;
        _subK.macd = (_g = newData[newData.length - 1]) == null ? void 0 : _g.value;
        const difData = newData.map((item) => {
          return {
            time: item.time,
            value: item.dif
          };
        }) || [];
        const deaData = newData.map((item) => {
          return {
            time: item.time,
            value: item.dea
          };
        }) || [];
        const macdData = newData.map((item) => {
          return {
            time: item == null ? void 0 : item.time,
            value: item == null ? void 0 : item.value,
            color: getColorOfSetting(item == null ? void 0 : item.value, 0)
          };
        }) || [];
        const nameList = [difRef.current, deaRef.current, macdVolumeSeriesRef.current];
        const dataList = [difData[difData.length - 1], deaData[deaData.length - 1], macdData[macdData.length - 1]];
        (_h = subIndicator.macd.curLine) == null ? void 0 : _h.forEach((item, index) => {
          var _a3;
          if (item.select) {
            (_a3 = nameList[index]) == null ? void 0 : _a3.update(dataList[index]);
          }
        });
        if (!isHoverChart.current) {
          setSubK(_subK);
        }
        outOfTimeValue.current._subK = _subK;
      }
    },
    updateBollData() {
      var _a2, _b, _c, _d, _e2;
      if ((_a2 = mainIndicatorRef.current) == null ? void 0 : _a2.boll.select) {
        let _boll = {
          mid: 0,
          upper: 0,
          lower: 0
        };
        const result = calBoll(
          propsDataRef.current,
          [
            Number(((_b = mainIndicatorRef.current) == null ? void 0 : _b.boll.cur.mid).value),
            Number(((_c = mainIndicatorRef.current) == null ? void 0 : _c.boll.cur.std).value)
          ],
          priceOffset
        );
        (_e2 = (_d = mainIndicatorRef.current) == null ? void 0 : _d.boll.curLine) == null ? void 0 : _e2.forEach((item, index) => {
          var _a3;
          if (item.select) {
            const _index = Object.keys(_boll)[index];
            _boll[_index] = result[result.length - 1][_index];
            const value = result.map((_item) => {
              return {
                value: _item[_index],
                time: _item.time
              };
            }) || [];
            (_a3 = bollRef.current) == null ? void 0 : _a3[_index].update(value[value.length - 1]);
          }
        });
        if (!isHoverChart.current) {
          setBollK(_boll);
        }
        outOfTimeValue.current._boll = _boll;
      }
    },
    updateKdjData() {
      var _a2, _b, _c, _d, _e2, _f;
      if ((_a2 = subIndicatorRef.current) == null ? void 0 : _a2.kdj.select) {
        let _kdjK = {
          k: 0,
          d: 0,
          j: 0
        };
        const result = calKdj(
          propsDataRef.current,
          [
            Number(((_b = subIndicatorRef.current) == null ? void 0 : _b.kdj.cur.k).value),
            Number(((_c = subIndicatorRef.current) == null ? void 0 : _c.kdj.cur.d).value),
            Number(((_d = subIndicatorRef.current) == null ? void 0 : _d.kdj.cur.j).value)
          ],
          priceOffset
        );
        (_f = (_e2 = subIndicatorRef.current) == null ? void 0 : _e2.kdj.curLine) == null ? void 0 : _f.forEach((item, index) => {
          var _a3, _b2;
          const _index = Object.keys(_kdjK)[index];
          if (item.select) {
            _kdjK[_index] = (_a3 = result[result.length - 1]) == null ? void 0 : _a3[_index];
            const value = result.map((_item) => {
              return {
                value: _item[_index],
                time: _item.time
              };
            }) || [];
            (_b2 = kdjRef.current) == null ? void 0 : _b2[_index].update(value[value.length - 1]);
          }
        });
        if (!isHoverChart.current) {
          setKdjK(_kdjK);
        }
        outOfTimeValue.current._kdjK = _kdjK;
      }
    },
    updateRsiData() {
      var _a2, _b, _c, _d, _e2, _f, _g, _h;
      if ((_a2 = subIndicatorRef.current) == null ? void 0 : _a2.rsi.select) {
        let _rsiK = {
          r: 0,
          s: 0,
          i: 0
        };
        const result = calRsi(
          propsDataRef.current,
          [
            Number((_b = subIndicatorRef.current) == null ? void 0 : _b.rsi.cur[0].value),
            Number((_c = subIndicatorRef.current) == null ? void 0 : _c.rsi.cur[1].value),
            Number((_d = subIndicatorRef.current) == null ? void 0 : _d.rsi.cur[2].value)
          ],
          priceOffset
        );
        _rsiK.r = (_e2 = result[result.length - 1]) == null ? void 0 : _e2.r;
        _rsiK.s = (_f = result[result.length - 1]) == null ? void 0 : _f.s;
        _rsiK.i = (_g = result[result.length - 1]) == null ? void 0 : _g.i;
        (_h = subIndicatorRef.current) == null ? void 0 : _h.rsi.cur.forEach((_item, index) => {
          var _a3, _b2;
          if (_item.select) {
            const value = result.map((item) => {
              return {
                value: item[Object.keys(_rsiK)[index]],
                time: item.time
              };
            }) || [];
            (_b2 = (_a3 = rsiRef.current) == null ? void 0 : _a3[index]) == null ? void 0 : _b2.update(value[value.length - 1]);
          }
        });
        if (!isHoverChart.current) {
          setRsiK(_rsiK);
        }
        outOfTimeValue.current._rsiK = _rsiK;
      }
    },
    updateWrData() {
      var _a2, _b;
      if ((_a2 = subIndicatorRef.current) == null ? void 0 : _a2.wr.select) {
        let _wrK = [];
        (_b = subIndicatorRef.current) == null ? void 0 : _b.wr.cur.forEach((_item, index) => {
          var _a3, _b2, _c, _d;
          if (_item.select) {
            const result = calWr(
              propsDataRef.current,
              [Number((_a3 = subIndicatorRef.current) == null ? void 0 : _a3.wr.cur[index].value)],
              [
                { key: "wr1", title: "wr1" },
                { key: "wr2", title: "wr2" }
              ],
              priceOffset
            );
            _wrK.push((_b2 = result[result.length - 1]) == null ? void 0 : _b2.wr1);
            const value = result.map((item) => {
              return {
                value: item.wr1,
                time: item.time
              };
            }) || [];
            (_d = (_c = wrRef.current) == null ? void 0 : _c[index]) == null ? void 0 : _d.update(value[value.length - 1]);
          }
        });
        if (!isHoverChart.current) {
          setWrK(_wrK);
        }
        outOfTimeValue.current._wrK = _wrK;
      }
    }
  }));
  (0, import_react5.useEffect)(() => {
    const handleResize = () => {
      var _a2, _b, _c, _d, _e2, _f;
      (_c = chartRef.current) == null ? void 0 : _c.applyOptions({
        width: (_a2 = containerRef.current) == null ? void 0 : _a2.clientWidth,
        height: (_b = containerRef.current) == null ? void 0 : _b.clientHeight,
        rightPriceScale: {
          ...chartPropertySetting.rightPriceScale,
          scaleMargins: chartScaleMargins
        }
      });
      setHeightChange(new Date().valueOf());
      if ((_e2 = (_d = chartRef.current) == null ? void 0 : _d.timeScale().getVisibleRange()) == null ? void 0 : _e2.from) {
        setVisibleTimeRange((_f = chartRef.current) == null ? void 0 : _f.timeScale().getVisibleRange());
      }
    };
    window.addEventListener("resize", handleResize);
    return () => {
      window.removeEventListener("resize", handleResize);
    };
  }, []);
  (0, import_react5.useEffect)(() => {
    var _a2;
    (_a2 = chartRef.current) == null ? void 0 : _a2.applyOptions({
      ...chartPropertySetting,
      layout: {
        ...props.chartLayoutOptions
      },
      grid: {
        vertLines: {
          color: gridColor
        },
        horzLines: {
          color: gridColor
        }
      },
      rightPriceScale: {
        ...chartPropertySetting.rightPriceScale,
        scaleMargins: chartScaleMargins
      }
    });
  }, [props.chartLayoutOptions.background, props.chartLayoutOptions.textColor]);
  (0, import_react5.useEffect)(() => {
    var _a2, _b, _c, _d, _e2, _f, _g, _h, _i2, _j, _k, _l, _m, _n2, _o, _p, _q, _r, _s2, _t2, _u, _v, _w, _x, _y, _z, _A, _B, _C, _D, _E, _F, _G, _H, _I, _J, _K, _L, _M, _N, _O, _P, _Q, _R, _S, _T, _U, _V, _W, _X, _Y, _Z, __, _$, _aa, _ba, _ca, _da, _ea, _fa;
    let _ma = [];
    let _mainK = {
      ...propsDataRef.current[propsDataRef.current.length - 1],
      time: (0, import_dayjs.default)((_a2 = propsDataRef.current[propsDataRef.current.length - 1]) == null ? void 0 : _a2.time).format("YYYY/MM/DD HH:mm"),
      isUp: checkIsUp(propsDataRef.current[propsDataRef.current.length - 1]),
      chg: calcChg(propsDataRef.current[propsDataRef.current.length - 1], priceOffset),
      amp: calcAmp(propsDataRef.current[propsDataRef.current.length - 1], priceOffset)
    };
    let _subK = {
      dea: void 0,
      dif: void 0,
      macd: void 0
    };
    let _volK = {
      vol: (_b = propsDataRef.current[propsDataRef.current.length - 1]) == null ? void 0 : _b.volume,
      quoteVolume: (_c = propsDataRef.current[propsDataRef.current.length - 1]) == null ? void 0 : _c.quoteVolume,
      dir: ((_d = propsDataRef.current[propsDataRef.current.length - 1]) == null ? void 0 : _d.close) > ((_e2 = propsDataRef.current[propsDataRef.current.length - 1]) == null ? void 0 : _e2.open) ? "rise" : "fall"
    };
    let _boll = {
      mid: 0,
      upper: 0,
      lower: 0
    };
    let _kdjK = {
      k: 0,
      d: 0,
      j: 0
    };
    let _rsiK = {
      r: 0,
      s: 0,
      i: 0
    };
    let _wrK = [];
    if (chartRef.current) {
      if (!candlestickSeriesRef.current) {
        candlestickSeriesRef.current = chartRef.current.addCandlestickSeries({
          upColor: ((_f = props == null ? void 0 : props.createChart) == null ? void 0 : _f.upColor) || "#26a69a",
          downColor: ((_g = props == null ? void 0 : props.createChart) == null ? void 0 : _g.downColor) || "#ef5350",
          borderVisible: false,
          wickUpColor: ((_h = props == null ? void 0 : props.createChart) == null ? void 0 : _h.upColor) || "#26a69a",
          wickDownColor: ((_i2 = props == null ? void 0 : props.createChart) == null ? void 0 : _i2.downColor) || "#ef5350",
          ...chartPriceLineProperty,
          lastValueVisible: true,
          priceFormat: {
            minMove: 1 / 10 ** priceOffset
          }
        });
      }
      (_j = smaLineRef.current) == null ? void 0 : _j.forEach((item) => {
        item.setData([]);
      });
      (_k = timeLineRef.current) == null ? void 0 : _k.setData([]);
      (_l = bollRef.current) == null ? void 0 : _l.lower.setData([]);
      (_m = bollRef.current) == null ? void 0 : _m.mid.setData([]);
      (_n2 = bollRef.current) == null ? void 0 : _n2.upper.setData([]);
      (_o = difRef.current) == null ? void 0 : _o.setData([]);
      (_p = deaRef.current) == null ? void 0 : _p.setData([]);
      (_q = volumeSeriesRef.current) == null ? void 0 : _q.setData([]);
      (_r = macdVolumeSeriesRef.current) == null ? void 0 : _r.setData([]);
      (_s2 = kdjRef.current) == null ? void 0 : _s2.k.setData([]);
      (_t2 = kdjRef.current) == null ? void 0 : _t2.d.setData([]);
      (_u = kdjRef.current) == null ? void 0 : _u.j.setData([]);
      (_v = rsiRef.current) == null ? void 0 : _v.forEach((item) => {
        item.setData([]);
      });
      (_w = wrRef.current) == null ? void 0 : _w.forEach((item) => {
        item.setData([]);
      });
      markersRef.current = getMarkers(ordersKlineData, propsDataRef, props.createChart);
      buyMarkersRef.current = getBuyMarkers(ordersData, propsDataRef, props.createChart);
      if (props.curTime.unit === "time" || props.curTime.unit === "s") {
        if (!timeLineRef.current) {
          timeLineRef.current = (_x = chartRef.current) == null ? void 0 : _x.addLineSeries({
            color: props.createChart.brandColor,
            lineWidth: 1,
            lineStyle: d.Solid,
            ...chartPriceLineProperty,
            lastValueVisible: true
          });
        }
        timeLineRef.current.setData(
          propsDataRef.current.map((item) => {
            return {
              ...item,
              value: item.close
            };
          })
        );
        candlestickSeriesRef.current.setData([]);
        ((_y = markersRef.current) == null ? void 0 : _y.length) && timeLineRef.current.setMarkers(markersRef.current);
        const oldData = ((_A = (_z = timeLineRef.current) == null ? void 0 : _z.markers()) == null ? void 0 : _A.filter((item) => {
          var _a3, _b2;
          return ((_a3 = item.id) == null ? void 0 : _a3.toString()) === "1" || ((_b2 = item.id) == null ? void 0 : _b2.toString()) === "2";
        })) || [];
        const preData = ((_C = (_B = timeLineRef.current) == null ? void 0 : _B.markers()) == null ? void 0 : _C.filter((item) => {
          var _a3, _b2;
          return ((_a3 = item.id) == null ? void 0 : _a3.toString()) !== "1" && ((_b2 = item.id) == null ? void 0 : _b2.toString()) !== "2";
        })) || [];
        const newList = [];
        preData == null ? void 0 : preData.forEach((item) => {
          var _a3;
          (_a3 = buyMarkersRef.current) == null ? void 0 : _a3.forEach((_item) => {
            var _a4, _b2, _c2, _d2, _e3;
            if (item.id === _item.id && item.statusCd === tradeStatus.processing && _item.statusCd === tradeStatus.complete) {
              const val = (_c2 = (_b2 = (_a4 = propsDataRef.current) == null ? void 0 : _a4.filter((childItem) => {
                return childItem.time === _item.time;
              })) == null ? void 0 : _b2[0]) == null ? void 0 : _c2.close;
              if (val) {
                const y2 = (_d2 = timeLineRef.current) == null ? void 0 : _d2.priceToCoordinate(val);
                const x2 = (_e3 = chartRef.current) == null ? void 0 : _e3.timeScale().timeToCoordinate(_item.time);
                if (x2 && y2) {
                  newList.push({
                    ..._item,
                    x: x2,
                    y: y2
                  });
                }
              }
            }
          });
        });
        if (newList == null ? void 0 : newList.length) {
          setTradeStatusOverList(
            newList.map((item) => {
              return {
                ...item,
                loading: true
              };
            })
          );
          (_G = timeLineRef.current) == null ? void 0 : _G.setMarkers(
            (_F = (_E = oldData.concat(
              ((_D = buyMarkersRef.current) == null ? void 0 : _D.filter((item) => {
                return item.id !== newList[0].id;
              })) || []
            )) == null ? void 0 : _E.sort) == null ? void 0 : _F.call(_E, (a2, b2) => {
              return Number(a2.time) - Number(b2.time);
            })
          );
          setTimeout(() => {
            setTradeStatusOverList(newList);
            setTimeout(() => {
              var _a3, _b2, _c2;
              setTradeStatusOverList([]);
              (_c2 = timeLineRef.current) == null ? void 0 : _c2.setMarkers(
                (_b2 = (_a3 = oldData.concat(buyMarkersRef.current)) == null ? void 0 : _a3.sort) == null ? void 0 : _b2.call(_a3, (a2, b2) => {
                  return Number(a2.time) - Number(b2.time);
                })
              );
            }, 1e3);
          }, 500);
        } else {
          timeLineRef.current.setMarkers(
            (_I = (_H = oldData.concat(buyMarkersRef.current)) == null ? void 0 : _H.sort) == null ? void 0 : _I.call(_H, (a2, b2) => {
              return Number(a2.time) - Number(b2.time);
            })
          );
        }
      } else {
        candlestickSeriesRef.current.setData(propsDataRef.current);
        ((_J = markersRef.current) == null ? void 0 : _J.length) && candlestickSeriesRef.current.setMarkers(markersRef.current);
        const oldData = ((_L = (_K = candlestickSeriesRef.current) == null ? void 0 : _K.markers()) == null ? void 0 : _L.filter((item) => {
          var _a3, _b2;
          return ((_a3 = item.id) == null ? void 0 : _a3.toString()) === "1" || ((_b2 = item.id) == null ? void 0 : _b2.toString()) === "2";
        })) || [];
        candlestickSeriesRef.current.setMarkers(
          (_N = (_M = oldData.concat(buyMarkersRef.current)) == null ? void 0 : _M.sort) == null ? void 0 : _N.call(_M, (a2, b2) => {
            return Number(a2.time) - Number(b2.time);
          })
        );
      }
      if (mainIndicator.boll.select) {
        if (!bollRef.current) {
          bollRef.current = {
            mid: (_O = chartRef.current) == null ? void 0 : _O.addLineSeries({
              color: mainIndicator.ma.cur[0].color,
              lineWidth: 1,
              lineStyle: d.Solid,
              ...chartPriceLineProperty
            }),
            upper: (_P = chartRef.current) == null ? void 0 : _P.addLineSeries({
              color: mainIndicator.ma.cur[1].color,
              lineWidth: 1,
              lineStyle: d.Solid,
              ...chartPriceLineProperty
            }),
            lower: (_Q = chartRef.current) == null ? void 0 : _Q.addLineSeries({
              color: mainIndicator.ma.cur[2].color,
              lineWidth: 1,
              lineStyle: d.Solid,
              ...chartPriceLineProperty
            })
          };
        }
        const result = calBoll(
          propsDataRef.current,
          [
            Number(mainIndicator.boll.cur.mid.value),
            Number(mainIndicator.boll.cur.std.value)
          ],
          priceOffset
        );
        (_R = mainIndicator.boll.curLine) == null ? void 0 : _R.forEach((item, index) => {
          var _a3;
          if (item.select) {
            const _index = Object.keys(_boll)[index];
            _boll[_index] = result[result.length - 1][_index];
            (_a3 = bollRef.current) == null ? void 0 : _a3[_index].setData(
              result.map((_item) => {
                return {
                  value: _item[_index],
                  time: _item.time
                };
              })
            );
          }
        });
      }
      if (mainIndicator.ma.select) {
        if (!smaLineRef.current) {
          const smaLineList = [];
          mainIndicator.ma.cur.forEach((item) => {
            var _a3;
            const value = (_a3 = chartRef.current) == null ? void 0 : _a3.addLineSeries({
              color: item.color,
              lineWidth: 1,
              lineStyle: d.Solid,
              ...chartPriceLineProperty
            });
            smaLineList.push(value);
          });
          smaLineRef.current = smaLineList;
        }
        mainIndicator.ma.cur.forEach((item, index) => {
          var _a3, _b2, _c2;
          if (item.select) {
            const { strip, type } = item;
            let smaData = calculateSMA(propsDataRef.current, Number(strip), type, priceOffset);
            _ma.push((_a3 = smaData[smaData.length - 1]) == null ? void 0 : _a3.value);
            (_c2 = (_b2 = smaLineRef.current) == null ? void 0 : _b2[index]) == null ? void 0 : _c2.setData(smaData);
          }
        });
      }
      if ((_S = subIndicator.vol) == null ? void 0 : _S.select) {
        if (!volumeSeriesRef.current) {
          volumeSeriesRef.current = (_T = chartRef.current) == null ? void 0 : _T.addHistogramSeries({
            color: props.createChart.upColor,
            priceFormat: {
              type: "price"
            },
            priceScaleId: "vol",
            ...chartPriceLineProperty
          });
        }
        volumeSeriesRef.current.setData(
          propsDataRef.current.map((item) => {
            return {
              time: item.time,
              value: item.volume,
              color: getColorOfSetting(item.close, item.open)
            };
          })
        );
      }
      if (subIndicator.macd.select) {
        const fast = subIndicator.macd.cur.fast.value;
        const slow = subIndicator.macd.cur.slow.value;
        const signal = subIndicator.macd.cur.signal.value;
        const newData = calculateMACD(propsDataRef.current, Number(fast), Number(slow), Number(signal), priceOffset);
        _subK.dif = (_U = newData[newData.length - 1]) == null ? void 0 : _U.dif;
        _subK.dea = (_V = newData[newData.length - 1]) == null ? void 0 : _V.dea;
        _subK.macd = (_W = newData[newData.length - 1]) == null ? void 0 : _W.value;
        const difData = newData.map((item) => {
          return {
            time: item.time,
            value: item.dif
          };
        });
        const deaData = newData.map((item) => {
          return {
            time: item.time,
            value: item.dea
          };
        });
        const macdData = newData.map((item) => {
          return {
            time: item == null ? void 0 : item.time,
            value: item == null ? void 0 : item.value,
            color: getColorOfSetting(item == null ? void 0 : item.value, 0)
          };
        });
        const subLineConfig = {
          color: props.createChart.brandColor,
          lineWidth: 1,
          lineStyle: d.Solid,
          priceScaleId: "volume",
          scaleMargins: macdScaleMargins,
          ...chartPriceLineProperty
        };
        if (!difRef.current) {
          difRef.current = (_X = chartRef.current) == null ? void 0 : _X.addLineSeries({
            ...subLineConfig,
            color: "#9660c4"
          });
        }
        if (!deaRef.current) {
          deaRef.current = (_Y = chartRef.current) == null ? void 0 : _Y.addLineSeries({
            ...subLineConfig,
            color: "#84aad5"
          });
        }
        if (!macdVolumeSeriesRef.current) {
          macdVolumeSeriesRef.current = (_Z = chartRef.current) == null ? void 0 : _Z.addHistogramSeries({
            color: props.createChart.upColor,
            priceFormat: {
              type: "price"
            },
            priceScaleId: "volume",
            ...chartPriceLineProperty
          });
        }
        const nameList = [difRef.current, deaRef.current, macdVolumeSeriesRef.current];
        const dataList = [difData, deaData, macdData];
        (__ = subIndicator.macd.curLine) == null ? void 0 : __.forEach((item, index) => {
          if (item.select) {
            nameList[index].setData(dataList[index]);
          }
        });
      }
      if (subIndicator.kdj.select) {
        if (!kdjRef.current) {
          kdjRef.current = {
            k: (_$ = chartRef.current) == null ? void 0 : _$.addLineSeries({
              color: mainIndicator.ma.cur[0].color,
              lineWidth: 1,
              lineStyle: d.Solid,
              priceScaleId: "kdj",
              ...chartPriceLineProperty
            }),
            d: (_aa = chartRef.current) == null ? void 0 : _aa.addLineSeries({
              color: mainIndicator.ma.cur[1].color,
              lineWidth: 1,
              lineStyle: d.Solid,
              priceScaleId: "kdj",
              ...chartPriceLineProperty
            }),
            j: (_ba = chartRef.current) == null ? void 0 : _ba.addLineSeries({
              color: mainIndicator.ma.cur[2].color,
              lineWidth: 1,
              lineStyle: d.Solid,
              priceScaleId: "kdj",
              ...chartPriceLineProperty
            })
          };
        }
        const result = calKdj(
          propsDataRef.current,
          [
            Number(subIndicator.kdj.cur.k.value),
            Number(subIndicator.kdj.cur.d.value),
            Number(subIndicator.kdj.cur.j.value)
          ],
          priceOffset
        );
        (_ca = subIndicator.kdj.curLine) == null ? void 0 : _ca.forEach((item, index) => {
          var _a3, _b2;
          const _index = Object.keys(_kdjK)[index];
          if (item.select) {
            _kdjK[_index] = (_a3 = result[result.length - 1]) == null ? void 0 : _a3[_index];
            (_b2 = kdjRef.current) == null ? void 0 : _b2[_index].setData(
              result.map((_item) => {
                return {
                  value: _item[_index],
                  time: _item.time
                };
              })
            );
          }
        });
      }
      if (subIndicator.rsi.select) {
        if (!rsiRef.current) {
          const rsiList = [];
          subIndicator.rsi.cur.forEach((item) => {
            var _a3;
            rsiList.push(
              (_a3 = chartRef.current) == null ? void 0 : _a3.addLineSeries({
                color: item.color,
                lineWidth: 1,
                lineStyle: d.Solid,
                priceScaleId: "rsi",
                ...chartPriceLineProperty
              })
            );
          });
          rsiRef.current = rsiList;
        }
        const result = calRsi(
          propsDataRef.current,
          [
            Number(subIndicator.rsi.cur[0].value),
            Number(subIndicator.rsi.cur[1].value),
            Number(subIndicator.rsi.cur[2].value)
          ],
          priceOffset
        );
        _rsiK.r = (_da = result[result.length - 1]) == null ? void 0 : _da.r;
        _rsiK.s = (_ea = result[result.length - 1]) == null ? void 0 : _ea.s;
        _rsiK.i = (_fa = result[result.length - 1]) == null ? void 0 : _fa.i;
        subIndicator.rsi.cur.forEach((_item, index) => {
          var _a3, _b2;
          if (_item.select) {
            (_b2 = (_a3 = rsiRef.current) == null ? void 0 : _a3[index]) == null ? void 0 : _b2.setData(
              result.map((item) => {
                return {
                  value: item[Object.keys(_rsiK)[index]],
                  time: item.time
                };
              })
            );
          }
        });
      }
      if (subIndicator.wr.select) {
        if (!wrRef.current) {
          const wrList = [];
          subIndicator.wr.cur.forEach((item) => {
            var _a3;
            wrList.push(
              (_a3 = chartRef.current) == null ? void 0 : _a3.addLineSeries({
                color: item.color,
                lineWidth: 1,
                lineStyle: d.Solid,
                priceScaleId: "wr",
                ...chartPriceLineProperty
              })
            );
          });
          wrRef.current = wrList;
        }
        subIndicator.wr.cur.forEach((_item, index) => {
          var _a3, _b2, _c2;
          const result = calWr(
            propsDataRef.current,
            [Number(subIndicator.wr.cur[index].value)],
            [
              { key: "wr1", title: "wr1" },
              { key: "wr2", title: "wr2" }
            ],
            priceOffset
          );
          _wrK.push((_a3 = result[result.length - 1]) == null ? void 0 : _a3.wr1);
          if (_item.select) {
            (_c2 = (_b2 = wrRef.current) == null ? void 0 : _b2[index]) == null ? void 0 : _c2.setData(
              result.map((item) => {
                return {
                  value: item.wr1,
                  time: item.time
                };
              })
            );
          }
        });
      }
      setMaIndicator(_ma);
      setMainK(_mainK);
      setSubK(_subK);
      setBollK(_boll);
      setKdjK(_kdjK);
      setRsiK(_rsiK);
      setWrK(_wrK);
      setVolume(_volK);
      outOfTimeValue.current = {
        _ma,
        _mainK,
        _subK,
        _boll,
        _kdjK,
        _rsiK,
        _wrK,
        _volK
      };
    }
  }, [mainIndicator, subIndicator, chartRef.current, ordersKlineData, ordersData, props.getDataAndUpdateChart, colors]);
  (0, import_react5.useEffect)(() => {
    var _a2, _b, _c, _d;
    if (candlestickSeriesRef.current) {
      candlestickSeriesRef.current.applyOptions({
        upColor: ((_a2 = props == null ? void 0 : props.createChart) == null ? void 0 : _a2.upColor) || "#26a69a",
        downColor: ((_b = props == null ? void 0 : props.createChart) == null ? void 0 : _b.downColor) || "#ef5350",
        wickUpColor: ((_c = props == null ? void 0 : props.createChart) == null ? void 0 : _c.upColor) || "#26a69a",
        wickDownColor: ((_d = props == null ? void 0 : props.createChart) == null ? void 0 : _d.downColor) || "#ef5350"
      });
      candlestickSeriesRef.current.priceScale().applyOptions({
        scaleMargins: chartScaleMargins
      });
    }
    if (timeLineRef.current) {
      timeLineRef.current.priceScale().applyOptions({
        scaleMargins: chartScaleMargins
      });
    }
    if (smaLineRef.current) {
      smaLineRef.current.forEach((item) => {
        item.priceScale().applyOptions({
          scaleMargins: chartScaleMargins
        });
      });
    }
    if (difRef.current) {
      difRef.current.priceScale().applyOptions({
        scaleMargins: macdScaleMargins
      });
    }
    if (deaRef.current) {
      deaRef.current.priceScale().applyOptions({
        scaleMargins: macdScaleMargins
      });
    }
    if (macdVolumeSeriesRef.current) {
      macdVolumeSeriesRef.current.priceScale().applyOptions({
        scaleMargins: macdScaleMargins
      });
    }
    if (volumeSeriesRef.current) {
      volumeSeriesRef.current.priceScale().applyOptions({
        scaleMargins: volScaleMargins
      });
    }
    if (bollRef.current) {
      bollRef.current.mid.priceScale().applyOptions({
        scaleMargins: chartScaleMargins
      });
      bollRef.current.upper.priceScale().applyOptions({
        scaleMargins: chartScaleMargins
      });
      bollRef.current.lower.priceScale().applyOptions({
        scaleMargins: chartScaleMargins
      });
    }
    if (kdjRef.current) {
      kdjRef.current.k.priceScale().applyOptions({
        scaleMargins: kdjScaleMargins
      });
      kdjRef.current.d.priceScale().applyOptions({
        scaleMargins: kdjScaleMargins
      });
      kdjRef.current.j.priceScale().applyOptions({
        scaleMargins: kdjScaleMargins
      });
    }
    if (rsiRef.current) {
      rsiRef.current.forEach((item) => {
        item.priceScale().applyOptions({
          scaleMargins: rsiScaleMargins
        });
      });
    }
    if (wrRef.current) {
      wrRef.current.forEach((item) => {
        item.priceScale().applyOptions({
          scaleMargins: wrScaleMargins
        });
      });
    }
  }, [heightChange, subIndicator, colors]);
  const [expand, setExpand] = (0, import_react5.useState)({
    mainK: true,
    vol: true,
    ma: true,
    boll: true,
    macd: true,
    kdj: true,
    rsi: true,
    wr: true
  });
  const expandClick = (key) => {
    setExpand({
      ...expand,
      [key]: !expand[key]
    });
  };
  const showOrderDetail = (type, e2) => {
    e2.stopPropagation();
    if (type === "buy") {
      setTableData(curMarkers == null ? void 0 : curMarkers.buyData);
    } else {
      setTableData(curMarkers == null ? void 0 : curMarkers.sellData);
    }
    setModalVisible(true);
  };
  return import_react5.default.createElement(
    k_line_render_default,
    {
      curTime: props.curTime,
      mainIndicator,
      subIndicator,
      createChart: props.createChart,
      locale: props.locale,
      ordersKlineData,
      expandIcon: props.expandIcon,
      expand,
      expandClick,
      mainK,
      maIndicator,
      bollK,
      macdScaleMargins,
      subK,
      volume,
      kdjScaleMargins,
      kdjK,
      rsiScaleMargins,
      rsiK,
      wrScaleMargins,
      containerRef,
      curMaxAndMinPoint,
      curBuyAndSellPoint,
      wrK,
      modalVisible,
      setModalVisible,
      tableData,
      popVisible,
      curMarkers,
      showOrderDetail,
      volScaleMargins,
      coinInfo: props.coinInfo,
      priceOffset,
      chartSettingIcon,
      allChartRef: {
        candlestickSeriesRef: candlestickSeriesRef.current,
        timeLineRef: timeLineRef.current,
        smaLineRef: smaLineRef.current,
        difRef: difRef.current,
        deaRef: deaRef.current,
        macdVolumeSeriesRef: macdVolumeSeriesRef.current,
        volumeSeriesRef: volumeSeriesRef.current,
        bollRef: bollRef.current,
        kdjRef: kdjRef.current,
        rsiRef: rsiRef.current,
        wrRef: wrRef.current
      },
      updateMainIndicator: props.updateMainIndicator,
      updateSubIndicator: props.updateSubIndicator,
      modalRef: props.modalRef,
      optionBuyCallback,
      optionSellCallback,
      optionIcon,
      optionActiveTab,
      countDownComponent,
      tradeRestSecond,
      tradeStatusOverList,
      optionAnimation
    }
  );
}
var k_line_chart_default = (0, import_react5.forwardRef)(KLineChart);

// node_modules/.pnpm/@nbit+chart-web@1.0.0-beta.109/node_modules/@nbit/chart-web/src/components/k-line/tradingview.tsx
var import_react6 = __toESM(require_react());

// node_modules/.pnpm/@nbit+chart-web@1.0.0-beta.109/node_modules/@nbit/chart-web/src/components/k-line/coin-datafeed.ts
var baseMarketStore;
var getKlineHistory;
var datafeedsFun = function(store, method) {
  baseMarketStore = store;
  getKlineHistory = method;
};
var Datafeeds = {
  UDFCompatibleDatafeed: datafeedsFun
};
Datafeeds.UDFCompatibleDatafeed = datafeedsFun;
function getDecimal() {
  let decimal = 2;
  let currentObject = baseMarketStore.getState().currentCoin;
  if (currentObject && currentObject.digit && currentObject.digit.indexOf("#") !== -1) {
    let digit = currentObject.digit.split("#");
    decimal = Number(digit[0]);
  }
  let str = "1";
  if (decimal > 0) {
    for (let i = 1; i <= decimal; i += 1) {
      str += "0";
    }
  }
  return parseInt(str);
}
function defaultConfig() {
  return {
    supports_search: false,
    supports_group_request: false,
    supports_marks: false,
    supports_timescale_marks: false,
    supports_time: true,
    exchanges: [
      {
        value: "",
        name: "All Exchanges",
        desc: ""
      },
      {
        value: "NasdaqNM",
        name: "NasdaqNM",
        desc: "NasdaqNM"
      },
      {
        value: "NYSE",
        name: "NYSE",
        desc: "NYSE"
      },
      {
        value: "NCM",
        name: "NCM",
        desc: "NCM"
      },
      {
        value: "NGM",
        name: "NGM",
        desc: "NGM"
      }
    ],
    symbols_types: [
      {
        name: "All types",
        value: ""
      },
      {
        name: "Stock",
        value: ""
      },
      {
        name: "Index",
        value: ""
      }
    ],
    supported_resolutions: [
      "1",
      "3",
      "5",
      "15",
      "30",
      "60",
      "120",
      "240",
      "360",
      "480",
      "720",
      "1440",
      "4320",
      "10080",
      "43200",
      "129600",
      "259200",
      "518400"
    ]
  };
}
Datafeeds.UDFCompatibleDatafeed.prototype.onReady = function(callback) {
  setTimeout(function() {
    callback(defaultConfig());
  }, 0);
};
Datafeeds.UDFCompatibleDatafeed.prototype.resolveSymbol = function(symbolName, onSymbolResolvedCallback, onResolveErrorCallback) {
  setTimeout(function() {
    onSymbolResolvedCallback({
      "name": symbolName,
      "exchange-traded": "",
      "exchange-listed": "",
      "timezone": "Asia/Shanghai",
      "minmov": 1,
      "minmov2": 0,
      "pointvalue": 1,
      "session": "24x7",
      "has_intraday": true,
      "has_no_volume": true,
      "type": "bitcoin",
      "supported_resolutions": [
        "1",
        "3",
        "5",
        "15",
        "30",
        "60",
        "120",
        "240",
        "360",
        "480",
        "720",
        "1440",
        "4320",
        "10080",
        "43200",
        "129600",
        "259200",
        "518400"
      ],
      "has_weekly_and_monthly": true,
      "has_daily": true,
      "pricescale": getDecimal(),
      "ticker": symbolName,
      "exchange": "",
      "data_status": "streaming"
    });
  }, 0);
};
Datafeeds.UDFCompatibleDatafeed.prototype.getBars = function(symbolInfo, resolution, periodParams, onHistoryCallback, onErrorCallback) {
  const { countBack, firstDataRequest, to } = periodParams;
  if (to < 0) {
    return onHistoryCallback([], { noData: true });
  }
  let symbol = "BTCUSDT";
  if (baseMarketStore.getState().currentCoin.tradeId) {
    symbol = baseMarketStore.getState().currentCoin.symbolName;
  }
  let time = "1m";
  switch (resolution) {
    case "1":
    case "3":
    case "5":
    case "15":
    case "30":
      time = `${resolution}m`;
      break;
    case "60":
      time = `${1}h`;
      break;
    case "120":
      time = `${2}h`;
      break;
    case "240":
      time = `${4}h`;
      break;
    case "360":
      time = `${6}h`;
      break;
    case "480":
      time = `${8}h`;
      break;
    case "720":
      time = `${12}h`;
      break;
    case "1440":
      time = `${1}d`;
      break;
    case "4320":
      time = `${3}d`;
      break;
    case "10080":
      time = `${1}w`;
      break;
    case "43200":
      time = `${1}M`;
      break;
    case "129600":
      time = `${3}M`;
      break;
    case "259200":
      time = `${6}M`;
      break;
    case "518400":
      time = `${1}y`;
      break;
    default:
      time = `${resolution}m`;
  }
  let params = {
    symbol,
    interval: time,
    limit: String(24 * 60),
    endTime: firstDataRequest ? void 0 : to * 1e3
  };
  getKlineHistory(params).then((res) => {
    var _a, _b;
    if (res.isOk) {
      const klineData = [];
      if ((_b = (_a = res.data) == null ? void 0 : _a.list) == null ? void 0 : _b.length) {
        res.data.list.forEach((item) => {
          const barValue = {
            time: Number(item[6]),
            open: Number(item[0]),
            high: Number(item[1]) < Number(item[0]) ? Number(item[0]) : Number(item[1]),
            low: Number(item[2]) > Number(item[3]) ? Number(item[3]) : Number(item[2]),
            close: Number(item[3]),
            volume: Number(item[4]),
            quoteVolume: Number(item[5])
          };
          klineData.push(barValue);
        });
        const _klineData = sortMarketChartData(klineData) || [];
        let meta = {
          noData: !(klineData.length > 0)
        };
        if (_klineData == null ? void 0 : _klineData.length) {
          onHistoryCallback(_klineData);
        }
        if (firstDataRequest) {
          baseMarketStore.getState().updateCoinHistoryKline({
            r: time,
            t: new Date().getTime()
          });
        }
      } else {
        onHistoryCallback([], { noData: true });
      }
    }
  }).catch((err) => {
    console.log("tradingview error", err);
    onHistoryCallback([], { noData: true });
  });
};
Datafeeds.UDFCompatibleDatafeed.prototype.subscribeBars = function(symbolInfo, resolution, onRealtimeCallback, listenerGUID, onResetCacheNeededCallback) {
  baseMarketStore.getState().updateKlineCallback(onRealtimeCallback);
};
Datafeeds.UDFCompatibleDatafeed.prototype.unsubscribeBars = function(listenerGUID) {
  baseMarketStore.getState().updateKlineCallback(null);
};
Datafeeds.UDFCompatibleDatafeed.prototype.getServerTime = function(callback) {
  let timestamp = new Date().getTime();
  callback(timestamp);
};
var coin_datafeed_default = Datafeeds;

// node_modules/.pnpm/@nbit+chart-web@1.0.0-beta.109/node_modules/@nbit/chart-web/src/components/k-line/tradingview.tsx
import "/Users/xiaoyu/Desktop/xiangmu/newbit-web/node_modules/.pnpm/@nbit+chart-web@1.0.0-beta.109/node_modules/@nbit/chart-web/src/components/k-line/index.css";
function Tradingview(props, ref) {
  const { resolution, colors } = props;
  const currentCoinPair = getCurrentQuoteShowCoin(props.currentCoin.sellSymbol, props.currentCoin.buySymbol);
  const [widget, setWidget] = (0, import_react6.useState)(null);
  const widgetRef = (0, import_react6.useRef)(widget);
  const entityIdRef = (0, import_react6.useRef)();
  const kLineCallback = (data) => {
    if (data == null ? void 0 : data.length) {
      props.klineCallback({
        ...data[0],
        time: Number(data[0].time),
        open: Number(data[0].open),
        close: Number(data[0].close),
        volume: Number(data[0].volume),
        quoteVolume: Number(data[0].quoteVolume),
        high: data[0].high < data[0].open ? data[0].open : data[0].high,
        low: data[0].low > data[0].close ? data[0].close : data[0].low
      });
    }
  };
  const subs = {
    biz: props.type === KLineChartType.Quote ? "spot" : "perpetual",
    type: props.type === KLineChartType.Quote ? "kline" : "perpetual_kline",
    base: props.currentCoin.baseSymbolName,
    quote: props.currentCoin.quoteSymbolName,
    contractCode: props.currentCoin.symbolWassName
  };
  (0, import_react6.useEffect)(() => {
    props.ws.unsubscribe({
      subs,
      callback: kLineCallback
    });
  }, [props.currentCoin.symbolName]);
  (0, import_react6.useEffect)(() => {
    if (props.coinHistoryKline.r && props.klineCallback && props.currentChart === "tradingview") {
      props.ws.subscribe({
        subs,
        callback: kLineCallback,
        throttleType: WSThrottleTypeEnum.cover,
        throttleTime: 500
      });
    }
    return () => {
      props.ws.unsubscribe({
        subs,
        callback: kLineCallback
      });
    };
  }, [props.coinHistoryKline, props.klineCallback, props.currentChart]);
  let styleColor = props.createChart.bgColor;
  let wgColor = props.createChart.bgColor;
  let upColor = props.createChart.upColor;
  let downColor = props.createChart.downColor;
  let textColor = props.createChart.textColor;
  (0, import_react6.useEffect)(() => {
    var _a, _b;
    const _widget = new o({
      width: "100%",
      height: "100%",
      symbol: currentCoinPair,
      interval: tradingviewTimeMap[`${props.curTime.value}${props.curTime.unit}`],
      container: "tv_chart_container",
      datafeed: new coin_datafeed_default.UDFCompatibleDatafeed(props.baseMarketStore, props.getKlineHistory),
      library_path: `${location.origin}/charting_library/`,
      locale: LanguageMapToChartMap[props.locale] || "en",
      disabled_features: [
        "header_widget",
        "display_market_status",
        "pane_context_menu",
        "timeframes_toolbar",
        "go_to_date",
        "header_indicators",
        "header_settings",
        "use_localstorage_for_settings",
        "volume_force_overlay"
      ],
      enabled_features: ["study_templates"],
      charts_storage_api_version: "1.1",
      client_id: "tradingview.com",
      user_id: "public_id",
      theme: ThemeChartMap[props.theme] || "Light",
      custom_css_url: "./css/style.css",
      time_scale: {
        min_bar_spacing: 5
      },
      timezone: "Asia/Shanghai",
      loading_screen: { backgroundColor: styleColor, foregroundColor: styleColor },
      overrides: {
        "paneProperties.background": styleColor,
        "paneProperties.backgroundGradientStartColor": styleColor,
        "paneProperties.backgroundGradientEndColor": styleColor,
        "mainSeriesProperties.style": 1,
        "mainSeriesProperties.candleStyle.upColor": upColor,
        "mainSeriesProperties.candleStyle.downColor": downColor,
        "mainSeriesProperties.candleStyle.drawWick": true,
        "mainSeriesProperties.candleStyle.drawBorder": true,
        "mainSeriesProperties.candleStyle.borderUpColor": upColor,
        "mainSeriesProperties.candleStyle.borderDownColor": downColor,
        "mainSeriesProperties.candleStyle.wickUpColor": upColor,
        "mainSeriesProperties.candleStyle.wickDownColor": downColor,
        "paneProperties.bottomMargin": 5
      },
      studies_overrides: {
        "volume.volume.color.1": props.createChart.upColor,
        "volume.volume.color.0": props.createChart.downColor,
        "volume.volume.transparency": 50
      },
      time_frames: []
    });
    setWidget(_widget);
    widgetRef.current = _widget;
    (_b = (_a = widgetRef.current).onChartReady) == null ? void 0 : _b.call(_a, () => {
      widgetRef.current.chart().createStudy("Moving Average", false, false, [5, "close", 0], { "plot.color.0": "#7F4E86" });
      widgetRef.current.chart().createStudy("Moving Average", false, false, [10, "close", 0], { "plot.color.0": "#ECC581" });
      widgetRef.current.chart().createStudy("Moving Average", false, false, [20, "close", 0], { "plot.color.0": "#D057E4" });
      widgetRef.current.chart().createStudy("Moving Average", false, false, [60, "close", 0], { "plot.color.0": "#6F92EE" });
      entityIdRef.current = widgetRef.current.chart().createStudy("Volume", false, false);
    });
  }, []);
  const applyOverrides = () => {
    widgetRef.current.applyOverrides({
      "paneProperties.background": styleColor,
      "paneProperties.backgroundGradientStartColor": styleColor,
      "paneProperties.backgroundGradientEndColor": styleColor,
      "mainSeriesProperties.style": 1,
      "mainSeriesProperties.candleStyle.upColor": upColor,
      "mainSeriesProperties.candleStyle.downColor": downColor,
      "mainSeriesProperties.candleStyle.drawWick": true,
      "mainSeriesProperties.candleStyle.drawBorder": true,
      "mainSeriesProperties.candleStyle.borderUpColor": upColor,
      "mainSeriesProperties.candleStyle.borderDownColor": downColor,
      "mainSeriesProperties.candleStyle.wickUpColor": upColor,
      "mainSeriesProperties.candleStyle.wickDownColor": downColor,
      "paneProperties.bottomMargin": 5
    });
  };
  (0, import_react6.useEffect)(() => {
    var _a, _b;
    if (widgetRef.current) {
      (_b = (_a = widgetRef.current).onChartReady) == null ? void 0 : _b.call(_a, () => {
        if (props.curTime.unit === "time") {
          widgetRef.current.applyOverrides({
            "mainSeriesProperties.style": 2,
            "mainSeriesProperties.lineStyle.color": upColor
          });
        } else {
          widgetRef.current.applyOverrides({
            "mainSeriesProperties.style": 1
          });
        }
      });
    }
  }, [props.curTime]);
  (0, import_react6.useEffect)(() => {
    var _a, _b;
    let timer;
    if (widgetRef.current) {
      (_b = (_a = widgetRef.current).onChartReady) == null ? void 0 : _b.call(_a, () => {
        widgetRef.current.changeTheme(ThemeChartMap[props.theme]);
        timer = setTimeout(() => {
          applyOverrides();
        });
      });
    }
    return () => {
      clearTimeout(timer);
    };
  }, [props.theme, colors]);
  (0, import_react6.useEffect)(() => {
    var _a, _b;
    (_b = (_a = widgetRef.current) == null ? void 0 : _a.onChartReady) == null ? void 0 : _b.call(_a, () => {
      entityIdRef.current.then((res) => {
        widgetRef.current.activeChart().removeEntity(res);
        entityIdRef.current = widgetRef.current.chart().createStudy("Volume", false, false);
        widgetRef.current.applyStudiesOverrides({
          "volume.volume.color.1": props.createChart.upColor,
          "volume.volume.color.0": props.createChart.downColor,
          "volume.volume.transparency": 50
        });
      });
    });
  }, [colors]);
  (0, import_react6.useEffect)(() => {
    var _a, _b;
    let timer;
    if (widgetRef.current && resolution && currentCoinPair) {
      (_b = (_a = widgetRef.current).onChartReady) == null ? void 0 : _b.call(_a, () => {
        widgetRef.current.setSymbol(currentCoinPair, resolution, () => null);
        timer = setTimeout(() => {
          applyOverrides();
        });
      });
    }
    return () => {
      clearTimeout(timer);
    };
  }, [resolution]);
  (0, import_react6.useImperativeHandle)(ref, () => ({
    chartProperties: () => {
      var _a, _b;
      if (widgetRef.current) {
        (_b = (_a = widgetRef.current).onChartReady) == null ? void 0 : _b.call(_a, () => {
          var _a2, _b2, _c, _d;
          (_d = (_c = (_b2 = (_a2 = widgetRef.current).chart) == null ? void 0 : _b2.call(_a2)) == null ? void 0 : _c.executeActionById) == null ? void 0 : _d.call(_c, "chartProperties");
          return true;
        });
      }
      return false;
    },
    insertIndicator: () => {
      var _a, _b;
      if (widgetRef.current) {
        (_b = (_a = widgetRef.current).onChartReady) == null ? void 0 : _b.call(_a, () => {
          var _a2, _b2, _c, _d;
          (_d = (_c = (_b2 = (_a2 = widgetRef.current).chart) == null ? void 0 : _b2.call(_a2)) == null ? void 0 : _c.executeActionById) == null ? void 0 : _d.call(_c, "insertIndicator");
          return true;
        });
      }
      return false;
    }
  }));
  return import_react6.default.createElement("div", { style: { background: styleColor }, className: "rel-chart", id: "tv_chart_container" });
}
var tradingview_default = (0, import_react6.forwardRef)(Tradingview);

// node_modules/.pnpm/@nbit+chart-web@1.0.0-beta.109/node_modules/@nbit/chart-web/src/components/series/index.tsx
var import_react8 = __toESM(require_react());
import "/Users/xiaoyu/Desktop/xiangmu/newbit-web/node_modules/.pnpm/@nbit+chart-web@1.0.0-beta.109/node_modules/@nbit/chart-web/src/components/series/index.css";

// node_modules/.pnpm/@nbit+chart-web@1.0.0-beta.109/node_modules/@nbit/chart-web/src/components/series/series-chart.tsx
var import_dayjs2 = __toESM(require_dayjs_min());
var import_react7 = __toESM(require_react());
function SeriesChart(props) {
  const lineRef = (0, import_react7.useRef)(null);
  const chartRef = (0, import_react7.useRef)(null);
  const chartLineRef = (0, import_react7.useRef)();
  const { priceOffset, colors } = props;
  (0, import_react7.useEffect)(() => {
    if (chartRef.current) {
      chartRef.current.setData(props.data);
    }
  }, [props.data]);
  const colorRef = (0, import_react7.useRef)(props.createChart);
  (0, import_react7.useEffect)(() => {
    colorRef.current = props.createChart;
  }, [props.createChart]);
  const chartPriceLineProperty = {
    crosshairMarkerVisible: false,
    baseLineVisible: false,
    priceLineVisible: false,
    lastValueVisible: false
  };
  const gridColor = props.theme === ThemeEnum.light ? "rgba(0,0,0,0.02)" : "rgba(255,255,255,0.02)";
  const chartPropertySetting = {
    layout: props.chartLayoutOptions,
    localization: {
      timeFormatter: (item) => {
        return (0, import_dayjs2.default)(item).format("YYYY/MM/DD HH:mm");
      },
      priceFormatter: (item) => {
        return `${item.toFixed(3)}%`;
      }
    },
    crosshair: {
      mode: ot.Normal
    },
    timeScale: {
      barSpacing: 40,
      tickMarkFormatter: (time) => {
        return (0, import_dayjs2.default)(time).format("MM-DD");
      },
      borderColor: gridColor,
      lockVisibleTimeRangeOnResize: true
    },
    rightPriceScale: {
      borderColor: gridColor,
      autoScale: true
    },
    grid: {
      vertLines: {
        color: gridColor
      },
      horzLines: {
        color: gridColor
      }
    }
  };
  (0, import_react7.useEffect)(() => {
    var _a;
    (_a = chartLineRef.current) == null ? void 0 : _a.applyOptions({
      ...chartPropertySetting,
      layout: {
        ...props.chartLayoutOptions
      },
      grid: {
        vertLines: {
          color: gridColor
        },
        horzLines: {
          color: gridColor
        }
      },
      rightPriceScale: {
        ...chartPropertySetting.rightPriceScale
      }
    });
  }, [props.chartLayoutOptions.background, props.chartLayoutOptions.textColor]);
  const floatTooltip = (0, import_react7.useRef)(null);
  (0, import_react7.useEffect)(() => {
    if (floatTooltip.current) {
      floatTooltip.current.style.background = props.createChart.cardBgColor;
      floatTooltip.current.style.color = props.createChart.textColor01;
    }
  }, [props.createChart.cardBgColor, props.createChart.textColor]);
  (0, import_react7.useEffect)(() => {
    var _a, _b;
    chartLineRef.current = Pe(document.getElementById("chart"), chartPropertySetting);
    chartRef.current = chartLineRef.current.addLineSeries({
      color: (_a = props == null ? void 0 : props.createChart) == null ? void 0 : _a.brandColor,
      lineWidth: 1,
      lineStyle: d.Solid,
      lineType: 2,
      ...chartPriceLineProperty
    });
    chartRef.current.setData(props.data);
    chartLineRef.current.timeScale().fitContent();
    let toolTipWidth = 100;
    let toolTipHeight = 40;
    let toolTipMargin = 15;
    let toolTip = document.createElement("div");
    floatTooltip.current = toolTip;
    toolTip.className = "series-floating-tooltip";
    toolTip.style.color = colorRef.current.textColor01;
    toolTip.style.background = colorRef.current.cardBgColor03;
    (_b = document.getElementById("chart")) == null ? void 0 : _b.appendChild(toolTip);
    chartLineRef.current.subscribeCrosshairMove(function(param) {
      var _a2, _b2;
      if (!param.time || param.point.x < 0 || param.point.x > lineRef.current.clientWidth || param.point.y < 0 || param.point.y > lineRef.current.clientHeight) {
        toolTip.style.display = "none";
        return;
      }
      let dateStr = (0, import_dayjs2.default)(param.time).format("MM-DD HH:MM");
      toolTip.style.display = "block";
      let price = (_b2 = (_a2 = param.seriesData) == null ? void 0 : _a2.get(chartRef.current)) == null ? void 0 : _b2.value;
      toolTip.innerHTML = `<div>${dateStr}</div>${'<div style="marginTop: 4px">'}${price}%</div>`;
      let y2 = param.point.y;
      let left = param.point.x + toolTipMargin;
      if (left > lineRef.current.clientWidth - toolTipWidth) {
        left = param.point.x - toolTipMargin - toolTipWidth;
      }
      let top = 20;
      toolTip.style.left = `${left}px`;
      toolTip.style.top = `${top}px`;
    });
  }, []);
  return import_react7.default.createElement("div", { ref: lineRef, className: "chart", id: "chart" });
}
SeriesChart.displayName = "Series";
var series_chart_default = SeriesChart;

// node_modules/.pnpm/@nbit+chart-web@1.0.0-beta.109/node_modules/@nbit/chart-web/src/components/series/index.tsx
function Series(props) {
  const {
    bgColor,
    textColor,
    textColor01,
    brandColor,
    upColor,
    downColor,
    upLightColor,
    downLightColor,
    cardBgColor,
    cardBgColor03
  } = getTheme();
  const [chartLayoutOptions, setChartLayoutOptions] = (0, import_react8.useState)({
    background: {
      color: bgColor
    },
    textColor
  });
  const { priceOffset } = props.offset;
  (0, import_react8.useEffect)(() => {
    const _bgColor = getTheme().bgColor;
    const _textColor = getTheme().textColor;
    setChartLayoutOptions({
      background: {
        color: _bgColor
      },
      textColor: _textColor
    });
  }, [props.theme]);
  return import_react8.default.createElement("div", { className: "series-chart-wrap" }, import_react8.default.createElement("div", { className: "chart-wrap" }, import_react8.default.createElement(
    series_chart_default,
    {
      chartLayoutOptions,
      data: props.seriesData,
      theme: props.theme,
      priceOffset,
      colors: props.colors,
      createChart: {
        brandColor,
        upColor,
        downColor,
        upLightColor,
        downLightColor,
        bgColor,
        textColor,
        cardBgColor,
        textColor01,
        cardBgColor03
      }
    }
  )));
}
var series_default = (0, import_react8.memo)(Series);

// node_modules/.pnpm/@nbit+chart-web@1.0.0-beta.109/node_modules/@nbit/chart-web/src/components/dept/index.tsx
var import_react11 = __toESM(require_react());
import "/Users/xiaoyu/Desktop/xiangmu/newbit-web/node_modules/.pnpm/@nbit+chart-web@1.0.0-beta.109/node_modules/@nbit/chart-web/src/components/dept/index.css";

// node_modules/.pnpm/@nbit+chart-web@1.0.0-beta.109/node_modules/@nbit/chart-web/src/components/dept/dept-chart.tsx
var import_react9 = __toESM(require_react());
function DeptChart(props) {
  const deptRef = (0, import_react9.useRef)(null);
  const chartRef = (0, import_react9.useRef)(null);
  (0, import_react9.useEffect)(() => {
    var _a, _b;
    const chart = Pe(document.getElementById("chart"), {
      layout: props.chartLayoutOptions,
      timeScale: {
        visible: false
      },
      rightPriceScale: {
        visible: false
      },
      crosshair: {
        horzLine: {
          visible: false,
          labelVisible: false
        },
        vertLine: {
          visible: false,
          labelVisible: false
        }
      },
      grid: {
        vertLines: {
          visible: false
        },
        horzLines: {
          visible: false
        }
      }
    });
    const front = ((_a = props.data[props.data.length - 1]) == null ? void 0 : _a.value) || 0;
    const end = ((_b = props.data[props.data.length - 2]) == null ? void 0 : _b.value) || 0;
    const isUp = front - end > 0;
    chartRef.current = chart.addAreaSeries({
      lineColor: isUp ? props.createChart.upColor : props.createChart.downColor,
      topColor: isUp ? props.createChart.upColor : props.createChart.downColor,
      bottomColor: isUp ? props.createChart.upLightColor : props.createChart.downLightColor,
      crosshairMarkerVisible: false,
      priceLineVisible: false
    });
    chartRef.current.setData(props.data);
    chart.timeScale().fitContent();
  }, []);
  return import_react9.default.createElement("div", { ref: deptRef, className: "chart", id: "chart" });
}
DeptChart.displayName = "deptChart";
var dept_chart_default = DeptChart;

// node_modules/.pnpm/@nbit+chart-web@1.0.0-beta.109/node_modules/@nbit/chart-web/src/components/dept/dept-real-chart.tsx
var import_react10 = __toESM(require_react());
function DeptRealChart(props) {
  var _a;
  const { priceOffset, colors } = props;
  const leftDeptRef = (0, import_react10.useRef)(null);
  const centerDeptRef = (0, import_react10.useRef)(null);
  const rightDeptRef = (0, import_react10.useRef)(null);
  const deptRef = (0, import_react10.useRef)(null);
  const chartRef = (0, import_react10.useRef)(null);
  const floatTooltip = (0, import_react10.useRef)(null);
  const gridColor = props.theme === ThemeEnum.light ? "rgba(0,0,0,0.02)" : "rgba(255,255,255,0.02)";
  const leftDataRef = (0, import_react10.useRef)([]);
  const rightDataRef = (0, import_react10.useRef)([]);
  const [centerVerLine, setCenterVerLine] = (0, import_react10.useState)({
    x: 0
  });
  const colorRef = (0, import_react10.useRef)(props.createChart);
  (0, import_react10.useEffect)(() => {
    colorRef.current = props.createChart;
  }, [props.createChart]);
  const chartPriceLineProperty = {
    crosshairMarkerVisible: false,
    baseLineVisible: false,
    priceLineVisible: false,
    lastValueVisible: false
  };
  const chartPropertySetting = {
    layout: props.chartLayoutOptions,
    localization: {
      timeFormatter: (item) => {
        return item;
      }
    },
    timeScale: {
      borderColor: gridColor,
      barSpacing: 6,
      tickMarkFormatter: (time) => {
        return time.toFixed(priceOffset);
      }
    },
    rightPriceScale: {
      borderColor: gridColor
    }
  };
  (0, import_react10.useEffect)(() => {
    var _a2;
    (_a2 = chartRef.current) == null ? void 0 : _a2.applyOptions({
      layout: props.chartLayoutOptions,
      grid: {
        vertLines: {
          color: gridColor
        },
        horzLines: {
          color: gridColor
        }
      }
    });
  }, [props.chartLayoutOptions.background, props.chartLayoutOptions.textColor]);
  (0, import_react10.useEffect)(() => {
    if (floatTooltip.current) {
      floatTooltip.current.style.background = props.createChart.cardBgColor03;
      floatTooltip.current.style.color = props.createChart.textColor01;
    }
  }, [props.createChart.cardBgColor03, props.createChart.textColor01]);
  const setVerLineChart = () => {
    var _a2, _b;
    if (!((_a2 = leftDataRef.current) == null ? void 0 : _a2.length) && !((_b = rightDataRef.current) == null ? void 0 : _b.length)) {
      return;
    }
    requestAnimationFrame(() => {
      var _a3, _b2, _c, _d;
      const verPoint = {
        x: 0
      };
      const leftX = ((_b2 = chartRef.current) == null ? void 0 : _b2.timeScale().timeToCoordinate((_a3 = leftDataRef.current[leftDataRef.current.length - 1]) == null ? void 0 : _a3.time)) || 0;
      const rightX = ((_d = chartRef.current) == null ? void 0 : _d.timeScale().timeToCoordinate((_c = rightDataRef.current[0]) == null ? void 0 : _c.time)) || 0;
      verPoint.x = leftX + (rightX - leftX) / 2;
      setCenterVerLine(verPoint);
    });
  };
  const dealData = (data) => {
    var _a2, _b, _c;
    const leftData = [];
    const rightData = [];
    data.forEach((item) => {
      if (item.direction === "buy" /* Buy */) {
        leftData.push(item);
      }
      if (item.direction === "sell" /* Sell */) {
        rightData.push(item);
      }
    });
    (_a2 = leftDeptRef.current) == null ? void 0 : _a2.setData(leftData);
    (_b = rightDeptRef.current) == null ? void 0 : _b.setData(rightData);
    leftDataRef.current = leftData;
    rightDataRef.current = rightData;
    setVerLineChart();
    (_c = chartRef.current) == null ? void 0 : _c.timeScale().fitContent();
  };
  (0, import_react10.useEffect)(() => {
    var _a2;
    if (!((_a2 = props.data) == null ? void 0 : _a2.length) || !leftDeptRef.current || !rightDeptRef.current || !chartRef.current) {
      return;
    }
    dealData(props.data);
  }, [props.data]);
  (0, import_react10.useEffect)(() => {
    var _a2;
    chartRef.current = Pe(document.getElementById("chart"), chartPropertySetting);
    leftDeptRef.current = chartRef.current.addAreaSeries({
      lineColor: props.createChart.upColor,
      topColor: "rgba(80, 177, 108, 0.35)",
      bottomColor: "rgba(80, 177, 108, 0.05)",
      lineWidth: 1,
      ...chartPriceLineProperty
    });
    centerDeptRef.current = chartRef.current.addLineSeries({
      color: "#ff0000",
      lineWidth: 1,
      lineStyle: d.Solid,
      lineType: 2,
      ...chartPriceLineProperty
    });
    rightDeptRef.current = chartRef.current.addAreaSeries({
      lineColor: props.createChart.downColor,
      topColor: "rgba(233, 90, 92, 0.35)",
      bottomColor: "rgba(233, 90, 92, 0.05)",
      lineWidth: 1,
      ...chartPriceLineProperty
    });
    let toolTipWidth = 100;
    let toolTipHeight = 80;
    let toolTipMargin = 15;
    let toolTip = document.createElement("div");
    floatTooltip.current = toolTip;
    toolTip.className = `dept-floating-tooltip`;
    toolTip.style.color = colorRef.current.textColor01;
    toolTip.style.background = colorRef.current.cardBgColor03;
    (_a2 = document.getElementById("chart")) == null ? void 0 : _a2.appendChild(toolTip);
    const subscribeTimeChange = (newVisibleTimeRange) => {
      var _a3, _b;
      if ((_b = (_a3 = chartRef.current) == null ? void 0 : _a3.timeScale().getVisibleRange()) == null ? void 0 : _b.from) {
        setVerLineChart();
      }
    };
    chartRef.current.timeScale().subscribeVisibleTimeRangeChange(subscribeTimeChange);
    chartRef.current.subscribeCrosshairMove(function(param) {
      var _a3, _b, _c, _d, _e2, _f, _g, _h, _i2, _j, _k, _l, _m;
      if (!param.time || param.point.x < 0 || param.point.x > (((_a3 = deptRef == null ? void 0 : deptRef.current) == null ? void 0 : _a3.clientWidth) || 0) || param.point.y < 0 || param.point.y > (((_b = deptRef == null ? void 0 : deptRef.current) == null ? void 0 : _b.clientHeight) || 0)) {
        toolTip.style.display = "none";
        return;
      }
      let dateStr = param.time;
      toolTip.style.display = "block";
      toolTip.style.color = colorRef.current.textColor01;
      let leftCount = (_d = (_c = param.seriesData) == null ? void 0 : _c.get(leftDeptRef.current)) == null ? void 0 : _d.value;
      let rightCount = (_f = (_e2 = param.seriesData) == null ? void 0 : _e2.get(rightDeptRef.current)) == null ? void 0 : _f.value;
      let chgTemp = 0;
      let chg = `${chgTemp.toFixed(priceOffset || 2)}%`;
      let dir = dateStr >= ((_h = (_g = rightDataRef.current) == null ? void 0 : _g[0]) == null ? void 0 : _h.value) ? "sell" /* Sell */ : "buy" /* Buy */;
      let symbol = dateStr >= ((_j = (_i2 = rightDataRef.current) == null ? void 0 : _i2[0]) == null ? void 0 : _j.value) ? "+" : "-";
      const newData = (_k = leftDataRef.current) == null ? void 0 : _k.concat(rightDataRef.current || []);
      newData == null ? void 0 : newData.forEach((item) => {
        symbol = item.direction === "buy" /* Buy */ ? "-" : "+";
        if (item.time === dateStr) {
          chg = `${symbol}${item.chg.toFixed(priceOffset || 2)}%`;
          dir = item.direction;
        }
      });
      toolTip.innerHTML = `<div style="display: flex; justify-content: space-between; min-width: 120px;"><span>\u4EF7\u5DEE\u5E45\u5EA6</span><span style="color: ${dir === "buy" /* Buy */ ? colorRef.current.upColor : colorRef.current.downColor}">${chg}</span></div><div style="display: flex; justify-content: space-between; min-width: 120px; margin-top: 16px; color: ${colorRef.current.textColor01}"><span>\u59D4\u6258\u4EF7\u683C</span><span>${dateStr}</span></div><div style="display: flex; justify-content: space-between; min-width: 120px; margin-top: 16px; color: ${colorRef.current.textColor01}"><span>\u7D2F\u8BA1\u6302\u5355</span><span>${leftCount || rightCount}</span></div>`;
      let y2 = param.point.y;
      let left = param.point.x + toolTipMargin;
      if (left > (((_l = deptRef == null ? void 0 : deptRef.current) == null ? void 0 : _l.clientWidth) || 0) - toolTipWidth) {
        left = param.point.x - toolTipMargin - toolTipWidth;
      }
      let top = y2 + toolTipMargin;
      if (top > (((_m = deptRef == null ? void 0 : deptRef.current) == null ? void 0 : _m.clientHeight) || 0) - toolTipHeight) {
        top = y2 - toolTipHeight - toolTipMargin;
      }
      toolTip.style.left = `${left}px`;
      toolTip.style.top = `${top}px`;
    });
  }, []);
  (0, import_react10.useEffect)(() => {
    const handleResize = () => {
      var _a2, _b, _c;
      (_c = chartRef.current) == null ? void 0 : _c.applyOptions({
        width: (_a2 = deptRef.current) == null ? void 0 : _a2.clientWidth,
        height: (_b = deptRef.current) == null ? void 0 : _b.clientHeight
      });
    };
    window.addEventListener("resize", handleResize);
    return () => {
      window.removeEventListener("resize", handleResize);
    };
  }, []);
  (0, import_react10.useEffect)(() => {
    if (leftDeptRef.current && rightDeptRef.current) {
      if (colors === 1 /* greenUpRedDown */) {
        leftDeptRef.current.applyOptions({
          lineColor: props.createChart.upColor,
          topColor: "rgba(80, 177, 108, 0.35)",
          bottomColor: "rgba(80, 177, 108, 0.05)"
        });
        rightDeptRef.current.applyOptions({
          lineColor: props.createChart.downColor,
          topColor: "rgba(233, 90, 92, 0.35)",
          bottomColor: "rgba(233, 90, 92, 0.05)"
        });
      } else {
        leftDeptRef.current.applyOptions({
          lineColor: props.createChart.upColor,
          topColor: "rgba(233, 90, 92, 0.35)",
          bottomColor: "rgba(233, 90, 92, 0.05)"
        });
        rightDeptRef.current.applyOptions({
          lineColor: props.createChart.downColor,
          topColor: "rgba(80, 177, 108, 0.35)",
          bottomColor: "rgba(80, 177, 108, 0.05)"
        });
      }
    }
  }, [colors]);
  return import_react10.default.createElement("div", { ref: deptRef, className: "chart", id: "chart" }, import_react10.default.createElement(
    "div",
    {
      className: "center-ver-line",
      style: {
        width: "1px",
        height: (((_a = deptRef.current) == null ? void 0 : _a.clientHeight) || 0) - 26,
        top: 0,
        left: centerVerLine.x,
        background: props.chartLayoutOptions.textColor,
        opacity: 0.5
      }
    }
  ));
}
DeptRealChart.displayName = "deptChart";
var dept_real_chart_default = DeptRealChart;

// node_modules/.pnpm/@nbit+chart-web@1.0.0-beta.109/node_modules/@nbit/chart-web/src/components/dept/index.tsx
function Dept(props) {
  const {
    bgColor,
    textColor,
    textColor01,
    cardBgColor03,
    brandColor,
    upColor,
    downColor,
    upLightColor,
    downLightColor,
    cardBgColor
  } = getTheme();
  const [chartLayoutOptions, setChartLayoutOptions] = (0, import_react11.useState)({
    background: {
      color: bgColor
    },
    textColor
  });
  (0, import_react11.useEffect)(() => {
    const _bgColor = getTheme().bgColor;
    const _textColor = getTheme().textColor;
    setChartLayoutOptions({
      background: {
        color: _bgColor
      },
      textColor: _textColor
    });
  }, [props.theme]);
  const { priceOffset } = props.offset;
  const { colors, xCoordinateData } = props;
  return import_react11.default.createElement("div", { className: "dept-chart-wrap" }, import_react11.default.createElement("div", { className: "dept-chart" }, props.type === DeptChartSpecieEnum.Dept ? import_react11.default.createElement(
    dept_chart_default,
    {
      chartLayoutOptions,
      data: props.deptData,
      createChart: { brandColor, upColor, downColor, upLightColor, downLightColor }
    }
  ) : import_react11.default.createElement(
    dept_real_chart_default,
    {
      chartLayoutOptions,
      data: props.deptData,
      theme: props.theme,
      priceOffset,
      createChart: {
        brandColor,
        upColor,
        downColor,
        upLightColor,
        downLightColor,
        bgColor,
        textColor,
        cardBgColor,
        textColor01,
        cardBgColor03
      },
      colors
    }
  )));
}
var dept_default = (0, import_react11.memo)(Dept);

// node_modules/.pnpm/@nbit+chart-web@1.0.0-beta.109/node_modules/@nbit/chart-web/src/index.ts
var src_default = series_default;
export {
  dept_default as Dept,
  k_line_chart_default as KLineChart,
  series_default as Series,
  tradingview_default as TradingView,
  src_default as default
};
/*!
	Copyright (c) 2018 Jed Watson.
	Licensed under the MIT License (MIT), see
	http://jedwatson.github.io/classnames
*/
/*!
 * @license
 * TradingView Lightweight Charts™ v0.0.11-dev+202310111213
 * Copyright (c) 2023 TradingView, Inc.
 * Licensed under Apache License 2.0 https://www.apache.org/licenses/LICENSE-2.0
 */
//# sourceMappingURL=@nbit_chart-web.js.map
