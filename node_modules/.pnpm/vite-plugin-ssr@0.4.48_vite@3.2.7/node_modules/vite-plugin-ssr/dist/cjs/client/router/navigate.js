"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.defineNavigate = exports.navigate = void 0;
const utils_1 = require("./utils");
const globalObject = (0, utils_1.getGlobalObject)('navigate.ts', {});
/** Programmatically navigate to a new page, see https://vite-plugin-ssr.com/navigate */
async function navigate(
/** URL of the page to navigate to */
url, { 
/** Don't scroll to the top of the page; keep scroll position where it is instead. */
keepScrollPosition = false, 
/**  Don't create a new entry in the browser's history, instead let the new URL replace the current URL. (This effectively removes the current URL from the browser history). */
overwriteLastHistoryEntry = false } = {}) {
    (0, utils_1.assertUsage)((0, utils_1.isBrowser)(), '[`navigate(url)`] The `navigate(url)` function is only callable in the browser but you are calling it in Node.js.');
    (0, utils_1.assertUsage)(globalObject.navigate, 'navigate() is only available when using Client Routing, see https://vite-plugin-ssr.com/navigate');
    (0, utils_1.assertUsage)(url, '[navigate(url)] Missing argument `url`.');
    (0, utils_1.assertUsage)(typeof url === 'string', '[navigate(url)] Argument `url` should be a string (but we got `typeof url === "' + typeof url + '"`.');
    (0, utils_1.assertUsage)(typeof keepScrollPosition === 'boolean', '[navigate(url, { keepScrollPosition })] Argument `keepScrollPosition` should be a boolean (but we got `typeof keepScrollPosition === "' +
        typeof keepScrollPosition +
        '"`.');
    (0, utils_1.assertUsage)(typeof overwriteLastHistoryEntry === 'boolean', '[navigate(url, { overwriteLastHistoryEntry })] Argument `overwriteLastHistoryEntry` should be a boolean (but we got `typeof keepScrollPosition === "' +
        typeof overwriteLastHistoryEntry +
        '"`.');
    (0, utils_1.assertUsage)(url.startsWith('/'), '[navigate(url)] Argument `url` should start with a leading `/`.');
    await globalObject.navigate(url, { keepScrollPosition, overwriteLastHistoryEntry });
}
exports.navigate = navigate;
function defineNavigate(navigate_) {
    globalObject.navigate = navigate_;
}
exports.defineNavigate = defineNavigate;
