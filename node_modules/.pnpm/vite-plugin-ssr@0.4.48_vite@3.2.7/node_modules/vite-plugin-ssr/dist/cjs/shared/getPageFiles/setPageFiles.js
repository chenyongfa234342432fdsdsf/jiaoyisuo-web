"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getPageFilesAll = exports.setPageFilesAsync = exports.setPageFiles = void 0;
const utils_1 = require("../utils");
const determinePageId_1 = require("../determinePageId");
const parseGlobResults_1 = require("./parseGlobResults");
const pageFiles = (globalThis.__vite_plugin_ssr__pageFiles = globalThis.__vite_plugin_ssr__pageFiles || {
    pageFilesAll: undefined,
    pageFilesGetter: undefined
});
function setPageFiles(pageFilesExports) {
    pageFiles.pageFilesAll = (0, parseGlobResults_1.parseGlobResults)(pageFilesExports);
}
exports.setPageFiles = setPageFiles;
function setPageFilesAsync(getPageFilesExports) {
    pageFiles.pageFilesGetter = async () => {
        setPageFiles(await getPageFilesExports());
    };
}
exports.setPageFilesAsync = setPageFilesAsync;
async function getPageFilesAll(isClientSide, isProduction) {
    if (isClientSide) {
        (0, utils_1.assert)(!pageFiles.pageFilesGetter);
        (0, utils_1.assert)(isProduction === undefined);
    }
    else {
        (0, utils_1.assert)(pageFiles.pageFilesGetter);
        (0, utils_1.assert)(typeof isProduction === 'boolean');
        if (!pageFiles.pageFilesAll ||
            // We reload all glob imports in dev to make auto-reload work
            !isProduction) {
            await pageFiles.pageFilesGetter();
        }
    }
    (0, utils_1.assert)(pageFiles.pageFilesAll);
    const pageFilesAll = pageFiles.pageFilesAll;
    const allPageIds = getAllPageIds(pageFilesAll);
    return { pageFilesAll, allPageIds };
}
exports.getPageFilesAll = getPageFilesAll;
function getAllPageIds(allPageFiles) {
    const fileIds = allPageFiles
        .filter(({ isDefaultPageFile }) => !isDefaultPageFile)
        .map(({ filePath }) => filePath)
        .map(determinePageId_1.determinePageId);
    const allPageIds = (0, utils_1.unique)(fileIds);
    return allPageIds;
}
