import { EClientType } from './MsgServiceInterface';
export interface EventServiceInterface {
    /**
     * @Multi_Lang_Tag
     * @locale cn
     * 发布某事件
     * @locale
     *
     * @locale en
     * Publish an event
     * @locale
     */
    publishEvent(options: PublishEventOptions): Promise<PublishEventResult>;
    /**
     * @Multi_Lang_Tag
     * @locale cn
     * 订阅某事件
     * @locale
     *
     * @locale en
     * Subscribe to an event
     * @locale
     */
    subscribeEvent(options: SubscribeEventOptions): Promise<SubscribeEventResult>;
    /**
     * @Multi_Lang_Tag
     * @locale cn
     * 取消订阅
     *
     * 合并 IM1 的 unSubscribeEventsByAccounts 与 unSubscribeEventsByType
     * @locale
     *
     * @locale en
     * Unsubscribe
     *
     * Merge unSubscribeEventsByAccounts and unSubscribeEventsByType of IM1
     * @locale
     */
    unSubscribeEvents(options: UnSubscribeEventsOptions): Promise<UnSubscribeEventsResult>;
    /**
     * @Multi_Lang_Tag
     * @locale cn
     * 查询所订阅的事件
     *
     * 合并 IM1 的 querySubscribeEventsByAccounts 与 querySubscribeEventsByType
     * @locale
     *
     * @locale en
     * Query subscribed events
     *
     * Merge querySubscribeEventsByAccounts and querySubscribeEventsByType of IM1
     * @locale
     */
    querySubscribeEvents(options: QuerySubscribeEventsOptions): Promise<MsgEventSubscribe[]>;
}
export declare type MsgEventSubscribe = {
    /**
     * @Multi_Lang_Tag
     * @locale cn
     * 事件类型
     * @locale
     *
     * @locale en
     * Event type
     * @locale
     */
    type: number;
    /**
     * @Multi_Lang_Tag
     * @locale cn
     * 订阅有效期，秒为单位
     * @locale
     *
     * @locale en
     * Subscription validity period (unit: seconds)
     * @locale
     */
    vaildTime: number;
    /**
     * @Multi_Lang_Tag
     * @locale cn
     * 是否同步
     * @locale
     *
     * @locale en
     * Whether to synchronize
     * @locale
     */
    sync: boolean;
    /**
     * @Multi_Lang_Tag
     * @locale cn
     * 被订阅人（也就是事件发布人）的 accid
     * @locale
     *
     * @locale en
     * accid of the event publisher
     * @locale
     */
    to: string;
    /**
     * @Multi_Lang_Tag
     * @locale cn
     * 订阅此事件的时间戳
     * @locale
     *
     * @locale en
     * Timestamp of event subscription
     * @locale
     */
    time: number;
};
export declare type PublishEventOptions = {
    /**
     * @Multi_Lang_Tag
     * @locale cn
     * 事件类型, 目前只有 1
     * @locale
     *
     * @locale en
     * Event type. Currently only 1.
     * @locale
     */
    type: number;
    /**
     * @Multi_Lang_Tag
     * @locale cn
     * 事件状态/事件内容，由上层做自定义映射，value为10000以上(1-9999为云信预定义值，开发者不可使用，1代表上线，2代表下线，3代表断开连接)
     * @locale
     *
     * @locale en
     * Event status/event content, mapped by the upper layer. Valid value: 10,000 or more.
     * Note: 1 to 9999 are predefined values of CommsEase, which cannot be used by developers. 1 for online, 2 for offline, 3 for disconnected.
     * @locale
     */
    value: number;
    /**
     * @Multi_Lang_Tag
     * @locale cn
     * 用户自定义事件扩展属性，最长256字节
     * @locale
     *
     * @locale en
     * User-defined event extension attributes (up to 256 bytes)
     * @locale
     */
    ext?: string;
    /**
     * @Multi_Lang_Tag
     * @locale cn
     * 发布事件的有效时间 单位秒 60s~7天(604800s)，默认7天
     * @locale
     *
     * @locale en
     * The valid time for publishing events (unit: second, valid range: 60 to 604,800 seconds, default value: 604,800 seconds)
     * @locale
     */
    vaildTime?: number;
    /**
     * @Multi_Lang_Tag
     * @locale cn
     * 广播类型 1:仅在线 2:在线和离线
     * @locale
     *
     * @locale en
     * Broadcast Type: 1 indicates “Online Only”; 2 indicates “Online and Offline”.
     * @locale
     */
    broadcastType?: number;
    /**
     * @Multi_Lang_Tag
     * @locale cn
     * 是否同步给自己
     * @locale
     *
     * @locale en
     * Whether to synchronize to yourself
     * @locale
     */
    sync?: boolean;
};
export declare type PublishEventResult = {
    idClient: string;
    idServer: string;
    time: number;
};
export declare type SubscribeEventOptions = {
    /**
     * @Multi_Lang_Tag
     * @locale cn
     * 事件类型, 目前只有 1
     * @locale
     *
     * @locale en
     * Event type. Currently only 1.
     * @locale
     */
    type: number;
    /**
     * @Multi_Lang_Tag
     * @locale cn
     * 订阅账户列表
     * @locale
     *
     * @locale en
     * List of subscription accounts
     * @locale
     */
    accounts: string[];
    /**
     * @Multi_Lang_Tag
     * @locale cn
     * 订阅关系有效期
     * @locale
     *
     * @locale en
     * Subscription validity period
     * @locale
     */
    subscribeTime?: number;
    /**
     * @Multi_Lang_Tag
     * @locale cn
     * 订阅后是否立即同步最新事件
     * @locale
     *
     * @locale en
     * Synchronize subscription events
     * @locale
     */
    sync?: boolean;
};
export declare type SubscribeEventResult = {
    failedAccounts: string[];
};
export declare type UnSubscribeEventsOptions = {
    /**
     * @Multi_Lang_Tag
     * @locale cn
     * 事件类型, 目前只有 1
     * @locale
     *
     * @locale en
     * Event type. Currently only 1.
     * @locale
     */
    type: number;
    accounts?: string[];
};
export declare type UnSubscribeEventsResult = {
    failedAccounts: string[];
};
export declare type QuerySubscribeEventsOptions = {
    /**
     * @Multi_Lang_Tag
     * @locale cn
     * 事件类型, 目前只有 1
     * @locale
     *
     * @locale en
     * Event type. Currently only 1.
     * @locale
     */
    type: number;
    accounts?: string[];
};
export declare type PushEvent = {
    account: string;
    clientType: EClientType;
    ext: string;
    idClient: string;
    idServer: string;
    time: number;
    type: number;
    value: number;
};
