'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var Fontmin = require('fontmin');
var index = require('./utils/index.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var Fontmin__default = /*#__PURE__*/_interopDefaultLegacy(Fontmin);

const BASE_SRC = './public/font/*.*';
const BASE_DIST = './dist/font';
const fileScanAndFontmin = async (pluginOption) => {
    return new Promise(async (resolve, reject) => {
        const text = await index.getCodes(pluginOption);
        new Fontmin__default["default"]()
            .src(pluginOption && pluginOption.fontSrc ? pluginOption.fontSrc : BASE_SRC)
            .use(Fontmin__default["default"].glyph({ text }))
            .use(Fontmin__default["default"].ttf2woff())
            .use(Fontmin__default["default"].ttf2woff2())
            .dest(pluginOption && pluginOption.fontDest ? pluginOption.fontDest : BASE_DIST)
            .run((err, files) => {
            if (err) {
                reject(err);
            }
            resolve(files);
        });
    });
};
function ViteFontmin(pluginOption) {
    return {
        name: 'vite:fontmin',
        apply: 'build',
        configResolved: async () => {
            await fileScanAndFontmin(pluginOption);
        },
    };
}

exports.getCodes = index.getCodes;
exports["default"] = ViteFontmin;
exports.fileScanAndFontmin = fileScanAndFontmin;
