"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.findBuildEntry = void 0;
const utils_1 = require("./utils");
function findBuildEntry(entryName, rollupOptions, rollupBundle, config) {
    (0, utils_1.assert)((0, utils_1.viteIsSSR)(config));
    const fileExt = getFileExt(rollupOptions);
    (0, utils_1.assert)(fileExt !== 'mjs' || (0, utils_1.rollupIsEsm)(rollupOptions));
    const entryFileName = `${entryName}.${fileExt}`;
    assertEntryExistence(entryFileName, rollupBundle, config);
    return entryFileName;
}
exports.findBuildEntry = findBuildEntry;
function assertEntryExistence(entryFileName, rollupBundle, config) {
    const bundleFiles = Object.keys(rollupBundle);
    const { outDir } = config.build;
    (0, utils_1.assertPosixPath)(outDir);
    (0, utils_1.assert)(outDir.endsWith('/server'), { outDir });
    if (!bundleFiles.includes(entryFileName)) {
        throw new Error(`\`${outDir}/${entryFileName}\` is missing: make sure your Rollup config doesn't change the name of the file \`${entryFileName}\``);
    }
}
function getFileExt(rollupOptions) {
    const { entryFileNames } = rollupOptions;
    const fileExt = typeof entryFileNames === 'string' && entryFileNames.endsWith('.mjs') ? 'mjs' : 'js';
    return fileExt;
}
