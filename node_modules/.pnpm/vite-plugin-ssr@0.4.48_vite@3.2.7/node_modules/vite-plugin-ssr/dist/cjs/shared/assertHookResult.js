"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.assertObjectKeys = exports.assertHookResult = void 0;
const utils_1 = require("./utils");
const assertPageContextProvidedByUser_1 = require("./assertPageContextProvidedByUser");
function assertHookResult(hookResult, hookName, hookResultKeys, hookFile) {
    (0, utils_1.assert)(!hookName.endsWith(')'));
    const errPrefix = `The \`export { ${hookName} }\` of ${hookFile}`;
    (0, utils_1.assertUsage)(hookResult === null || hookResult === undefined || (0, utils_1.isPlainObject)(hookResult), `${errPrefix} should return \`null\`, \`undefined\`, or a plain JavaScript object.`);
    if (hookResult === undefined || hookResult === null) {
        return;
    }
    assertObjectKeys(hookResult, hookResultKeys, errPrefix);
    if ('pageContext' in hookResult) {
        (0, assertPageContextProvidedByUser_1.assertPageContextProvidedByUser)(hookResult['pageContext'], { hook: { hookName, hookFilePath: hookFile } });
    }
}
exports.assertHookResult = assertHookResult;
function assertObjectKeys(obj, keysExpected, errPrefix) {
    const keysUnknown = [];
    const keys = Object.keys(obj);
    for (const key of keys) {
        if (!keysExpected.includes(key)) {
            keysUnknown.push(key);
        }
    }
    (0, utils_1.assertUsage)(keysUnknown.length === 0, [
        errPrefix,
        'returned an object with unknown keys',
        (0, utils_1.stringifyStringArray)(keysUnknown) + '.',
        'Only following keys are allowed:',
        (0, utils_1.stringifyStringArray)(keysExpected) + '.'
    ].join(' '));
}
exports.assertObjectKeys = assertObjectKeys;
