"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.inferAssetTag = void 0;
const utils_1 = require("../../utils");
function inferAssetTag(pageAsset) {
    const { src, assetType, mediaType, preloadType } = pageAsset;
    if (assetType === 'script') {
        (0, utils_1.assert)(mediaType === 'text/javascript');
        return `<script type="module" src="${src}" async></script>`;
    }
    if (assetType === 'style') {
        // CSS has highest priority.
        // Would there be any advantage of using a preload tag for a css file instead of loading it right away?
        return `<link rel="stylesheet" type="text/css" href="${src}">`;
    }
    if (assetType === 'preload') {
        const isCrossOrigin = src.startsWith('http://') || src.startsWith('https://');
        const attributeCrossorigin = !isCrossOrigin ? '' : ' crossorigin';
        if (preloadType === 'font') {
            // `crossorigin` is needed for fonts, see https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types/preload#cors-enabled_fetches
            return `<link rel="preload" as="font" crossorigin type="${mediaType}" href="${src}"${attributeCrossorigin}>`;
        }
        if (preloadType === 'script') {
            (0, utils_1.assert)(mediaType === 'text/javascript');
            return `<link rel="modulepreload" as="script" type="${mediaType}" href="${src}"${attributeCrossorigin}>`;
        }
        const attributeAs = !preloadType ? '' : ` as="${preloadType}"`;
        const attributeType = !mediaType ? '' : ` type="${mediaType}"`;
        return `<link rel="preload" href="${src}"${attributeAs}${attributeType}${attributeCrossorigin}>`;
    }
    (0, utils_1.assert)(false);
}
exports.inferAssetTag = inferAssetTag;
