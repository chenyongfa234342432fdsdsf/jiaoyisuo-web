"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.autoFullBuild = void 0;
const vite_1 = require("vite");
const utils_1 = require("../utils");
const helpers_1 = require("../helpers");
const prerender_1 = require("../../prerender");
const assertConfigVps_1 = require("./config/assertConfigVps");
function autoFullBuild() {
    let config;
    return {
        name: 'vite-plugin-ssr:autoFullBuild',
        apply: 'build',
        enforce: 'pre',
        configResolved(config_) {
            (0, assertConfigVps_1.assertConfigVpsResolved)(config_);
            config = config_;
            abortSSRBuild(config);
        },
        // TODO: use `sequential: true` once available
        async writeBundle(_options, bundle) {
            try {
                await triggerFullBuild(config, bundle);
            }
            catch (err) {
                // Avoid Rollup prefixing the error with `[vite-plugin-ssr:autoFullBuild]`, for example see https://github.com/brillout/vite-plugin-ssr/issues/472#issuecomment-1276274203
                console.error(err);
                process.exit(1);
            }
        }
    };
}
exports.autoFullBuild = autoFullBuild;
async function triggerFullBuild(config, bundle) {
    if (config.build.ssr ||
        config.vitePluginSsr.disableAutoFullBuild ||
        !(0, helpers_1.isViteCliCall)() ||
        // `vite-plugin-ssr.json` missing => it isn't a `$ vite build` call (e.g. @vitejs/plugin-legacy calls Vite's `build()`) => skip
        !bundle['vite-plugin-ssr.json']) {
        return;
    }
    const configFromCli = (0, helpers_1.getViteBuildCliConfig)();
    if (!configFromCli.configFile) {
        configFromCli.configFile = config.configFile;
    }
    if (!configFromCli.root) {
        configFromCli.root = config.root;
    }
    await (0, vite_1.build)({
        ...configFromCli,
        build: {
            ...configFromCli.build,
            ssr: true
        }
    });
    if (config.vitePluginSsr.prerender && !config.vitePluginSsr.prerender.disableAutoRun) {
        await (0, prerender_1.prerender)({ viteConfig: configFromCli });
    }
}
function abortSSRBuild(config) {
    if (!config.vitePluginSsr.disableAutoFullBuild && (0, helpers_1.isViteCliCall)() && (0, helpers_1.getViteBuildCliConfig)().build.ssr) {
        (0, utils_1.assertWarning)(false, "The CLI call `$ vite build --ssr` is superfluous since `$ vite build` also builds the server-side. If you want two separate build steps then use https://vite-plugin-ssr.com/disableAutoFullBuild or use Vite's `build()` API.", { onlyOnce: true });
        process.exit(0);
    }
}
