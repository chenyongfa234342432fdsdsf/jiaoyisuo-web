"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getViteDevScripts = void 0;
const utils_1 = require("../../utils");
async function getViteDevScripts(pageContext) {
    if (pageContext._isProduction) {
        return '';
    }
    (0, utils_1.assert)(pageContext._viteDevServer);
    const fakeHtmlBegin = '<html> <head>'; // White space to test whether user is using a minifier
    const fakeHtmlEnd = '</head><body></body></html>';
    let fakeHtml = fakeHtmlBegin + fakeHtmlEnd;
    fakeHtml = await pageContext._viteDevServer.transformIndexHtml('/', fakeHtml);
    (0, utils_1.assertUsage)(!fakeHtml.includes('vite-plugin-pwa'), 'The HTML transformer of `vite-plugin-pwa` cannot be applied, see workaround at https://github.com/brillout/vite-plugin-ssr/issues/388#issuecomment-1199280084');
    (0, utils_1.assertUsage)(!fakeHtml.startsWith(fakeHtmlBegin.replace(' ', '')), 'Vite plugins that minify the HTML are not supported by vite-plugin-ssr, see https://github.com/brillout/vite-plugin-ssr/issues/224');
    (0, utils_1.assertUsage)(fakeHtml.startsWith(fakeHtmlBegin) && fakeHtml.endsWith(fakeHtmlEnd), 'You are using a Vite Plugin that transforms the HTML in a way that conflicts with vite-plugin-ssr. Create a new GitHub ticket to discuss a solution.');
    const viteInjection = fakeHtml.slice(fakeHtmlBegin.length, -1 * fakeHtmlEnd.length);
    (0, utils_1.assert)(viteInjection.includes('script'), { viteInjection });
    const scriptTags = viteInjection;
    return scriptTags;
}
exports.getViteDevScripts = getViteDevScripts;
