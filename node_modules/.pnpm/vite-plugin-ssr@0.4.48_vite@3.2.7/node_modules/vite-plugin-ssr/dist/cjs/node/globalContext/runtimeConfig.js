"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.resolveRuntimeConfig = exports.setRuntimeConfig = exports.getRuntimeConfig = void 0;
const utils_1 = require("../utils");
const assertBase_1 = require("./runtimeConfig/assertBase");
const globalObject = (0, utils_1.getGlobalObject)('runtimeConfig.ts', {});
function setRuntimeConfig(runtimeConfig) {
    (0, utils_1.assert)(runtimeConfig);
    (0, assertBase_1.assertBaseRuntime)(runtimeConfig);
    (0, utils_1.assert)(typeof runtimeConfig.includeAssetsImportedByServer === 'boolean');
    (0, utils_1.assertBaseUrl)(runtimeConfig.baseUrl);
    globalObject.runtimeConfig = runtimeConfig;
}
exports.setRuntimeConfig = setRuntimeConfig;
function getRuntimeConfig() {
    const { runtimeConfig } = globalObject;
    (0, utils_1.assert)(runtimeConfig);
    (0, assertBase_1.assertBaseRuntime)(runtimeConfig);
    return runtimeConfig;
}
exports.getRuntimeConfig = getRuntimeConfig;
function resolveRuntimeConfig(viteConfig) {
    const { baseUrl, baseAssets } = resolveBase(viteConfig.base);
    const { includeAssetsImportedByServer } = viteConfig.vitePluginSsr;
    const runtimeConfig = {
        baseUrl,
        baseAssets,
        includeAssetsImportedByServer
    };
    return runtimeConfig;
}
exports.resolveRuntimeConfig = resolveRuntimeConfig;
function resolveBase(base) {
    (0, assertBase_1.assertBaseConfig)(base);
    let baseUrl = '/';
    let baseAssets = null;
    (0, utils_1.assert)(base);
    if (base.startsWith('http')) {
        baseAssets = base;
    }
    else {
        baseUrl = base;
    }
    return {
        baseUrl,
        baseAssets
    };
}
