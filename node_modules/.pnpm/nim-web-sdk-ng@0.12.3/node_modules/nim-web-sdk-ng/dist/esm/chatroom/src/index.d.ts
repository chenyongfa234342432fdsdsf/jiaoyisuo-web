import { ChatroomEventInterface, ChatroomInitializeOptions, ChatroomInterface, ChatroomOtherOptions, NIMEChatroomInstanceStatus } from './ChatroomInterface';
import { ChatroomServiceInterface } from './ChatroomServiceInterface';
import { ChatroomMsgServiceInterface } from './ChatroomMsgServiceInterface';
import { ChatroomMemberServiceInterface } from './ChatroomMemberServiceInterface';
import { CloudStorageServiceInterface } from './CloudStorageServiceInterface';
import { EventEmitter } from 'eventemitter3';
export default class Chatroom extends EventEmitter<ChatroomEventInterface> implements ChatroomInterface {
    static instance: Chatroom | null;
    /**
     * 实例的状态
     */
    status: NIMEChatroomInstanceStatus;
    /**
     * 账号
     */
    account: string;
    /**
     * 连接参数
     */
    options: ChatroomInitializeOptions;
    chatroom: ChatroomServiceInterface;
    chatroomMsg: ChatroomMsgServiceInterface;
    chatroomMember: ChatroomMemberServiceInterface;
    cloudStorage: CloudStorageServiceInterface;
    constructor(options: ChatroomInitializeOptions);
    connect(): Promise<void>;
    setOptions(): Promise<void>;
    disconnect(): Promise<void>;
    destroy(): Promise<void>;
    /**
     * 单例模式获取实例
     */
    static getInstance(_options?: ChatroomInitializeOptions, _otherOptions?: ChatroomOtherOptions): Chatroom;
    /**
     * 设置适配器
     * @param _newAdapters 适配器
     */
    static setAdapters(_newAdapters: any): void;
}
