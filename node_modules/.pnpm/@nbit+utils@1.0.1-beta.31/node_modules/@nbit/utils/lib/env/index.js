'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

require('../index.js');
var index$1 = require('../fast-url/index.js');

const { getFastUrl } = index$1;
// 环境枚举
exports.EnvTypesEnum = void 0;
(function (EnvTypesEnum) {
    // 本地环境
    EnvTypesEnum["development"] = "development";
    // sg 开发环境
    EnvTypesEnum["dev"] = "dev";
    // 测试环境
    EnvTypesEnum["test"] = "test";
    // 压测环境
    EnvTypesEnum["stress"] = "stress";
    // 生产环境
    EnvTypesEnum["production"] = "production";
})(exports.EnvTypesEnum || (exports.EnvTypesEnum = {}));
/**
 * Nodejs 环境变量映射到实际业务的环境变量简称
 */
const EnvTypesMap = {
    [exports.EnvTypesEnum.development]: 'staging',
    [exports.EnvTypesEnum.dev]: 'dev',
    [exports.EnvTypesEnum.test]: 'staging',
    [exports.EnvTypesEnum.stress]: 'stress',
    [exports.EnvTypesEnum.production]: 'prod',
};
/** S3 配置文件名枚举 */
exports.S3UrlNameEnum = void 0;
(function (S3UrlNameEnum) {
    /** dns 配置文件名 */
    S3UrlNameEnum["dnsConfig"] = "_dnsConfig.json";
    /** 动态化配置文件名 */
    S3UrlNameEnum["moduleAuthConfig"] = "_mainFuncStatus.json";
})(exports.S3UrlNameEnum || (exports.S3UrlNameEnum = {}));
/**
 * 获取 S3 域名配置信息
 */
const getBaseEnvS3Url = (mode, type) => {
    if (mode === exports.EnvTypesEnum.production) {
        return getFastUrl(`https://newbit-prod-s3.s3.ap-northeast-1.amazonaws.com/${type}`);
    }
    if (mode === exports.EnvTypesEnum.dev) {
        return getFastUrl(`https://newbit-dev-s3.s3.ap-southeast-1.amazonaws.com/${type}`);
    }
    if (mode === exports.EnvTypesEnum.test) {
        return getFastUrl(`https://newbit-staging-s3.s3.ap-southeast-1.amazonaws.com/${type}`);
    }
    // 默认采用测试环境
    return getFastUrl(`https://newbit-staging-s3.s3.ap-southeast-1.amazonaws.com/${type}`);
};
/**
 * 获取 S3 域名配置信息
 */
const getEnvS3Url = (mode, businessId, urlName = exports.S3UrlNameEnum.dnsConfig) => {
    return getBaseEnvS3Url(mode, `${businessId}${urlName}`);
};
/**
 * 获取 S3 秘钥信息
 */
const getEnvSecretS3KeyConfig = (mode, accessKey) => {
    return getBaseEnvS3Url(mode, `${accessKey}.json`);
};
/**
 * 获取融合模式秘钥信息
 */
const getMergeModeEnvSecretS3KeyConfig = (mode, accessKey) => {
    if (mode === exports.EnvTypesEnum.production) {
        return `https://hybird-accesskey-prod.s3.ap-northeast-1.amazonaws.com/${accessKey}.json`;
    }
    if (mode === exports.EnvTypesEnum.dev) {
        return `https://hybird-accesskey-dev.s3.ap-northeast-1.amazonaws.com/${accessKey}.json`;
    }
    if (mode === exports.EnvTypesEnum.test) {
        return `https://hybird-accesskey-staging.s3.ap-northeast-1.amazonaws.com/${accessKey}.json`;
    }
    // 默认采用测试环境
    return `https://hybird-accesskey-staging.s3.ap-northeast-1.amazonaws.com/${accessKey}.json`;
};

exports.EnvTypesMap = EnvTypesMap;
exports.getBaseEnvS3Url = getBaseEnvS3Url;
exports.getEnvS3Url = getEnvS3Url;
exports.getEnvSecretS3KeyConfig = getEnvSecretS3KeyConfig;
exports.getMergeModeEnvSecretS3KeyConfig = getMergeModeEnvSecretS3KeyConfig;
