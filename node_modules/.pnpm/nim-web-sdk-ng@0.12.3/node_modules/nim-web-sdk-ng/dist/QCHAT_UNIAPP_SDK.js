/**
 * 
 *   Version: 0.12.3
 * 
 *   Git Hash: 1e29863397d62295db762f58beb5f2b3b9fe846b
 * 
 *   Created At: 2023/3/9 下午6:30:10
 * 
 *   Target: QCHAT_UNIAPP_SDK.js
 *   
 */

!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).QChat=t()}(this,(function(){"use strict";function __rest(e,t){var r={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(n=Object.getOwnPropertySymbols(e);a<n.length;a++)t.indexOf(n[a])<0&&Object.prototype.propertyIsEnumerable.call(e,n[a])&&(r[n[a]]=e[n[a]])}return r}function __awaiter(e,t,r,n){return new(r||(r=Promise))((function(a,i){function fulfilled(e){try{step(n.next(e))}catch(e){i(e)}}function rejected(e){try{step(n.throw(e))}catch(e){i(e)}}function step(e){e.done?a(e.value):function adopt(e){return e instanceof r?e:new r((function(t){t(e)}))}(e.value).then(fulfilled,rejected)}step((n=n.apply(e,t||[])).next())}))}var e="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function createCommonjsModule(e){var t={exports:{}};return e(t,t.exports),t.exports}var t=createCommonjsModule((function(e){var t=Object.prototype.hasOwnProperty,r="~";function Events(){}function EE(e,t,r){this.fn=e,this.context=t,this.once=r||!1}function addListener(e,t,n,a,i){if("function"!=typeof n)throw new TypeError("The listener must be a function");var o=new EE(n,a||e,i),s=r?r+t:t;return e._events[s]?e._events[s].fn?e._events[s]=[e._events[s],o]:e._events[s].push(o):(e._events[s]=o,e._eventsCount++),e}function clearEvent(e,t){0==--e._eventsCount?e._events=new Events:delete e._events[t]}function EventEmitter(){this._events=new Events,this._eventsCount=0}Object.create&&(Events.prototype=Object.create(null),(new Events).__proto__||(r=!1)),EventEmitter.prototype.eventNames=function eventNames(){var e,n,a=[];if(0===this._eventsCount)return a;for(n in e=this._events)t.call(e,n)&&a.push(r?n.slice(1):n);return Object.getOwnPropertySymbols?a.concat(Object.getOwnPropertySymbols(e)):a},EventEmitter.prototype.listeners=function listeners(e){var t=r?r+e:e,n=this._events[t];if(!n)return[];if(n.fn)return[n.fn];for(var a=0,i=n.length,o=new Array(i);a<i;a++)o[a]=n[a].fn;return o},EventEmitter.prototype.listenerCount=function listenerCount(e){var t=r?r+e:e,n=this._events[t];return n?n.fn?1:n.length:0},EventEmitter.prototype.emit=function emit(e,t,n,a,i,o){var s=r?r+e:e;if(!this._events[s])return!1;var c,l,d=this._events[s],h=arguments.length;if(d.fn){switch(d.once&&this.removeListener(e,d.fn,void 0,!0),h){case 1:return d.fn.call(d.context),!0;case 2:return d.fn.call(d.context,t),!0;case 3:return d.fn.call(d.context,t,n),!0;case 4:return d.fn.call(d.context,t,n,a),!0;case 5:return d.fn.call(d.context,t,n,a,i),!0;case 6:return d.fn.call(d.context,t,n,a,i,o),!0}for(l=1,c=new Array(h-1);l<h;l++)c[l-1]=arguments[l];d.fn.apply(d.context,c)}else{var p,u=d.length;for(l=0;l<u;l++)switch(d[l].once&&this.removeListener(e,d[l].fn,void 0,!0),h){case 1:d[l].fn.call(d[l].context);break;case 2:d[l].fn.call(d[l].context,t);break;case 3:d[l].fn.call(d[l].context,t,n);break;case 4:d[l].fn.call(d[l].context,t,n,a);break;default:if(!c)for(p=1,c=new Array(h-1);p<h;p++)c[p-1]=arguments[p];d[l].fn.apply(d[l].context,c)}}return!0},EventEmitter.prototype.on=function on(e,t,r){return addListener(this,e,t,r,!1)},EventEmitter.prototype.once=function once(e,t,r){return addListener(this,e,t,r,!0)},EventEmitter.prototype.removeListener=function removeListener(e,t,n,a){var i=r?r+e:e;if(!this._events[i])return this;if(!t)return clearEvent(this,i),this;var o=this._events[i];if(o.fn)o.fn!==t||a&&!o.once||n&&o.context!==n||clearEvent(this,i);else{for(var s=0,c=[],l=o.length;s<l;s++)(o[s].fn!==t||a&&!o[s].once||n&&o[s].context!==n)&&c.push(o[s]);c.length?this._events[i]=1===c.length?c[0]:c:clearEvent(this,i)}return this},EventEmitter.prototype.removeAllListeners=function removeAllListeners(e){var t;return e?(t=r?r+e:e,this._events[t]&&clearEvent(this,t)):(this._events=new Events,this._eventsCount=0),this},EventEmitter.prototype.off=EventEmitter.prototype.removeListener,EventEmitter.prototype.addListener=EventEmitter.prototype.on,EventEmitter.prefixed=r,EventEmitter.EventEmitter=EventEmitter,e.exports=EventEmitter})),r=Backoff;function Backoff(e){e=e||{},this.ms=e.min||100,this.max=e.max||1e4,this.factor=e.factor||2,this.jitter=e.jitter>0&&e.jitter<=1?e.jitter:0,this.attempts=0}Backoff.prototype.duration=function(){var e=this.ms*Math.pow(this.factor,this.attempts++);if(this.jitter){var t=Math.random(),r=Math.floor(t*this.jitter*e);e=0==(1&Math.floor(10*t))?e-r:e+r}return 0|Math.min(e,this.max)},Backoff.prototype.reset=function(){this.attempts=0},Backoff.prototype.setMin=function(e){this.ms=e},Backoff.prototype.setMax=function(e){this.max=e},Backoff.prototype.setJitter=function(e){this.jitter=e};var n="object"==typeof e&&e&&e.Object===Object&&e,a="object"==typeof self&&self&&self.Object===Object&&self,i=n||a||Function("return this")(),o=i.Symbol,s=Object.prototype,c=s.hasOwnProperty,l=s.toString,d=o?o.toStringTag:void 0;var h=function getRawTag(e){var t=c.call(e,d),r=e[d];try{e[d]=void 0;var n=!0}catch(e){}var a=l.call(e);return n&&(t?e[d]=r:delete e[d]),a},p=Object.prototype.toString;var u=function objectToString(e){return p.call(e)},m=o?o.toStringTag:void 0;var g=function baseGetTag(e){return null==e?void 0===e?"[object Undefined]":"[object Null]":m&&m in Object(e)?h(e):u(e)};var y=function isObject(e){var t=typeof e;return null!=e&&("object"==t||"function"==t)};var v=function isFunction(e){if(!y(e))return!1;var t=g(e);return"[object Function]"==t||"[object GeneratorFunction]"==t||"[object AsyncFunction]"==t||"[object Proxy]"==t};const f={deviceId:"",timeout:8e3},C={account:"",appkey:"",token:"",debugLevel:"off",needReconnect:!0,reconnectionAttempts:Number.MAX_SAFE_INTEGER,isAbtestEnable:!0,abtestUrl:"https://abt-online.netease.im/v1/api/abt/client/getExperimentInfo",abtestProjectKey:"imElite_sdk_abtest_web"};class CustomError extends Error{constructor(e,t={},r=400){super(e),this.data=t,this.code=r,this.name="customError"}}class ValidateError extends CustomError{constructor(e,t={},r){super(e,t,414),this.code=414,this.name="validateError",this.rules=r}}const b={200:null,406:null,808:null,810:null,201:"The client version is incorrect. You need to upgrade the SDK",302:"The user name or password is incorrect. Please check whether the appkey and token are valid and whether the account and token match",403:"Illegal operation or no permission",404:"Target object does not exist",405:"Parameter length too long",408:"Client request timed out",414:"Request parameter error",415:"Service unavailable",416:"Frequency control",417:"Repeat operation",422:"Account disabled",500:"Server internal error",503:"Server busy",508:"Expiration date",509:"Invalid",7101:"Be pulled black",700:"Partial failure of batch operation",801:"The number of people in the team has reached the upper limit",802:"No permission",803:"The team does not exist or has not changed",804:"The user is not in the team",805:"Team type mismatch",806:"The number of teams created has reached the limit",807:"Team member not valid",809:"Already in the team",811:"The number of accounts in the forced push list exceeds the limit",812:"The team is muted",813:"Due to the limited number of team, some pull people successfully",814:"Disable team message read service",815:"Maximum number of team administrators",816:"Batch operation partial failure",997:"The packet has expired",998:"Deserialize packet error",999:"Serialize packet error",9102:"Channel failure",9103:"This call has been answered / rejected at another end",10201:"Signaling: target NIM client is offline",10202:"Signaling: push is unreachable",10404:"Signaling: channel not exists",10405:"Signaling: channel already exists",10406:"Signaling: member of channel not exists",10407:"Signaling: member of channel already exists",10408:"Signaling: the invitation request does not exist or has expired",10409:"Signaling: the invitation request has been rejected",10410:"Signaling: the invitation request has been accepted",10414:"Signaling: request parameter error",10417:"Signaling: uid conflict",10419:"Signaling: the number of members of channel exceed the limit",10420:"Signaling: member is already in the channel on other client",10700:"Signaling: phased success",13002:"Abnormal chatroom status",13003:"In the blacklist",13004:"In the mute list",13006:"All members are muted, and only the administrator can speak"};class CmdError extends CustomError{constructor(e,t,r="",n=(new Date).getTime(),a={}){super(r=r||b[e],a,e),this.name="cmdError",this.cmd=t,this.timetag=n}}class FormatError extends CustomError{constructor(e,t,r){super(e,{},412),this.code=412,this.name="formatError",this.key=t,this.reason=r}}class UploadError extends CustomError{constructor(e,t,r,n,a){super(e,{file:a},400),this.name="uploadError",this.rawError=t,this.curProvider=r||1,this.mixStorePolicy=n}}const M=["error","warn","log","debug"],emptyFunc=function(){},I=["off","error","warn","log","debug"];class Logger{constructor(e,t){this.name=t,this.strategies={debug:console.log,log:console.log,warn:console.warn,error:console.error},this.debug=emptyFunc,this.log=emptyFunc,this.warn=emptyFunc,this.error=emptyFunc,this.name=t,Logger.instancesName.push(t),I.includes(e)||(e="off"),this.setLogFunc(e)}setLogFunc(e){const t=M.findIndex((t=>t===e));M.forEach(((e,r)=>{r<=t&&(this[e]=function(){const t=Array.prototype.slice.call(arguments),r=this.formatArgs(t,e);this.strategies[e](r)})}))}formatArgs(e,t){const r=new Date,n=`${r.getMonth()+1}-${r.getDate()} ${r.getHours()}:${r.getMinutes()}:${r.getSeconds()}:${r.getMilliseconds()}`;return`[NIM ${t} ${this.name} ${n}] `+e.map((e=>e instanceof CustomError?`${e.name}, ${e.code}, ${e.message}`:e instanceof Error?e&&e.message?e.message:e:"object"==typeof e?JSON.stringify(e):e)).join(" ")}}Logger.instancesName=[];var S=createCommonjsModule((function(e,t){e.exports=function(){function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function _createClass(e,t,r){return t&&_defineProperties(e.prototype,t),r&&_defineProperties(e,r),Object.defineProperty(e,"prototype",{writable:!1}),e}function __rest(e,t){var r={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(n=Object.getOwnPropertySymbols(e);a<n.length;a++)t.indexOf(n[a])<0&&Object.prototype.propertyIsEnumerable.call(e,n[a])&&(r[n[a]]=e[n[a]])}return r}var e={reportUrl:"https://statistic.live.126.net/statics/report/common/form",maxSize:100,msgListMaxSize:1e3,cacheMaxSize:1e3,maxDelay:3e5,maxInterval:3e4,minInterval:1e4,timeout:5e3,autoStart:!0},t="https://statistic.live.126.net/dispatcher/req",r=function emptyFn(){},n=function(){function Reporter(t){_classCallCheck(this,Reporter),this.enable=!1,this.initConfigLoaded=!1,this.loading=!1,this.isDestroyed=!1,this.reportConfig=e,this.msgList=[],this.traceMsgCache={},this.lowPriorityMsgList=[],this.cacheMsgList=[],this.lastReportTime=Date.now(),this.timer=null,this.setConfig(t),this.reportConfig.autoStart&&this.initUploadConfig()}return _createClass(Reporter,[{key:"setConfig",value:function setConfig(e){this.reportConfig=Object.assign({},this.reportConfig,e)}},{key:"reportImmediately",value:function reportImmediately(e,t){var r=this;this.reportConfig.request(e,Object.assign({dataType:"json",method:"POST",timeout:this.reportConfig.timeout},t)).catch((function(e){var t,n;null===(n=null===(t=r.reportConfig)||void 0===t?void 0:t.logger)||void 0===n||n.warn("Reporter immediately upload failed",e)}))}},{key:"report",value:function report(e,t){var r=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(e){var n=Date.now();r?this.lowPriorityMsgList.push({module:e,msg:t,createTime:n}):this.msgList.push({module:e,msg:t,createTime:n}),this.msgList.length>this.reportConfig.msgListMaxSize&&this.msgList.shift(),this.lowPriorityMsgList.length>this.reportConfig.msgListMaxSize&&this.lowPriorityMsgList.shift(),this.doReport()}}},{key:"reportTraceStart",value:function reportTraceStart(e,t){if(e&&!this.traceMsgCache[e]){var r=Object.assign(Object.assign({start_time:Date.now()},t),{extension:[]});this.traceMsgCache[e]=r}}},{key:"reportTraceUpdate",value:function reportTraceUpdate(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(this.traceMsgCache[e]){var n,a=t.operation_type,i=t.code,o=t.target,s=t.error,c=__rest(t,["operation_type","code","target","error"]),l=Date.now(),d=this.traceMsgCache[e].extension.length;n=0===d?this.traceMsgCache[e].start_time:this.traceMsgCache[e].extension[d-1].end_time,s&&s.code&&(i=s.code),this.traceMsgCache[e].extension.push({operation_type:a,code:i,succeed:r,target:o,duration:l-n,description:JSON.stringify(c),end_time:l})}}},{key:"reportTraceUpdateV2",value:function reportTraceUpdateV2(e,t){if(this.traceMsgCache[e]){var r=this.traceMsgCache[e].extension.length;t.end_time=0===r?this.traceMsgCache[e].start_time+(t.duration?t.duration:0):this.traceMsgCache[e].extension[r-1].end_time+(t.duration?t.duration:0),this.traceMsgCache[e].extension.push(t)}}},{key:"reportTraceEnd",value:function reportTraceEnd(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];this.traceMsgCache[e]&&("nos"!==e||!1===t?("boolean"==typeof t?this.traceMsgCache[e].succeed=!!t:this.traceMsgCache[e].state=t,this.traceMsgCache[e].duration=Date.now()-this.traceMsgCache[e].start_time,this.traceMsgCache[e].extension.forEach((function(e){delete e.end_time})),this.report(e,this.traceMsgCache[e]),this.traceMsgCache[e]=null):this.traceMsgCache[e]=null)}},{key:"pause",value:function pause(){this.enable=!1}},{key:"restore",value:function restore(){this.enable=!0,this.initConfigLoaded||this.initUploadConfig()}},{key:"destroy",value:function destroy(){var e=this;Object.keys(this.traceMsgCache).forEach((function(t){e.reportTraceEnd(t,1)})),null!==this.timer&&clearTimeout(this.timer),this.setConfig=r,this.report=r,this.reportTraceStart=r,this.reportTraceUpdate=r,this.reportTraceEnd=r,this.pause=r,this.restore=r,this.destroy=r,this.cacheMsgList=[],this.traceMsgCache={},this.lowPriorityMsgList=[],this.msgList=[],this.reportConfig={},this.isDestroyed=!0}},{key:"initUploadConfig",value:function initUploadConfig(){var e,r,n=this;if(!this.loading){this.loading=!0;var a=this.reportConfig.common||{};try{this.reportConfig.request(t,{method:"GET",dataType:"json",params:{deviceId:a.dev_id,sdkVer:a.sdk_ver,platform:a.platform,appkey:a.app_key},timeout:this.reportConfig.timeout}).then((function(e){var t,r;if(!n.isDestroyed){if(200===e.status&&e.data&&200===e.data.code){var a=e.data.data||{};n.reportConfig.maxSize=a.maxSize>1e3?1e3:a.maxSize,n.reportConfig.maxInterval=a.maxInterval>1e4?1e4:a.maxInterval,n.reportConfig.maxInterval=a.maxInterval<10?10:a.maxInterval,n.reportConfig.minInterval=a.minInterval<2?2:a.minInterval,n.reportConfig.maxDelay=a.maxDelay||300,n.reportConfig.maxInterval=1e3*n.reportConfig.maxInterval,n.reportConfig.minInterval=1e3*n.reportConfig.minInterval,n.reportConfig.maxDelay=1e3*n.reportConfig.maxDelay,n.enable=!0,n.initConfigLoaded=!0,n.loading=!1,n.reportHeartBeat()}null===(r=null===(t=n.reportConfig)||void 0===t?void 0:t.logger)||void 0===r||r.log("Get reporter upload config success")}})).catch((function(e){var t,r;n.loading=!1,null===(r=null===(t=n.reportConfig)||void 0===t?void 0:t.logger)||void 0===r||r.error("Get reporter upload config failed",e)}))}catch(t){this.loading=!1,null===(r=null===(e=this.reportConfig)||void 0===e?void 0:e.logger)||void 0===r||r.error("Exec reporter request failed",t)}}}},{key:"reportHeartBeat",value:function reportHeartBeat(){var e=this;this.isDestroyed||(this.timer=setTimeout((function(){e.reportHeartBeat()}),this.reportConfig.minInterval),this.doReport())}},{key:"doReport",value:function doReport(){if(!this.isDestroyed){var e=this.msgList.length+this.lowPriorityMsgList.length+this.cacheMsgList.length>2*this.reportConfig.maxSize?this.reportConfig.minInterval:this.reportConfig.maxInterval;Date.now()-this.lastReportTime>=e&&this.upload()}}},{key:"getUploadMsg",value:function getUploadMsg(){var e=this,t={},r=Date.now();this.msgList=this.msgList.filter((function(t){return r-t.createTime<e.reportConfig.maxDelay})),this.lowPriorityMsgList=this.lowPriorityMsgList.filter((function(t){return r-t.createTime<e.reportConfig.maxDelay})),this.cacheMsgList=this.cacheMsgList.filter((function(t){return r-t.createTime<e.reportConfig.maxDelay}));var n=this.msgList.slice(0,this.reportConfig.maxSize);if(this.msgList=this.msgList.slice(n.length),n.length<this.reportConfig.maxSize){var a=this.reportConfig.maxSize-n.length;n=n.concat(this.lowPriorityMsgList.slice(0,a)),this.lowPriorityMsgList=this.lowPriorityMsgList.slice(a)}if(n.length<this.reportConfig.maxSize){var i=this.reportConfig.maxSize-n.length;n=n.concat(this.cacheMsgList.slice(0,i)),this.cacheMsgList=this.cacheMsgList.slice(i)}return n.forEach((function(e){t[e.module]?t[e.module].push(e.msg):t[e.module]=[e.msg]})),{uploadMsgArr:n,uploadMsg:t}}},{key:"upload",value:function upload(){var e,t,r=this;if(this.enable&&!(this.lastReportTime&&Date.now()-this.lastReportTime<this.reportConfig.minInterval)){var n=this.getUploadMsg(),a=n.uploadMsgArr,i=n.uploadMsg;if(a.length){this.lastReportTime=Date.now();try{this.reportConfig.request(this.reportConfig.reportUrl,{dataType:"json",method:"POST",params:{common:this.reportConfig.common,event:i},headers:{sdktype:"im"},timeout:this.reportConfig.timeout}).catch((function(e){var t,n;r.cacheMsgList=r.cacheMsgList.concat(a).slice(0,r.reportConfig.cacheMaxSize),null===(n=null===(t=r.reportConfig)||void 0===t?void 0:t.logger)||void 0===n||n.warn("Reporter upload failed",e)}))}catch(r){null===(t=null===(e=this.reportConfig)||void 0===e?void 0:e.logger)||void 0===t||t.warn("Exec reporter request failed",r)}clearTimeout(this.timer),this.reportHeartBeat()}}}}]),Reporter}();return n}()}));const T={setLogger:function(e){throw new Error("Function not implemented.")},platform:"",WebSocket:class AdapterSocket{constructor(e,t){throw this.CONNECTING=0,this.OPEN=1,this.CLOSING=2,this.CLOSED=3,new Error("Method not implemented.")}close(e,t){throw new Error("Method not implemented.")}send(e){throw new Error("Method not implemented.")}onclose(e){throw new Error("Method not implemented.")}onerror(e){throw new Error("Method not implemented.")}onmessage(e){throw new Error("Method not implemented.")}onopen(e){throw new Error("Method not implemented.")}},localStorage:{},request:function(e,t){throw new Error("Function not implemented.")},uploadFile:function(e){throw new Error("Function not implemented.")},getSystemInfo:function(){throw new Error("Function not implemented.")}};var q=function isUndefined(e){return void 0===e};let w={},_={};function parseCmd(e,t){var r;let n;try{n=JSON.parse(e)}catch(r){throw t.error("Parse command error: ",e),r}let a=n.sid+"_"+n.cid,i=n.r;if(["4_1","4_2","4_10","4_11"].includes(a)){const e=n.r[1].headerPacket;a=`${e.sid}_${e.cid}`,i=n.r[1].body}const o=_[a],s=w[o],c=function genCmdError(e,t){const r=b[e];return null===r?null:new CmdError(e,t,r,(new Date).getTime())}(n.code,o),l={cmd:o,raw:n,error:c,service:null==s?void 0:s.service,content:{}};if(l.error){if(l.error.cmd=o,l.error.callFunc="parseCmd",!(null===(r=null==s?void 0:s.ignoreErrCodes)||void 0===r?void 0:r.includes(n.code)))return l;t.warn("parseCmd:: ignore error ",l.error),l.error.ignore=!0}return o&&s?(s.response&&s.response.forEach(((e,t)=>{const r=i[t],n=e.type,a=e.name,o=e.reflectMapper;if(!q(r))switch(n){case"Property":l.content[a]=o?deserialize(r,o):r;break;case"PropertyArray":l.content[a]=r.map((e=>o?deserialize(e,o):e));break;case"long":case"Long":case"byte":case"Byte":case"Number":l.content[a]=+r;break;default:l.content[a]=r}})),l):(l.notFound=!0,l)}function serialize(e,t){const r={};for(const n in e)void 0!==t[n]&&(r[t[n]]=e[n]);return r}function deserialize(e,t){const r={};for(const n in e)void 0!==t[n]&&(r[t[n]]=e[n]);return r}function registerParser(e){w=Object.assign(w,e.cmdConfig),_=Object.assign(_,e.cmdMap)}function invertSerializeMap(e){return Object.keys(e).reduce(((t,r)=>{const n=e[r];return t[r]=Object.keys(n).reduce(((e,t)=>(e[n[t]]=t,e)),{}),t}),{})}const R=["disconnect","connect","heartbeat","message","json","event","ack","error","noop"],k=["transport not supported","client not handshaken","unauthorized"],E=["reconnect"];class NIMWebsocket extends t{constructor(e,t,r){super(),this.url=t,this.logger=r,this.websocket=null,this.core=e,this.url=t,this.status="disconnected",this.logger=r,this.connect()}connect(){"connecting"!==this.status&&"connected"!==this.status?(this.status="connecting",this.core.adapters.request("https://"+this.url+"/socket.io/1/?t="+Date.now(),{method:"GET",dataType:"text",timeout:8e3}).then((e=>{const[t,r]=e.data.split(":");return this.sessionId=t,this.closeTimeout=1e3*r,this._createWebsocket("wss://"+this.url+"/socket.io/1/websocket/"+t)})).catch((e=>{this.logger.error("imsocket::handshake fail. ",e&&e.message),this.status="disconnected",this.emit("handshakeFailed")}))):this.logger.warn("imsocket::socket is connecting or connected",this.status)}close(){var e;if(this.websocket){this.status="disconnected",this.websocket.onmessage=null,this.websocket.onopen=null,this.websocket.onerror=null;try{null===(e=this.websocket)||void 0===e||e.send(this.encodePacket({type:"disconnect"})),this.websocket.close()}catch(e){this.logger.warn("attempt to close websocket error",e)}this.websocket.onclose=null,this.websocket=null,this.emit("disconnect")}}onConnect(){this.status="connected",this.resetCloseTimer(),this.emit("connect")}_createWebsocket(e){this.websocket=new T.WebSocket(e),this.websocket.onmessage=this.onMessage.bind(this),this.websocket.onclose=()=>{this.logger.log("imsocket:: websocket onclose done"),"disconnected"!==this.status&&(this.logger.log("imsocket:: close()",this.status),this.close())},this.websocket.onerror=e=>{this.logger.error("imsocket:: onerror",e)}}onMessage(e){var t;this.resetCloseTimer();const r=this.decodePacket(e.data);if(r)switch(r.type){case"connect":this.onConnect();break;case"disconnect":this.close();break;case"message":case"json":this.emit("message",r.data);break;case"event":r.name&&this.emit(r.name,r.args);break;case"error":"unauthorized"===r.reason?this.emit("connect_failed",r.reason):this.emit("error",r.reason);break;case"heartbeat":null===(t=this.websocket)||void 0===t||t.send(this.encodePacket({type:"heartbeat"}));break;default:this.logger.warn("imsocket::no handler type",r.type)}}encodePacket(e){const{type:t,id:r="",endpoint:n="",ack:a}=e;let i,o,s=null;if(!t)return"";switch(t){case"error":i=e.reason?k.indexOf(e.reason):"",o=e.advice?E.indexOf(e.advice):"",""===i&&""===o||(s=i+(""!==o?"+"+o:""));break;case"message":""!==e.data&&(s=e.data);break;case"event":i={name:e.name},i=e.args&&e.args.length?{name:e.name,args:e.args}:{name:e.name},s=JSON.stringify(i);break;case"json":s=JSON.stringify(e.data);break;case"connect":e.qs&&(s=e.qs);break;case"ack":s=e.ackId+(e.args&&e.args.length?"+"+JSON.stringify(e.args):"")}const c=[R.indexOf(t),r+("data"===a?"+":""),n];return null!=s&&c.push(s),c.join(":")}decodePacket(e){if(!e)return;if("�"==e.charAt(0))return void this.logger.error("imsocket::unrecognize dataStr",e.slice(0,20));const t=e.match(/([^:]+):([0-9]+)?(\+)?:([^:]+)?:?([\s\S]*)?/);if(!t)return;const[,r,n,a,i,o]=t,s={type:R[+r],endpoint:i};let c;switch(n&&(s.id=n,s.ack=!a||"data"),s.type){case"error":c=o.split("+"),s.reason=k[+c[0]]||"";break;case"message":s.data=o||"";break;case"connect":s.qs=o||"";break;case"event":try{const e=JSON.parse(o);s.name=e.name,s.args=e.args}catch(e){this.logger.error("imsocket::parseData::type::event error",e)}s.args=s.args||[];break;case"json":try{s.data=JSON.parse(o)}catch(e){this.logger.error("imsocket::parseData::type::json error",e)}break;case"ack":if(c=o.match(/^([0-9]+)(\+)?(.*)/),c&&(s.ackId=c[1],s.args=[],c[3]))try{s.args=c[3]?JSON.parse(c[3]):[]}catch(e){this.logger.error("imsocket::parseData::type::ack error",e)}}return s}send(e){var t;const r={data:e,type:"message",endpoint:""};null===(t=this.websocket)||void 0===t||t.send(this.encodePacket(r))}resetCloseTimer(){this.closeTimeout&&(clearTimeout(this.closeTimer),this.closeTimer=setTimeout((()=>{this.close()}),this.closeTimeout))}}var P=function isObjectLike(e){return null!=e&&"object"==typeof e};var A=function baseIsRegExp(e){return P(e)&&"[object RegExp]"==g(e)};var O,x=function baseUnary(e){return function(t){return e(t)}},U=createCommonjsModule((function(e,t){var r=t&&!t.nodeType&&t,a=r&&e&&!e.nodeType&&e,i=a&&a.exports===r&&n.process,o=function(){try{var e=a&&a.require&&a.require("util").types;return e||i&&i.binding&&i.binding("util")}catch(e){}}();e.exports=o})),j=U&&U.isRegExp,B=j?x(j):A,N=i["__core-js_shared__"],L=(O=/[^.]+$/.exec(N&&N.keys&&N.keys.IE_PROTO||""))?"Symbol(src)_1."+O:"";var G=function isMasked(e){return!!L&&L in e},Q=Function.prototype.toString;var F=function toSource(e){if(null!=e){try{return Q.call(e)}catch(e){}try{return e+""}catch(e){}}return""},D=/^\[object .+?Constructor\]$/,V=Function.prototype,$=Object.prototype,W=V.toString,K=$.hasOwnProperty,J=RegExp("^"+W.call(K).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");var z=function baseIsNative(e){return!(!y(e)||G(e))&&(v(e)?J:D).test(F(e))};var H=function getValue(e,t){return null==e?void 0:e[t]};var Y=function getNative(e,t){var r=H(e,t);return z(r)?r:void 0},X=Y(Object,"create");var Z=function hashClear(){this.__data__=X?X(null):{},this.size=0};var ee=function hashDelete(e){var t=this.has(e)&&delete this.__data__[e];return this.size-=t?1:0,t},te=Object.prototype.hasOwnProperty;var re=function hashGet(e){var t=this.__data__;if(X){var r=t[e];return"__lodash_hash_undefined__"===r?void 0:r}return te.call(t,e)?t[e]:void 0},ne=Object.prototype.hasOwnProperty;var ae=function hashHas(e){var t=this.__data__;return X?void 0!==t[e]:ne.call(t,e)};var ie=function hashSet(e,t){var r=this.__data__;return this.size+=this.has(e)?0:1,r[e]=X&&void 0===t?"__lodash_hash_undefined__":t,this};function Hash(e){var t=-1,r=null==e?0:e.length;for(this.clear();++t<r;){var n=e[t];this.set(n[0],n[1])}}Hash.prototype.clear=Z,Hash.prototype.delete=ee,Hash.prototype.get=re,Hash.prototype.has=ae,Hash.prototype.set=ie;var oe=Hash;var se=function listCacheClear(){this.__data__=[],this.size=0};var ce=function eq(e,t){return e===t||e!=e&&t!=t};var le=function assocIndexOf(e,t){for(var r=e.length;r--;)if(ce(e[r][0],t))return r;return-1},de=Array.prototype.splice;var he=function listCacheDelete(e){var t=this.__data__,r=le(t,e);return!(r<0)&&(r==t.length-1?t.pop():de.call(t,r,1),--this.size,!0)};var pe=function listCacheGet(e){var t=this.__data__,r=le(t,e);return r<0?void 0:t[r][1]};var ue=function listCacheHas(e){return le(this.__data__,e)>-1};var me=function listCacheSet(e,t){var r=this.__data__,n=le(r,e);return n<0?(++this.size,r.push([e,t])):r[n][1]=t,this};function ListCache(e){var t=-1,r=null==e?0:e.length;for(this.clear();++t<r;){var n=e[t];this.set(n[0],n[1])}}ListCache.prototype.clear=se,ListCache.prototype.delete=he,ListCache.prototype.get=pe,ListCache.prototype.has=ue,ListCache.prototype.set=me;var ge=ListCache,ye=Y(i,"Map");var ve=function mapCacheClear(){this.size=0,this.__data__={hash:new oe,map:new(ye||ge),string:new oe}};var fe=function isKeyable(e){var t=typeof e;return"string"==t||"number"==t||"symbol"==t||"boolean"==t?"__proto__"!==e:null===e};var Ce=function getMapData(e,t){var r=e.__data__;return fe(t)?r["string"==typeof t?"string":"hash"]:r.map};var be=function mapCacheDelete(e){var t=Ce(this,e).delete(e);return this.size-=t?1:0,t};var Me=function mapCacheGet(e){return Ce(this,e).get(e)};var Ie=function mapCacheHas(e){return Ce(this,e).has(e)};var Se=function mapCacheSet(e,t){var r=Ce(this,e),n=r.size;return r.set(e,t),this.size+=r.size==n?0:1,this};function MapCache(e){var t=-1,r=null==e?0:e.length;for(this.clear();++t<r;){var n=e[t];this.set(n[0],n[1])}}MapCache.prototype.clear=ve,MapCache.prototype.delete=be,MapCache.prototype.get=Me,MapCache.prototype.has=Ie,MapCache.prototype.set=Se;var Te=MapCache;var qe=function setCacheAdd(e){return this.__data__.set(e,"__lodash_hash_undefined__"),this};var we=function setCacheHas(e){return this.__data__.has(e)};function SetCache(e){var t=-1,r=null==e?0:e.length;for(this.__data__=new Te;++t<r;)this.add(e[t])}SetCache.prototype.add=SetCache.prototype.push=qe,SetCache.prototype.has=we;var _e=SetCache;var Re=function baseFindIndex(e,t,r,n){for(var a=e.length,i=r+(n?1:-1);n?i--:++i<a;)if(t(e[i],i,e))return i;return-1};var ke=function baseIsNaN(e){return e!=e};var Ee=function strictIndexOf(e,t,r){for(var n=r-1,a=e.length;++n<a;)if(e[n]===t)return n;return-1};var Pe=function baseIndexOf(e,t,r){return t==t?Ee(e,t,r):Re(e,ke,r)};var Ae=function arrayIncludes(e,t){return!!(null==e?0:e.length)&&Pe(e,t,0)>-1};var Oe=function arrayIncludesWith(e,t,r){for(var n=-1,a=null==e?0:e.length;++n<a;)if(r(t,e[n]))return!0;return!1};var xe=function arrayMap(e,t){for(var r=-1,n=null==e?0:e.length,a=Array(n);++r<n;)a[r]=t(e[r],r,e);return a};var Ue=function cacheHas(e,t){return e.has(t)};var je=function baseDifference(e,t,r,n){var a=-1,i=Ae,o=!0,s=e.length,c=[],l=t.length;if(!s)return c;r&&(t=xe(t,x(r))),n?(i=Oe,o=!1):t.length>=200&&(i=Ue,o=!1,t=new _e(t));e:for(;++a<s;){var d=e[a],h=null==r?d:r(d);if(d=n||0!==d?d:0,o&&h==h){for(var p=l;p--;)if(t[p]===h)continue e;c.push(d)}else i(t,h,n)||c.push(d)}return c};var Be=function identity(e){return e};var Ne=function apply(e,t,r){switch(r.length){case 0:return e.call(t);case 1:return e.call(t,r[0]);case 2:return e.call(t,r[0],r[1]);case 3:return e.call(t,r[0],r[1],r[2])}return e.apply(t,r)},Le=Math.max;var Ge=function overRest(e,t,r){return t=Le(void 0===t?e.length-1:t,0),function(){for(var n=arguments,a=-1,i=Le(n.length-t,0),o=Array(i);++a<i;)o[a]=n[t+a];a=-1;for(var s=Array(t+1);++a<t;)s[a]=n[a];return s[t]=r(o),Ne(e,this,s)}};var Qe=function constant(e){return function(){return e}},Fe=function(){try{var e=Y(Object,"defineProperty");return e({},"",{}),e}catch(e){}}(),De=Fe?function(e,t){return Fe(e,"toString",{configurable:!0,enumerable:!1,value:Qe(t),writable:!0})}:Be,Ve=Date.now;var $e=function shortOut(e){var t=0,r=0;return function(){var n=Ve(),a=16-(n-r);if(r=n,a>0){if(++t>=800)return arguments[0]}else t=0;return e.apply(void 0,arguments)}},We=$e(De);var Ke=function baseRest(e,t){return We(Ge(e,t,Be),e+"")};var Je=function isLength(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=9007199254740991};var ze=function isArrayLike(e){return null!=e&&Je(e.length)&&!v(e)};var He=function isArrayLikeObject(e){return P(e)&&ze(e)},Ye=Ke((function(e,t){return He(e)?je(e,t):[]}));function replacer(e,t){return t instanceof RegExp?"__REGEXP "+t.toString():t}function validate(e,t={},r){const n={};return Object.keys(e).forEach((a=>{const i=e[a].type,o=r?`In ${r}, `:"";if(void 0===t[a]){if(!1===e[a].required)return void(n[a]=t[a]);throw new ValidateError(`${o}param "${a}" is required`,{key:a},"required")}const s=Xe[i];if(s&&!s(t,a,e[a]))throw new ValidateError(`${o}param "${a}" expects ${JSON.stringify(e[a],replacer)}`,{key:a,value:t[a]},JSON.stringify(e[a]));n[a]=t[a]})),n}const Xe={string:function(e,t,r){const{allowEmpty:n,max:a,min:i,regExp:o}=r,s=e[t];return"string"==typeof s&&((!1!==n||""!==s)&&(!("number"==typeof a&&s.length>a)&&(!("number"==typeof i&&s.length<i)&&!(B(o)&&!o.test(s)))))},number:function(e,t,r){const{min:n,max:a}=r,i=e[t];return"number"==typeof i&&(!("number"==typeof n&&i<n)&&!("number"==typeof a&&i>a))},boolean:function(e,t){return"boolean"==typeof e[t]},enum:function(e,t,r){const{values:n}=r,a=e[t];return!n||n.indexOf(a)>-1},array:function(e,t,r){const{itemType:n,rules:a,min:i,max:o,values:s}=r,c=e[t];return!!Array.isArray(c)&&(!("number"==typeof o&&c.length>o)&&(!("number"==typeof i&&c.length<i)&&(!(n&&"enum"!==n&&!c.every((e=>typeof e===n)))&&(("enum"!==n||!s||!Ye(c,...s).length)&&(a&&c.forEach(((e,r)=>validate(a,e,`${t}[${r}]`))),!0)))))},object:function(e,t,r){const{rules:n}=r,a=e[t];return n&&validate(n,a,t),!0}};var Ze=Y(i,"Set");var et=function noop(){};var tt=function setToArray(e){var t=-1,r=Array(e.size);return e.forEach((function(e){r[++t]=e})),r},rt=Ze&&1/tt(new Ze([,-0]))[1]==1/0?function(e){return new Ze(e)}:et;var nt=function baseUniq(e,t,r){var n=-1,a=Ae,i=e.length,o=!0,s=[],c=s;if(r)o=!1,a=Oe;else if(i>=200){var l=t?null:rt(e);if(l)return tt(l);o=!1,a=Ue,c=new _e}else c=t?[]:s;e:for(;++n<i;){var d=e[n],h=t?t(d):d;if(d=r||0!==d?d:0,o&&h==h){for(var p=c.length;p--;)if(c[p]===h)continue e;t&&c.push(h),s.push(d)}else a(c,h,r)||(c!==s&&c.push(h),s.push(d))}return s};var at=function uniq(e){return e&&e.length?nt(e):[]};const it=function(){const _s4=function(){return(65536*(1+Math.random())|0).toString(16).substring(1)};return function(){return _s4()+_s4()+_s4()+_s4()+_s4()+_s4()+_s4()+_s4()}}();function getEnumKeys(e){return Object.keys(e).filter((e=>!(+e>=0)))}function getEnumKeyByEnumValue(e,t){const r=Object.keys(e).filter((r=>e[r]==t));return r.length>0?r[0]:void 0}class TimerManager{constructor(){this.timerList=[],this.id=0,this.timer=null,this.timeout=0}addTimer(e,t=0,r=1){const n=(new Date).getTime(),a=this.id;return this.timerList.push({id:a,loop:r,count:0,timeout:n+t,interval:t,callback:e}),this.id++,this.checkTimer(n),a}checkTimer(e=(new Date).getTime()){if(this.removeFinished(),0===this.timerList.length&&null!=this.timer)return;let t=0;for(const e of this.timerList)(0===t||t>e.timeout)&&(t=e.timeout);0!==this.timerList.length&&(null===this.timer||t<this.timeout||this.timeout<e)&&(this.timer=setTimeout(this.nowTime.bind(this),t-e),this.timeout=t)}nowTime(){const e=(new Date).getTime();for(const t of this.timerList)e>=t.timeout&&(t.callback(),t.count++,t.timeout=e+t.interval);this.clerTime(),this.checkTimer(e)}clerTime(){null!==this.timer&&(clearTimeout(this.timer),this.timer=null)}deleteTimer(e){for(let t=this.timerList.length-1;t>=0;t--){this.timerList[t].id===e&&this.timerList.splice(t,1)}}removeFinished(){for(let e=this.timerList.length-1;e>=0;e--){const t=this.timerList[e];t.loop>=0&&t.count>=t.loop&&this.timerList.splice(e,1)}}destroy(){this.clerTime(),this.timerList=[],this.id=0,this.timer=null}}class CoreAdapters{constructor(e){this.core=e}request(e,t){const r=(new Date).getTime();return T.request(e,t).catch((n=>{var a,i;const o=n;throw this.core.reporter.reportTraceStart("exceptions",{user_id:this.core.options.account,trace_id:null===(i=null===(a=this.core)||void 0===a?void 0:a.socket)||void 0===i?void 0:i.sessionId,start_time:r,action:1}),this.core.reporter.reportTraceUpdateV2("exceptions",{code:"number"==typeof o.code?o.code:0,description:o.message||`${o.code}`,operation_type:0,target:e,context:t?JSON.stringify(t):""}),this.core.reporter.reportTraceEnd("exceptions",1),n}))}uploadFile(e){const t=(new Date).getTime();return T.uploadFile(e).catch((r=>{var n,a;const i=r;this.core.reporter.reportTraceStart("exceptions",{user_id:this.core.options.account,trace_id:null===(a=null===(n=this.core)||void 0===n?void 0:n.socket)||void 0===a?void 0:a.sessionId,start_time:t,action:1});const o="BROWSER"===T.platform?e.chunkUploadHost:e.commonUploadHost?`${e.commonUploadHost}/${e.nosToken&&e.nosToken.bucket}`:"https://nos.netease.com/nim";throw this.core.reporter.reportTraceUpdateV2("exceptions",{code:"number"==typeof i.code?i.code:0,description:i.message||`${i.code}`,operation_type:1,target:o}),this.core.reporter.reportTraceEnd("exceptions",1),r}))}}var ot;!function(e){e[e.ACTIVE=1]="ACTIVE",e[e.KICKED=2]="KICKED",e[e.OFFLINE=3]="OFFLINE"}(ot||(ot={}));const st=window&&v(window.addEventListener)&&v(window.removeEventListener);class Core extends t{constructor(e,n){super(),this.status="unconnected",this.linkUrls=[],this.eventBus=new t,this.packetSer=1,this.retryCount=0,this.reconnectTimer=0,this.backoff=new r({max:8e3,min:1600,jitter:.01}),this.sendingCmdMap=new Map,this.pingTimer=0,this.config=f,this.abtInfo={},validate({linkUrls:{type:"array",itemType:"string",required:!1}},e),this.options=Object.assign(Object.assign({},C),e),this.adapters=new CoreAdapters(this);let a=T.localStorage.getItem("__NIM_DEVC_ID__");this.options.isFixedDeviceId?(a=T.localStorage.getItem("__NIM_DEVC_ID__")||it(),T.localStorage.setItem("__NIM_DEVC_ID__",a)):a=it(),this.config=Object.assign(Object.assign(Object.assign({},f),n),{deviceId:a}),this.timerManager=new TimerManager,this.logger=new Logger(this.options.debugLevel,this.options.account);const i=T.getSystemInfo();this.reporter=new S({common:{app_key:e.appkey,dev_id:a,platform:"Web",sdk_ver:"0.12.3",env:"online",os_name:i.os,os_ver:i.osVer,host_env:i.hostEnv,host_info:i.hostInfo,host_env_ver:i.hostEnvVer},request:T.request,logger:this.logger,autoStart:"BROWSER"===T.platform}),T.setLogger(this.logger),this.logger.log("Core init, version ","0.12.3"," sdk version ",90903," appkey ",e.appkey)}connect(e={}){return __awaiter(this,void 0,void 0,(function*(){if(validate({linkUrls:{type:"array",itemType:"string",required:!1}},e),!/^(unconnected|waitReconnect)$/.test(this.status)){const e=`Core socket status is ${this.status}, and would not connect`;return this.logger.warn(e),Promise.reject(e)}this.status="connecting",e.linkUrls&&e.linkUrls.length>0&&(this.linkUrls=e.linkUrls.concat(this.linkUrls),this.linkUrls=at(this.linkUrls)),0===this.linkUrls.length&&this.linkUrls.push("weblink.netease.im:443");for(let e=0;e<this.linkUrls.length;e++){const t=this.linkUrls[e],r=(new Date).getTime();try{return yield this.doConnect(t),this.reporter.reportTraceUpdate("login",{operation_type:"TCP",target:t}),this.status="connected",this.logger.log(`core:: connect success with url: ${t}`),this.abtRequest(),t}catch(e){const n=e;this.reporter.reportTraceUpdate("login",{operation_type:"TCP",error:"ws_handshake_failed",target:t},!1),this.reporter.reportTraceStart("exceptions",{user_id:this.options.account,start_time:r,action:0}),this.reporter.reportTraceUpdateV2("exceptions",{code:"number"==typeof n.code?n.code:0,description:n.message||`${n.code}`,operation_type:0,target:t}),this.reporter.reportTraceEnd("exceptions",1),this.logger.warn(`core:: connect failed with url: ${t}`,e)}}throw this.reporter.reportTraceEnd("login",!1),0===this.retryCount?this.doDisconnect(ot.ACTIVE,"SocketHandshakeFailed"):this.doDisconnect(ot.OFFLINE,"ReconnectHadRetryAllLinks"),new Error("core: socket handshake failed")}))}doConnect(e){return new Promise(((t,r)=>{this.socket=new NIMWebsocket(this,e,this.logger),this.socket.on("connect",(()=>{this.logger.log("socket on connect",e),t()})),this.socket.on("message",this.onMessage.bind(this)),this.socket.on("disconnect",(e=>{this.logger.log("core:: socket on disconnect",e),this.doDisconnect(ot.OFFLINE,"SocketOnDisconnect")})),this.socket.on("handshakeFailed",(()=>{this.logger.warn("core:: socket handshake failed"),r(new CustomError("handshake failed",{},408))}))}))}resetConnectStatus(){clearTimeout(this.reconnectTimer),this.backoff.reset(),this.retryCount=0,this.initOnlineListener()}doDisconnect(e,t){if(this.logger.log(`doDisconnect: type ${e}, description ${t}`),"unconnected"===this.status)return void this.logger.warn("doDisconnect: already unconnected");this.markAllCmdInvaild(new CustomError("Packet timeout due to instance disconnect",{},408)),this.timerManager.destroy(),clearTimeout(this.pingTimer),this.socket&&("function"==typeof this.socket.removeAllListeners&&this.socket.removeAllListeners(),"function"==typeof this.socket.close&&this.socket.close(),this.socket=void 0);const r=!this.options.needReconnect||this.retryCount>=this.options.reconnectionAttempts;if(e===ot.ACTIVE||r)this.logger.log("doDisconnect: emit disconnect, type "+e,r),this.status="unconnected",this.reconnectTimer&&clearTimeout(this.reconnectTimer),this.eventBus.emit("disconnect"),this.emit("disconnect"),this.destroyOnlineListener();else if(e===ot.KICKED){this.logger.log("doDisconnect: kicked"),this.status="unconnected",this.reconnectTimer&&clearTimeout(this.reconnectTimer);const e="string"==typeof t?{reason:"unknow",message:t}:t;this.eventBus.emit("kicked",e),this.emit("kicked",e),this.destroyOnlineListener()}else e===ot.OFFLINE?(this.logger.log("doDisconnect: start to reconnect"),this.attempToReconnect()):this.logger.log("doDisconnect: nothing to do")}attempToReconnect(){if("waitReconnect"===this.status)return void this.logger.warn("doDisconnect: already is waiting reconnect");const e=this.backoff.duration();this.retryCount++,this.logger.log(`willReconnect ${this.retryCount} ${e}`),this.eventBus.emit("willReconnect",{retryCount:this.retryCount,duration:e}),this.emit("willReconnect",{retryCount:this.retryCount,duration:e}),this.status="waitReconnect",this.reconnectTimer&&clearTimeout(this.reconnectTimer),this.reconnectTimer=setTimeout((()=>{"waitReconnect"===this.status?this.connect({isAutoReconnect:!0}).catch((()=>{this.logger.error(`core::attempToReconnect failed ${this.retryCount}`)})):this.logger.warn(`doDisconnect: reconnectTimer status is ${this.status}, would not go on reconnecting`)}),e)}sendCmd(e,t,r){if("logined"!==this.status&&"login"!==e&&"chatroomLogin"!==e&&"qchatLogin"!==e)return this.logger.warn(`nim status is ${this.status}, so can not sendCmd ${e}`),Promise.reject({cmd:e,error:{code:"No_connected",message:"Connection not established",timetag:(new Date).getTime()}});if(!this.socket||!this.socket.send)return Promise.reject("No_socket");const n="heartbeat"!==e,a=n?this.packetSer++:0,i=function createCmd(e,t,r,n){const a=w[e];if(!a)return r.error("createCmd:: can not find cmd config: ",e),null;const i={SER:t,SID:a.sid,CID:a.cid,Q:[]};return a.params&&n&&a.params.forEach((function(e){let t=n[e.name];if(q(t))return;let r=e.type;const{reflectMapper:a}=e;switch(e.type){case"PropertyArray":r="ArrayMable",t=t.map((e=>({t:"Property",v:a?serialize(e,a):e})));break;case"Property":t=a?serialize(t,a):t;break;case"Bool":case"bool":t=t?"true":"false"}i.Q.push({t:r,v:t})})),{packet:i,isNoResponse:a.isNoResponse||!1}}(e,a,this.logger,t);if(!i){const t=`SendCmd ${a} ${e} error`;return this.logger.error(t),Promise.reject(t)}const{packet:o,isNoResponse:s}=i,c=JSON.stringify(o);n&&("debug"===this.options.debugLevel?this.logger.debug("core::sendCmd",e,`ser:${a}`,c):this.logger.log("core::sendCmd",e,`ser:${a}`));const l=(new Date).getTime();return new Promise(((n,i)=>{this.sendingCmdMap.set(a,{cmd:e,params:t,callback:[n,i],timer:s?null:setTimeout((()=>{var t;const r=new CmdError(504,e,"Packet Timeout",(new Date).getTime(),{message:`ser ${a} cmd ${e} timeout`});r.callFunc="sendCmd",this.markCmdInvalid(a,r,e),this.reporter.reportTraceStart("exceptions",{user_id:this.options.account,trace_id:null===(t=this.socket)||void 0===t?void 0:t.sessionId,start_time:l,action:2}),this.reporter.reportTraceUpdateV2("exceptions",{code:408,description:"Packet timeout",operation_type:1,target:`${o.SID}-${o.CID}`,context:`${o.SER}`}),this.reporter.reportTraceEnd("exceptions",1)}),r&&r.timeout?r.timeout:this.config.timeout)});try{this.socket.send(c)}catch(t){const r=new CmdError(415,e,t&&t.message||"Unable to send packet",(new Date).getTime(),{message:"send json error",rawError:t});r.callFunc="sendCmd",this.markCmdInvalid(a,r,e),i(t)}}))}onMessage(e){const t=parseCmd(e,this.logger);if(!t)return;const r=t.raw.ser;if(t.error&&this.logger.error("core:onMessage packet error",`${t.raw.sid}_${t.raw.cid}, ser:${r},`,t.error),!t.notFound)return"heartbeat"!==t.cmd&&("debug"===this.options.debugLevel?this.logger.debug(`imsocket::recvCmd ser:${r}`,t.cmd,t.content):this.logger.log(`imsocket::recvCmd ser:${r}`,t.cmd)),t.__receiveTime=Date.now(),t;this.logger.warn("core::onMessage packet not found",`${t.raw.sid}_${t.raw.cid}, ser:${r}`)}markCmdInvalid(e,t,r){const n=this.sendingCmdMap.get(e);if(!n)return;const{callback:a,timer:i}=n;i&&clearTimeout(i),this.sendingCmdMap.delete(e),this.logger.warn(`packet ${e}, ${r} is invalid:`,t),a[1](t)}markAllCmdInvaild(e){this.logger.log("markAllCmdInvaild"),this.sendingCmdMap.forEach((t=>{const{callback:r,timer:n}=t;n&&clearTimeout(n),r[1](e)})),this.sendingCmdMap.clear()}ping(){return __awaiter(this,void 0,void 0,(function*(){clearTimeout(this.pingTimer);try{yield this.sendCmd("heartbeat")}catch(e){if(yield this.testHeartBeat5Timeout())return void this.doDisconnect(ot.OFFLINE,"PingError")}this.pingTimer=setTimeout((()=>{this.ping()}),3e4)}))}testHeartBeat5Timeout(){return __awaiter(this,void 0,void 0,(function*(){clearTimeout(this.pingTimer);for(let e=0;e<5;e++)try{return yield this.sendCmd("heartbeat",{},{timeout:3e3}),!1}catch(t){this.logger.debug(`core:: test heartbeat ${e} Timeout`)}return!0}))}initOnlineListener(){this.onlineListener||(st?(this.onlineListener=function(){"logined"===this.status&&this.ping()}.bind(this),this.offlineListener=function(){this.logger.log("offline"),this.doDisconnect(ot.OFFLINE,"OfflineListener")}.bind(this),window.addEventListener("online",this.onlineListener),window.addEventListener("offline",this.offlineListener)):this.logger.warn("initOnlineListener not support add listener"))}destroyOnlineListener(){this.onlineListener&&(window.removeEventListener("online",this.onlineListener),this.onlineListener=void 0),this.offlineListener&&(window.removeEventListener("offline",this.offlineListener),this.offlineListener=void 0)}disconnect(){switch(this.status){case"connected":case"logined":case"connecting":case"waitReconnect":return this.doDisconnect(ot.ACTIVE,"UserActiveDisconnect"),Promise.resolve();case"unconnected":case"destroyed":return Promise.resolve()}}destroy(){return this.disconnect().then((()=>{this.status="destroyed",this.removeAllListeners(),this.eventBus.removeAllListeners(),this.reporter.destroy(),this.connect=()=>Promise.resolve(),this.disconnect=()=>Promise.resolve(),this.destroy=()=>Promise.resolve()}))}abtRequest(){var e,t;return __awaiter(this,void 0,void 0,(function*(){if(!this.options.isAbtestEnable)return;if(this.abtInfo.experiments)return;if(!this.options.abtestUrl)return;let r;try{r=yield this.adapters.request(this.options.abtestUrl,{method:"POST",dataType:"json",headers:{sdktype:"ABTest"},params:{clientInfo:{projectKey:this.options.abtestProjectKey,appKey:this.options.appkey,osType:"Web",sdkVersion:"0.12.3",deviceId:this.config.deviceId},useLocalCache:!0}})}catch(e){this.logger.warn("ABTest request failed")}this.abtInfo=(null===(t=null===(e=null==r?void 0:r.data)||void 0===e?void 0:e.data)||void 0===t?void 0:t.abtInfo)||{},this.abtInfo.experiments&&this.abtInfo.experiments.length>0&&this.reporter.reportImmediately("https://statistic.live.126.net/statics/report/abtest/result",{params:{app_key:this.options.appkey,biz_sdk_type:"IM",sdk_ver:"0.12.3",device_id:this.config.deviceId,platform:"Web",projectKey:this.options.abtestProjectKey,experiments:this.abtInfo.experiments.map((e=>({experimentKey:e.experimentKey,schemeKey:e.schemeKey})))},headers:{sdktype:"ABTest"},method:"POST",dataType:"json"})}))}}Core.setAdapters=function setAdapters(e){Object.assign(T,e)};var ct=function stackClear(){this.__data__=new ge,this.size=0};var lt=function stackDelete(e){var t=this.__data__,r=t.delete(e);return this.size=t.size,r};var dt=function stackGet(e){return this.__data__.get(e)};var ht=function stackHas(e){return this.__data__.has(e)};var pt=function stackSet(e,t){var r=this.__data__;if(r instanceof ge){var n=r.__data__;if(!ye||n.length<199)return n.push([e,t]),this.size=++r.size,this;r=this.__data__=new Te(n)}return r.set(e,t),this.size=r.size,this};function Stack(e){var t=this.__data__=new ge(e);this.size=t.size}Stack.prototype.clear=ct,Stack.prototype.delete=lt,Stack.prototype.get=dt,Stack.prototype.has=ht,Stack.prototype.set=pt;var ut=Stack;var mt=function arraySome(e,t){for(var r=-1,n=null==e?0:e.length;++r<n;)if(t(e[r],r,e))return!0;return!1};var gt=function equalArrays(e,t,r,n,a,i){var o=1&r,s=e.length,c=t.length;if(s!=c&&!(o&&c>s))return!1;var l=i.get(e),d=i.get(t);if(l&&d)return l==t&&d==e;var h=-1,p=!0,u=2&r?new _e:void 0;for(i.set(e,t),i.set(t,e);++h<s;){var m=e[h],g=t[h];if(n)var y=o?n(g,m,h,t,e,i):n(m,g,h,e,t,i);if(void 0!==y){if(y)continue;p=!1;break}if(u){if(!mt(t,(function(e,t){if(!Ue(u,t)&&(m===e||a(m,e,r,n,i)))return u.push(t)}))){p=!1;break}}else if(m!==g&&!a(m,g,r,n,i)){p=!1;break}}return i.delete(e),i.delete(t),p},yt=i.Uint8Array;var vt=function mapToArray(e){var t=-1,r=Array(e.size);return e.forEach((function(e,n){r[++t]=[n,e]})),r},ft=o?o.prototype:void 0,Ct=ft?ft.valueOf:void 0;var bt=function equalByTag(e,t,r,n,a,i,o){switch(r){case"[object DataView]":if(e.byteLength!=t.byteLength||e.byteOffset!=t.byteOffset)return!1;e=e.buffer,t=t.buffer;case"[object ArrayBuffer]":return!(e.byteLength!=t.byteLength||!i(new yt(e),new yt(t)));case"[object Boolean]":case"[object Date]":case"[object Number]":return ce(+e,+t);case"[object Error]":return e.name==t.name&&e.message==t.message;case"[object RegExp]":case"[object String]":return e==t+"";case"[object Map]":var s=vt;case"[object Set]":var c=1&n;if(s||(s=tt),e.size!=t.size&&!c)return!1;var l=o.get(e);if(l)return l==t;n|=2,o.set(e,t);var d=gt(s(e),s(t),n,a,i,o);return o.delete(e),d;case"[object Symbol]":if(Ct)return Ct.call(e)==Ct.call(t)}return!1};var Mt=function arrayPush(e,t){for(var r=-1,n=t.length,a=e.length;++r<n;)e[a+r]=t[r];return e},It=Array.isArray;var St=function baseGetAllKeys(e,t,r){var n=t(e);return It(e)?n:Mt(n,r(e))};var Tt=function arrayFilter(e,t){for(var r=-1,n=null==e?0:e.length,a=0,i=[];++r<n;){var o=e[r];t(o,r,e)&&(i[a++]=o)}return i};var qt=function stubArray(){return[]},wt=Object.prototype.propertyIsEnumerable,_t=Object.getOwnPropertySymbols,Rt=_t?function(e){return null==e?[]:(e=Object(e),Tt(_t(e),(function(t){return wt.call(e,t)})))}:qt;var kt=function baseTimes(e,t){for(var r=-1,n=Array(e);++r<e;)n[r]=t(r);return n};var Et=function baseIsArguments(e){return P(e)&&"[object Arguments]"==g(e)},Pt=Object.prototype,At=Pt.hasOwnProperty,Ot=Pt.propertyIsEnumerable,xt=Et(function(){return arguments}())?Et:function(e){return P(e)&&At.call(e,"callee")&&!Ot.call(e,"callee")},Ut=xt;var jt=function stubFalse(){return!1},Bt=createCommonjsModule((function(e,t){var r=t&&!t.nodeType&&t,n=r&&e&&!e.nodeType&&e,a=n&&n.exports===r?i.Buffer:void 0,o=(a?a.isBuffer:void 0)||jt;e.exports=o})),Nt=/^(?:0|[1-9]\d*)$/;var Lt=function isIndex(e,t){var r=typeof e;return!!(t=null==t?9007199254740991:t)&&("number"==r||"symbol"!=r&&Nt.test(e))&&e>-1&&e%1==0&&e<t},Gt={};Gt["[object Float32Array]"]=Gt["[object Float64Array]"]=Gt["[object Int8Array]"]=Gt["[object Int16Array]"]=Gt["[object Int32Array]"]=Gt["[object Uint8Array]"]=Gt["[object Uint8ClampedArray]"]=Gt["[object Uint16Array]"]=Gt["[object Uint32Array]"]=!0,Gt["[object Arguments]"]=Gt["[object Array]"]=Gt["[object ArrayBuffer]"]=Gt["[object Boolean]"]=Gt["[object DataView]"]=Gt["[object Date]"]=Gt["[object Error]"]=Gt["[object Function]"]=Gt["[object Map]"]=Gt["[object Number]"]=Gt["[object Object]"]=Gt["[object RegExp]"]=Gt["[object Set]"]=Gt["[object String]"]=Gt["[object WeakMap]"]=!1;var Qt=function baseIsTypedArray(e){return P(e)&&Je(e.length)&&!!Gt[g(e)]},Ft=U&&U.isTypedArray,Dt=Ft?x(Ft):Qt,Vt=Object.prototype.hasOwnProperty;var $t=function arrayLikeKeys(e,t){var r=It(e),n=!r&&Ut(e),a=!r&&!n&&Bt(e),i=!r&&!n&&!a&&Dt(e),o=r||n||a||i,s=o?kt(e.length,String):[],c=s.length;for(var l in e)!t&&!Vt.call(e,l)||o&&("length"==l||a&&("offset"==l||"parent"==l)||i&&("buffer"==l||"byteLength"==l||"byteOffset"==l)||Lt(l,c))||s.push(l);return s},Wt=Object.prototype;var Kt=function isPrototype(e){var t=e&&e.constructor;return e===("function"==typeof t&&t.prototype||Wt)};var Jt=function overArg(e,t){return function(r){return e(t(r))}},zt=Jt(Object.keys,Object),Ht=Object.prototype.hasOwnProperty;var Yt=function baseKeys(e){if(!Kt(e))return zt(e);var t=[];for(var r in Object(e))Ht.call(e,r)&&"constructor"!=r&&t.push(r);return t};var Xt=function keys(e){return ze(e)?$t(e):Yt(e)};var Zt=function getAllKeys(e){return St(e,Xt,Rt)},er=Object.prototype.hasOwnProperty;var tr=function equalObjects(e,t,r,n,a,i){var o=1&r,s=Zt(e),c=s.length;if(c!=Zt(t).length&&!o)return!1;for(var l=c;l--;){var d=s[l];if(!(o?d in t:er.call(t,d)))return!1}var h=i.get(e),p=i.get(t);if(h&&p)return h==t&&p==e;var u=!0;i.set(e,t),i.set(t,e);for(var m=o;++l<c;){var g=e[d=s[l]],y=t[d];if(n)var v=o?n(y,g,d,t,e,i):n(g,y,d,e,t,i);if(!(void 0===v?g===y||a(g,y,r,n,i):v)){u=!1;break}m||(m="constructor"==d)}if(u&&!m){var f=e.constructor,C=t.constructor;f==C||!("constructor"in e)||!("constructor"in t)||"function"==typeof f&&f instanceof f&&"function"==typeof C&&C instanceof C||(u=!1)}return i.delete(e),i.delete(t),u},rr=Y(i,"DataView"),nr=Y(i,"Promise"),ar=Y(i,"WeakMap"),ir="[object Map]",or="[object Promise]",sr="[object Set]",cr="[object WeakMap]",lr="[object DataView]",dr=F(rr),hr=F(ye),pr=F(nr),ur=F(Ze),mr=F(ar),gr=g;(rr&&gr(new rr(new ArrayBuffer(1)))!=lr||ye&&gr(new ye)!=ir||nr&&gr(nr.resolve())!=or||Ze&&gr(new Ze)!=sr||ar&&gr(new ar)!=cr)&&(gr=function(e){var t=g(e),r="[object Object]"==t?e.constructor:void 0,n=r?F(r):"";if(n)switch(n){case dr:return lr;case hr:return ir;case pr:return or;case ur:return sr;case mr:return cr}return t});var yr=gr,vr="[object Arguments]",fr="[object Array]",Cr="[object Object]",br=Object.prototype.hasOwnProperty;var Mr=function baseIsEqualDeep(e,t,r,n,a,i){var o=It(e),s=It(t),c=o?fr:yr(e),l=s?fr:yr(t),d=(c=c==vr?Cr:c)==Cr,h=(l=l==vr?Cr:l)==Cr,p=c==l;if(p&&Bt(e)){if(!Bt(t))return!1;o=!0,d=!1}if(p&&!d)return i||(i=new ut),o||Dt(e)?gt(e,t,r,n,a,i):bt(e,t,c,r,n,a,i);if(!(1&r)){var u=d&&br.call(e,"__wrapped__"),m=h&&br.call(t,"__wrapped__");if(u||m){var g=u?e.value():e,y=m?t.value():t;return i||(i=new ut),a(g,y,r,n,i)}}return!!p&&(i||(i=new ut),tr(e,t,r,n,a,i))};var Ir=function baseIsEqual(e,t,r,n,a){return e===t||(null==e||null==t||!P(e)&&!P(t)?e!=e&&t!=t:Mr(e,t,r,n,baseIsEqual,a))};var Sr=function baseIsMatch(e,t,r,n){var a=r.length,i=a,o=!n;if(null==e)return!i;for(e=Object(e);a--;){var s=r[a];if(o&&s[2]?s[1]!==e[s[0]]:!(s[0]in e))return!1}for(;++a<i;){var c=(s=r[a])[0],l=e[c],d=s[1];if(o&&s[2]){if(void 0===l&&!(c in e))return!1}else{var h=new ut;if(n)var p=n(l,d,c,e,t,h);if(!(void 0===p?Ir(d,l,3,n,h):p))return!1}}return!0};var Tr=function isStrictComparable(e){return e==e&&!y(e)};var qr=function getMatchData(e){for(var t=Xt(e),r=t.length;r--;){var n=t[r],a=e[n];t[r]=[n,a,Tr(a)]}return t};var wr=function matchesStrictComparable(e,t){return function(r){return null!=r&&(r[e]===t&&(void 0!==t||e in Object(r)))}};var _r=function baseMatches(e){var t=qr(e);return 1==t.length&&t[0][2]?wr(t[0][0],t[0][1]):function(r){return r===e||Sr(r,e,t)}};var Rr=function isSymbol(e){return"symbol"==typeof e||P(e)&&"[object Symbol]"==g(e)},kr=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,Er=/^\w*$/;var Pr=function isKey(e,t){if(It(e))return!1;var r=typeof e;return!("number"!=r&&"symbol"!=r&&"boolean"!=r&&null!=e&&!Rr(e))||(Er.test(e)||!kr.test(e)||null!=t&&e in Object(t))};function memoize(e,t){if("function"!=typeof e||null!=t&&"function"!=typeof t)throw new TypeError("Expected a function");var memoized=function(){var r=arguments,n=t?t.apply(this,r):r[0],a=memoized.cache;if(a.has(n))return a.get(n);var i=e.apply(this,r);return memoized.cache=a.set(n,i)||a,i};return memoized.cache=new(memoize.Cache||Te),memoized}memoize.Cache=Te;var Ar=memoize;var Or=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,xr=/\\(\\)?/g,Ur=function memoizeCapped(e){var t=Ar(e,(function(e){return 500===r.size&&r.clear(),e})),r=t.cache;return t}((function(e){var t=[];return 46===e.charCodeAt(0)&&t.push(""),e.replace(Or,(function(e,r,n,a){t.push(n?a.replace(xr,"$1"):r||e)})),t})),jr=o?o.prototype:void 0,Br=jr?jr.toString:void 0;var Nr=function baseToString(e){if("string"==typeof e)return e;if(It(e))return xe(e,baseToString)+"";if(Rr(e))return Br?Br.call(e):"";var t=e+"";return"0"==t&&1/e==-Infinity?"-0":t};var Lr=function toString(e){return null==e?"":Nr(e)};var Gr=function castPath(e,t){return It(e)?e:Pr(e,t)?[e]:Ur(Lr(e))};var Qr=function toKey(e){if("string"==typeof e||Rr(e))return e;var t=e+"";return"0"==t&&1/e==-Infinity?"-0":t};var Fr=function baseGet(e,t){for(var r=0,n=(t=Gr(t,e)).length;null!=e&&r<n;)e=e[Qr(t[r++])];return r&&r==n?e:void 0};var Dr=function get(e,t,r){var n=null==e?void 0:Fr(e,t);return void 0===n?r:n};var Vr=function baseHasIn(e,t){return null!=e&&t in Object(e)};var $r=function hasPath(e,t,r){for(var n=-1,a=(t=Gr(t,e)).length,i=!1;++n<a;){var o=Qr(t[n]);if(!(i=null!=e&&r(e,o)))break;e=e[o]}return i||++n!=a?i:!!(a=null==e?0:e.length)&&Je(a)&&Lt(o,a)&&(It(e)||Ut(e))};var Wr=function hasIn(e,t){return null!=e&&$r(e,t,Vr)};var Kr=function baseMatchesProperty(e,t){return Pr(e)&&Tr(t)?wr(Qr(e),t):function(r){var n=Dr(r,e);return void 0===n&&n===t?Wr(r,e):Ir(t,n,3)}};var Jr=function baseProperty(e){return function(t){return null==t?void 0:t[e]}};var zr=function basePropertyDeep(e){return function(t){return Fr(t,e)}};var Hr=function property(e){return Pr(e)?Jr(Qr(e)):zr(e)};var Yr=function baseIteratee(e){return"function"==typeof e?e:null==e?Be:"object"==typeof e?It(e)?Kr(e[0],e[1]):_r(e):Hr(e)};var Xr=function baseAssignValue(e,t,r){"__proto__"==t&&Fe?Fe(e,t,{configurable:!0,enumerable:!0,value:r,writable:!0}):e[t]=r},Zr=Object.prototype.hasOwnProperty;var en=function assignValue(e,t,r){var n=e[t];Zr.call(e,t)&&ce(n,r)&&(void 0!==r||t in e)||Xr(e,t,r)};var tn=function baseSet(e,t,r,n){if(!y(e))return e;for(var a=-1,i=(t=Gr(t,e)).length,o=i-1,s=e;null!=s&&++a<i;){var c=Qr(t[a]),l=r;if("__proto__"===c||"constructor"===c||"prototype"===c)return e;if(a!=o){var d=s[c];void 0===(l=n?n(d,c,s):void 0)&&(l=y(d)?d:Lt(t[a+1])?[]:{})}en(s,c,l),s=s[c]}return e};var rn=function basePickBy(e,t,r){for(var n=-1,a=t.length,i={};++n<a;){var o=t[n],s=Fr(e,o);r(s,o)&&tn(i,Gr(o,e),s)}return i},nn=Jt(Object.getPrototypeOf,Object),an=Object.getOwnPropertySymbols?function(e){for(var t=[];e;)Mt(t,Rt(e)),e=nn(e);return t}:qt;var sn=function nativeKeysIn(e){var t=[];if(null!=e)for(var r in Object(e))t.push(r);return t},cn=Object.prototype.hasOwnProperty;var ln=function baseKeysIn(e){if(!y(e))return sn(e);var t=Kt(e),r=[];for(var n in e)("constructor"!=n||!t&&cn.call(e,n))&&r.push(n);return r};var dn=function keysIn(e){return ze(e)?$t(e,!0):ln(e)};var hn=function getAllKeysIn(e){return St(e,dn,an)};var pn=function pickBy(e,t){if(null==e)return{};var r=xe(hn(e),(function(e){return[e]}));return t=Yr(t),rn(e,r,(function(e,r){return t(e,r[0])}))};const un={"6_2":"getNosToken","6_22":"getOriginUrl","6_26":"getNosCdnHost","6_27":"getGrayscaleConfig","6_28":"getMixStorePolicy","6_29":"getMixStoreToken","6_30":"getFileAuthToken"},mn={nosToken:{objectName:1,token:2,bucket:3,expireTime:4,expireSec:7,tag:8,shortUrl:9},mixStoreTokenReqTag:{provider:0,tokenCount:1,fileExpireSec:2,tag:3,returnBody:4},nosConfigTag:{bucket:1,cdnDomain:2,expire:3,objectNamePrefix:4},grayConfigTag:{config:0,ttl:1},mixStorePolicyTag:{providers:0,ttl:1,mixEnable:2,nosPolicy:3,s3Policy:4},mixStoreTokenResTag:{provider:0,accessKeyId:1,secretAccessKey:2,sessionToken:3,token:4,expireTime:5,bucket:6,objectName:7,fileExpireSec:8,tag:9,shortUrl:10,region:11},nosSafeUrlTag:{safeUrl:0,originUrl:1},mixStoreAuthTokenReqTag:{type:1,urls:2},mixStoreAuthTokenResTag:{type:1,tokens:2,token:3,ttl:4}},gn=invertSerializeMap(mn),yn={getNosToken:{sid:6,cid:2,service:"cloudStorage",response:[{type:"Property",name:"nosToken",reflectMapper:gn.nosToken}],params:[{type:"String",name:"responseBody"},{type:"Property",name:"nosToken",entity:"nosToken",reflectMapper:mn.nosToken}]},getOriginUrl:{sid:6,cid:22,service:"cloudStorage",response:[{type:"Property",name:"nosSafeUrlTag",reflectMapper:gn.nosSafeUrlTag}],params:[{type:"Property",name:"nosSafeUrlTag",reflectMapper:mn.nosSafeUrlTag}]},getNosCdnHost:{sid:6,cid:26,service:"misc",response:[{type:"Property",name:"nosConfigTag",reflectMapper:gn.nosConfigTag}]},getGrayscaleConfig:{sid:6,cid:27,service:"cloudStorage",response:[{type:"Property",name:"grayConfigTag",reflectMapper:gn.grayConfigTag}],params:[{type:"Property",name:"config"}]},getMixStorePolicy:{sid:6,cid:28,service:"cloudStorage",params:[{type:"LongArray",name:"supportType"}],response:[{type:"Property",name:"mixStorePolicyTag",reflectMapper:gn.mixStorePolicyTag}]},getMixStoreToken:{sid:6,cid:29,service:"cloudStorage",params:[{type:"Property",name:"mixStoreTokenReqTag",reflectMapper:mn.mixStoreTokenReqTag}],response:[{type:"Property",name:"mixStoreTokenResTag",reflectMapper:gn.mixStoreTokenResTag}]},getFileAuthToken:{sid:6,cid:30,service:"cloudStorage",params:[{type:"Property",name:"mixStoreAuthTokenReqTag",reflectMapper:mn.mixStoreAuthTokenReqTag}],response:[{type:"Property",name:"mixStoreAuthTokenResTag",reflectMapper:gn.mixStoreAuthTokenResTag}]}};var vn,fn;!function(e){e[e.nos=1]="nos",e[e.s3=2]="s3"}(vn||(vn={})),function(e){e[e.dontNeed=-1]="dontNeed",e[e.time=2]="time",e[e.urls=3]="urls"}(fn||(fn={}));const Cn={chunkUploadHost:"https://wanproxy-web.127.net",commonUploadHost:"https://nos.netease.com",chunkMaxSize:4194304e4,commonMaxSize:104857600,uploadReplaceFormat:"https://{host}/{object}",cdn:{defaultCdnDomain:"nim.nosdn.127.net",cdnDomain:"",bucket:"",objectNamePrefix:""},downloadUrl:"https://{bucket}-nosdn.netease.im/{object}",downloadHostList:["nos.netease.com"],nosCdnEnable:!0,isNeedToGetUploadPolicyFromServer:!0},bn={file:{md5:"$(Etag)",size:"$(ObjectSize)"},image:{md5:"$(Etag)",size:"$(ObjectSize)",w:"$(ImageInfo.Width)",h:"$(ImageInfo.Height)",orientation:"$(ImageInfo.Orientation)"},audio:{md5:"$(Etag)",size:"$(ObjectSize)",dur:"$(AVinfo.Audio.Duration)"},video:{md5:"$(Etag)",size:"$(ObjectSize)",dur:"$(AVinfo.Video.Duration)",w:"$(AVinfo.Video.Width)",h:"$(AVinfo.Video.Height)"}},Mn={accessKeyId:"",secretAccessKey:"",sessionToken:"",region:"",maxRetries:0,bucket:"",objectName:"",token:"",shortUrl:""};function getUploadResponseFormat(e="file"){const t=bn[e]||{};return JSON.stringify(t).replace(/"/gi,'\\"')}var In,Sn,Tn,qn,wn;!function(e){e[e.nos=1]="nos",e[e.s3=2]="s3"}(In||(In={})),function(e){e[e.dontNeed=-1]="dontNeed",e[e.time=2]="time",e[e.urls=3]="urls"}(Sn||(Sn={}));class CloudStorageService{constructor(e,t={}){this.GRAYKEY="AllGrayscaleConfig",this.MIXSTOREKEY="AllMixStorePolicy",this.config={},this.nosCdnHostTimer=0,this.grayConfig={mixStoreEnable:!1,timeStamp:0,ttl:0},this.mixStorePolicy={providers:[],timeStamp:0,ttl:0,s3Policy:null,nosPolicy:null},this.curProvider=In.nos,this.s3=null,this.mixStoreErrorCount=10,this.nosErrorCount=0,this.circuitTimer=0,this.name="cloudStorage",this.logger=e.logger,this.core=e,registerParser({cmdMap:un,cmdConfig:yn}),this.setOptions(t)}setOptions(e={}){const t=e.storageKeyPrefix||"NIMClient";this.GRAYKEY=t+"-AllGrayscaleConfig",this.MIXSTOREKEY=t+"-AllMixStorePolicy";const{s3:r}=e,n=__rest(e,["s3"]),a=Object.assign({},Cn,this.config);if(n&&Object.prototype.hasOwnProperty.call(n,"cdn")){const e={cdn:Object.assign(Object.assign({},a.cdn),n.cdn)};this.config=Object.assign({},a,n,e)}else this.config=Object.assign({},a,n);r&&(this.s3=r)}init(){return __awaiter(this,void 0,void 0,(function*(){this.grayConfig=null,this.mixStorePolicy={providers:[],timeStamp:0,ttl:0,s3Policy:null,nosPolicy:null},this.curProvider=In.nos,this.mixStoreErrorCount=10,this.config.isNeedToGetUploadPolicyFromServer&&(yield this.getGrayscaleConfig(this.core.options.appkey),yield this.getNosCdnHost())}))}uploadFile(e){return __awaiter(this,void 0,void 0,(function*(){if(validate({maxSize:{type:"number",required:!1},type:{type:"enum",values:["file","image","audio","video"]}},e),!e.fileInput&&!e.file&&!e.filePath)throw new Error("uploadFile needs target file object or a filePath");if(e.type&&"file"!==e.type){const t=Dr(e,"file.type");if("string"==typeof t&&-1===t.indexOf(e.type))throw new Error(`The meta type "${t}" does not match "${e.type}"`)}if(!(this.grayConfig&&this.grayConfig.mixStoreEnable&&this.mixStorePolicy.providers.length))return this.logger.log("uploadFile:: uploadFile begin, use old nos"),this.nosUpload(e);this.logger.log(`uploadFile:: uploadFile begin,Current settings grayConfig mixStoreEnable:${this.grayConfig.mixStoreEnable} curProvider:${this.curProvider}`),this.s3||(this.curProvider=In.nos);let t=Mn;try{t=(yield this.core.sendCmd("getMixStoreToken",{mixStoreTokenReqTag:{provider:this.curProvider,tokenCount:1,tag:"qchat",returnBody:getUploadResponseFormat(e.type)}})).content.mixStoreTokenResTag}catch(e){throw this.core.logger.error("uploadFile:: getMixStoreToken error",e),new UploadError("getMixStoreToken error",e,this.curProvider,this.mixStorePolicy)}return this.curProvider===In.s3?this.s3Upload(e,t):this.nosUpload(e,t)}))}nosUpload(e,t){var r,n;return __awaiter(this,void 0,void 0,(function*(){const a=Dr(this.core,"config.cdn.bucket"),i={tag:e.nosScenes||a||"nim",expireSec:e.nosSurvivalTime};let o,s;if(!t)try{o=yield this.core.sendCmd("getNosToken",{responseBody:getUploadResponseFormat(e.type),nosToken:i})}catch(e){throw this.core.logger.error("uploadFile:: getNosToken error",e),new UploadError("getNosToken error",e,1)}try{const r=o?o.content.nosToken:t;this.core.logger.debug("uploadFile:: uploadFile params",{nosToken:r,chunkUploadHost:this.config.chunkUploadHost,commonUploadHost:this.config.commonUploadHost,platform:T.platform}),s=yield this.core.adapters.uploadFile(Object.assign(Object.assign({},e),{nosToken:r,chunkUploadHost:this.config.chunkUploadHost,commonUploadHost:this.config.commonUploadHost,maxSize:e.maxSize||this.config.chunkMaxSize}))}catch(n){if(this.core.logger.error("uploadFile::nos uploadFile error",n),t){if(0===this.nosErrorCount){try{this._addCircuitTimer()}catch(t){throw new UploadError("upload file error",t,this.curProvider,this.mixStorePolicy,e.file||e.filePath)}return this.nosErrorCount=null===(r=this.mixStorePolicy.nosPolicy)||void 0===r?void 0:r.uploadConfig.retryPolicy.retry,this.uploadFile(e)}return this.nosErrorCount--,this.nosUpload(e,t)}throw new UploadError("nos uploadFile error",n,1)}const c=null==s?void 0:s.type,l=c&&c.indexOf("/")>-1?c.slice(0,c.indexOf("/")):"",d={image:"imageInfo",video:"vinfo",audio:"vinfo"};let h,p=this.config.uploadReplaceFormat.replace("{host}",this.config.cdn.cdnDomain||this.config.cdn.defaultCdnDomain).replace("{object}",o?o.content.nosToken.objectName:null==t?void 0:t.objectName);if(t&&t.shortUrl&&(p=t.shortUrl),!d[l])return Object.assign({url:p},s);try{p.indexOf("_im_url=1")<0&&(h=yield this.core.adapters.request(`${p}?${d[l]}`,{method:"GET",dataType:"json",timeout:5e3}))}catch(e){return this.core.logger.error("uploadFile:: fetch file info error",e),Object.assign({url:p},s)}if(h){const{data:e}=h,t="imageInfo"===d[l]?e:null===(n=null==e?void 0:e.GetVideoInfo)||void 0===n?void 0:n.VideoInfo,r={url:p,name:s.name,size:s.size,ext:s.ext,w:t.Width,h:t.Height,orientation:t.Orientation,dur:t.Duration,audioCodec:t.AudioCodec,videoCodec:t.VideoCodec,container:t.Container};return pn(r,(function(e,t){return void 0!==t}))}return Object.assign({url:p},s)}))}getNosCdnHost(){var e;return __awaiter(this,void 0,void 0,(function*(){let t;try{t=yield this.core.sendCmd("getNosCdnHost")}catch(e){return void this.logger.error("getNosCdnHost::error",e)}if(!t)return;const r=null===(e=null==t?void 0:t.content)||void 0===e?void 0:e.nosConfigTag,n=parseInt(null==r?void 0:r.expire);0!==n&&r.cdnDomain?-1===n?(this.config.cdn.bucket=r.bucket,this.config.cdn.cdnDomain=r.cdnDomain,this.config.cdn.objectNamePrefix=r.objectNamePrefix):(this.config.cdn.bucket=r.bucket,this.config.cdn.cdnDomain=r.cdnDomain,this.config.cdn.objectNamePrefix=r.objectNamePrefix,this.nosCdnHostTimer=this.core.timerManager.addTimer((()=>{this.getNosCdnHost()}),1e3*n)):(this.config.cdn.bucket="",this.config.cdn.cdnDomain="",this.config.cdn.objectNamePrefix="")}))}getGrayscaleConfig(e){var t;return __awaiter(this,void 0,void 0,(function*(){if(T.localStorage)try{T.localStorage.getItem&&T.localStorage.getItem(this.GRAYKEY)&&(this.grayConfig=JSON.parse(T.localStorage.getItem(this.GRAYKEY))[e])}catch(e){T.localStorage.getItem(this.GRAYKEY)&&this.core.logger.error("uploadFile:: JSON.parse grayscaleConfig error ",e)}if(!this.grayConfig||this.grayConfig.timeStamp+1e3*this.grayConfig.ttl<(new Date).getTime()){const t=yield this.core.sendCmd("getGrayscaleConfig",{config:{}});if(t.content&&t.content.grayConfigTag){this.logger.log("uploadFile::getAppGrayConfigRequest success ");try{this.grayConfig=JSON.parse(t.content.grayConfigTag.config),this.grayConfig.ttl=JSON.parse(t.content.grayConfigTag.ttl)}catch(e){this.logger.error("getGrayscaleConfig error",e)}if(!this.grayConfig)return;const r=T.localStorage.getItem(this.GRAYKEY)?JSON.parse(T.localStorage.getItem(this.GRAYKEY)):{};this.grayConfig.timeStamp=(new Date).getTime(),r[e]=this.grayConfig,T.localStorage.setItem(this.GRAYKEY,JSON.stringify(r))}else this.logger.debug("uploadFile:: result grayConfig:",t.content)}(null===(t=this.grayConfig)||void 0===t?void 0:t.mixStoreEnable)&&(yield this._getMixStorePolicy(e))}))}_getMixStorePolicy(e){return __awaiter(this,void 0,void 0,(function*(){const t=(new Date).getTime();if(T.localStorage)try{if(this.mixStorePolicy=JSON.parse(T.localStorage.getItem(this.MIXSTOREKEY))[e],this.curProvider=parseInt(this.mixStorePolicy.providers[0]),this.mixStorePolicy.timeStamp&&this.mixStorePolicy.timeStamp+1e3*this.mixStorePolicy.ttl>t){const r=this.mixStorePolicy.timeStamp+1e3*this.mixStorePolicy.ttl-t;this.core.timerManager.addTimer(this._getMixStorePolicy.bind(this,e),r)}}catch(t){T.localStorage.getItem(this.MIXSTOREKEY)&&JSON.parse(T.localStorage.getItem(this.MIXSTOREKEY))[e]&&this.core.logger.error("uploadFile:: JSON.parse mixStorePolicy error ",t)}if(!this.mixStorePolicy||this.mixStorePolicy.timeStamp+1e3*this.mixStorePolicy.ttl<=t)try{const t=(yield this.core.sendCmd("getMixStorePolicy",{supportType:this.s3?[1,2]:[1]})).content.mixStorePolicyTag;this.mixStorePolicy={providers:[],timeStamp:0,ttl:0,s3Policy:null,nosPolicy:null},this.mixStorePolicy.ttl=Number(t.ttl),this.mixStorePolicy.providers=t.providers.split(","),this.circuitTimer&&this.core.timerManager.deleteTimer(this.circuitTimer),this.curProvider=parseInt(this.mixStorePolicy.providers[0]),this.mixStorePolicy.nosPolicy=t.nosPolicy?JSON.parse(t.nosPolicy):null,this.mixStorePolicy.s3Policy=t.s3Policy?JSON.parse(t.s3Policy):null,null===this.mixStorePolicy.s3Policy?this.mixStorePolicy.providers=["1"]:null===this.mixStorePolicy.nosPolicy?this.mixStorePolicy.providers=["2"]:this.mixStorePolicy.providers=this.mixStorePolicy.s3Policy.priority<this.mixStorePolicy.nosPolicy.priority?["2","1"]:["1","2"],this.core.timerManager.addTimer(this._getMixStorePolicy.bind(this,e),1e3*this.mixStorePolicy.ttl);const r=T.localStorage.getItem(this.MIXSTOREKEY)?JSON.parse(T.localStorage.getItem(this.MIXSTOREKEY)):{};this.mixStorePolicy.timeStamp=(new Date).getTime(),r[e]=this.mixStorePolicy,T.localStorage.setItem(this.MIXSTOREKEY,JSON.stringify(r))}catch(t){if(this.logger.error("getMixStorePolicy error",t),0===this.mixStoreErrorCount)throw new Error("getMixStorePolicy all count error");this._getMixStorePolicy(e),this.mixStoreErrorCount--}this.mixStorePolicy.nosPolicy&&(this.nosErrorCount=this.mixStorePolicy.nosPolicy.uploadConfig.retryPolicy.retry)}))}s3Upload(e,t){return __awaiter(this,void 0,void 0,(function*(){let r;if(e.file)r=e.file;else if("string"==typeof e.fileInput){this.logger.warn("fileInput will abandon,Please use file or filepath");const t=document.getElementById(e.fileInput);if(!(t&&t.files&&t.files[0]))throw new Error("Can not get file from fileInput");r=t.files[0]}else{if(!(e.fileInput&&e.fileInput.files&&e.fileInput.files[0]))throw new Error(`Can not get file from fileInput ${e.fileInput}`);r=e.fileInput.files[0]}if(!this.mixStorePolicy.s3Policy)throw new Error("dont get s3 policy");const n={accessKeyId:t.accessKeyId,secretAccessKey:t.secretAccessKey,sessionToken:t.sessionToken,region:t.region,maxRetries:this.mixStorePolicy.s3Policy.uploadConfig.retryPolicy.retry},a=new(0,this.s3);a.config.update(n);const i=decodeURIComponent(t.bucket),o=decodeURIComponent(t.objectName),s=r,c={Bucket:i,Key:o,Body:s,Metadata:{token:t.token},ContentType:s.type||"application/octet-stream"};this.core.logger.debug("uploadFile:: s3 upload params:",c);const l=a.upload(c);return new Promise((r=>{const n=(new Date).getTime();l.send(((a,i)=>{var o,c;if(a){this.logger.error("uploadFile:","api::s3:upload file failed",a),this.core.reporter.reportTraceStart("exceptions",{user_id:this.core.options.account,trace_id:null===(c=null===(o=this.core)||void 0===o?void 0:o.socket)||void 0===c?void 0:c.sessionId,start_time:n,action:1}),this.core.reporter.reportTraceUpdateV2("exceptions",{code:"number"==typeof a.status?a.status:"number"==typeof a.code?a.code:0,description:a.message||`${a.code}`,operation_type:1,target:a.hostname}),this.core.reporter.reportTraceEnd("exceptions",1);try{this._addCircuitTimer()}catch(a){throw new UploadError("upload file error",a,this.curProvider,this.mixStorePolicy,e.file||e.filePath)}r(this.uploadFile(e))}else{let e=this.mixStorePolicy.s3Policy.cdnSchema;e=e.replace("{cdnDomain}",this.mixStorePolicy.s3Policy.dlcdn),e=e.replace("{objectName}",i.Key),r({size:s.size,name:s.name,url:t.shortUrl?t.shortUrl:e,ext:s.name.split(".")[1]||"unknown"})}}))}))}))}getPrivateUrl(e){var t;if(!new RegExp(/http(s)?:\/\/([\w-]+\.)+[\w-]+(\/[\w- ./?%&=]*)?/).test(e))return this.logger.error("illegal file url:"+e),"";const[r,n,a,i,o,s,c,l]=/^(?:([A-Za-z]+):)?(\/{0,3})([0-9.\-A-Za-z]+)(?::(\d+))?(?:\/([^?#]*))?(?:\?([^#]*))?(?:#(.*))?$/.exec(e);if(null===(t=this.grayConfig)||void 0===t?void 0:t.mixStoreEnable){const t=this._getUrlType(e);return t===In.s3&&this.mixStorePolicy.s3Policy&&(e=this.mixStorePolicy.s3Policy.cdnSchema.replace("{cdnDomain}",this.mixStorePolicy.s3Policy.dlcdn).replace("{objectName}",s)),t===In.nos&&this.mixStorePolicy.nosPolicy&&(e=this.mixStorePolicy.nosPolicy.cdnSchema.replace("{cdnDomain}",this.mixStorePolicy.nosPolicy.dlcdn).replace("{objectName}",s)),e}const{downloadUrl:d,downloadHostList:h,nosCdnEnable:p}=this.config,u=this.config.cdn.cdnDomain,m=this.config.cdn.objectNamePrefix?decodeURIComponent(this.config.cdn.objectNamePrefix):"",g=decodeURIComponent(s),y=g.indexOf(m);if(u&&y>-1&&p)return`${n}${u}/${g.slice(y)}`;if(h.includes(i)&&s.includes("/")){const e=s.indexOf("/"),t=s.substring(0,e),r=s.substring(e+1);return d.replace("{bucket}",t).replace("{object}",r)}const v=h.filter((e=>"string"==typeof i&&i.includes(e)))[0],f=v?i.replace(v,"").replace(/\W/g,""):null;return f?d.replace("{bucket}",f).replace("{object}",s):e}getOriginUrl(e){return __awaiter(this,void 0,void 0,(function*(){return(yield this.core.sendCmd("getOriginUrl",{nosSafeUrlTag:{safeUrl:e}})).content.nosSafeUrlTag.originUrl}))}getFileToken(e){return __awaiter(this,void 0,void 0,(function*(){validate({type:{type:"number",min:2,max:3},urls:{type:"array",required:!1,itemType:"string"}},e);const t=this.mixStorePolicy.nosPolicy?this.mixStorePolicy.nosPolicy.authPolicy.policyType:null,r=this.mixStorePolicy.s3Policy?this.mixStorePolicy.s3Policy.authPolicy.policyType:null;if(t===String(Sn.dontNeed)&&r===String(Sn.dontNeed))throw this.logger.error("don't need token"),new Error("don't need token");if(e.type===Sn.time){if(t&&t.indexOf(String(Sn.time))>=0||r&&r.indexOf(String(Sn.time))>0)return this.getFileAuthToken(e);throw this.logger.error("don't support time token "),new Error("don't support type time token ")}{if(!e.urls||!e.urls.length)throw this.logger.error("urls is required when urls token"),new Error("urls is required when urls token");let n=[],a=[];if(e.urls.forEach((e=>{const t=this._getUrlType(e);t===In.nos&&a.push(e),t===In.s3&&n.push(e)})),(!r||0!==n.length&&r.indexOf(String(Sn.urls))<0)&&(this.logger.warn("s3 url don't support url token"),n=[]),(!t||0!==a.length&&t.indexOf(String(Sn.urls))<0)&&(this.logger.warn("nos url don't support url token"),a=[]),0===n.length&&0===a.length)throw this.logger.error("not support urls"),new Error("not support urls");if(0===n.length||0===a.length)return e.urls=JSON.stringify(e.urls),this.getFileAuthToken(e)}}))}getFileAuthToken(e){return __awaiter(this,void 0,void 0,(function*(){return(yield this.core.sendCmd("getFileAuthToken",{mixStoreAuthTokenReqTag:e})).content.mixStoreAuthTokenResTag}))}_getUrlType(e){return this.mixStorePolicy.nosPolicy&&this.mixStorePolicy.nosPolicy.dlcdns.some((t=>e.indexOf(t)>=0))?In.nos:this.mixStorePolicy.s3Policy&&this.mixStorePolicy.s3Policy.dlcdns.some((t=>e.indexOf(t)>=0))?In.s3:null}_addCircuitTimer(){const e=this.mixStorePolicy.providers,t=e[(e.indexOf(String(this.curProvider))+1)%e.length];if(t===e[0])throw new Error("uploadFile all policy fail");const r=Dr(this.mixStorePolicy,"s3Policy.uploadConfig.retryPolicy");if(r&&r.retryNext&&t&&(this.logger.log(`uploadFile:: upload policy will change,now policy:${this.curProvider} nextProvider:${t}`),this.curProvider=parseInt(t),this.mixStorePolicy.nosPolicy&&this.mixStorePolicy.s3Policy)){const e=this.mixStorePolicy[this.curProvider===In.nos?"nosPolicy":"s3Policy"].uploadConfig.retryPolicy.circuit;if(!e||0===e)return;this.circuitTimer=this.core.timerManager.addTimer((()=>{this.logger.log(`uploadFile:: upload policy will change,now policy:${this.curProvider} nextProvider:${parseInt(this.mixStorePolicy.providers[0])}`),this.curProvider=parseInt(this.mixStorePolicy.providers[0]),this.core.timerManager.deleteTimer(this.circuitTimer)}),1e3*e)}}process(e){const t=this[e.cmd+"Handler"];return"function"==typeof t?t.call(this,e):e.error&&!e.error.ignore?Promise.reject(e.error):Promise.resolve(e)}}!function(e){e[e.ASC=1]="ASC",e[e.DESC=2]="DESC"}(Tn||(Tn={})),function(e){e[e.reorderWeight=0]="reorderWeight",e[e.createTime=1]="createTime",e[e.totalMember=2]="totalMember"}(qn||(qn={})),function(e){e[e.square=1]="square",e[e.person=2]="person"}(wn||(wn={}));class Service{constructor(e,t){this.name=e,this.core=t,this.name=e,this.logger=t.logger,this.core=t}process(e){const t=this[e.cmd+"Handler"];return"function"==typeof t?t.call(this,e):e.error&&!e.error.ignore?Promise.reject(e.error):Promise.resolve(e)}}const _n={"24_15":"qchatSubscribe","24_27":"qchatGetUnreadInfo","24_48":"qchatCreateChannel","24_49":"qchatDeleteChannel","24_50":"qchatUpdateChannel","24_51":"qchatGetChannels","24_52":"qchatGetChannelsByPage","24_53":"qchatGetMembersByPage","24_54":"qchatUpdateWhiteBlackRole","24_55":"qchatGetWhiteBlackRolesPage","24_56":"qchatUpdateWhiteBlackMembers","24_57":"qchatGetWhiteBlackMembersPage","24_58":"qchatGetExistingWhiteBlackRoles","24_59":"qchatGetExistingWhiteBlackMembers","24_60":"qchatUpdateCategoryInfoOfChannel","24_109":"qchatCreateChannelCategory","24_110":"qchatRemoveChannelCategory","24_111":"qchatUpdateChannelCategory","24_112":"qchatGetChannelCategoriesByID","24_113":"qchatUpdateChannelCategoryWhiteBlackRole","24_114":"qchatGetChannelCategoryWhiteBlackRolesPage","24_115":"qchatUpdateChannelCategoryWhiteBlackMembers","24_116":"qchatGetChannelCategoryWhiteBlackMembersPage","24_117":"qchatGetChannelCategoryWhiteBlackRoles","24_118":"qchatGetChannelCategoryWhiteBlackMembers","24_119":"qchatGetChannelCategoriesPage","24_120":"qchatGetChannelCategoryChannelsPage","24_93":"qchatGetChannelSearchByPage","24_95":"qchatChannelMemberSearch","25_8":"qchatGetRoleIdsByServerId","25_9":"qchatSubscribeAsVisitor"},Rn={serverId:1,channelId:2,ackTimestamp:3,unreadCount:4,mentionedCount:5,maxCount:6,lastMsgTime:7},kn={channelInfo:{channelId:1,serverId:2,name:4,topic:5,ext:6,type:7,validFlag:8,createTime:9,updateTime:10,owner:11,viewMode:12,categoryId:13,syncMode:14,reorderWeight:15,visitorMode:16},antispamTag:{antiSpamBusinessId:1},memberInfo:{serverId:1,accid:3,nick:4,avatar:5,ext:6,type:7,joinTime:8,inviter:9,validFlag:10,createTime:11,updateTime:12},serverRole:{serverId:1,roleId:2,name:3,icon:4,ext:5,auths:6,type:7,memberCount:8,priority:9,createTime:10,updateTime:11},qchatSubReqTag:{type:1,opeType:2},qchatChannelIdInfoTag:{serverId:1,channelId:2},unreadInfo:Rn,qchatGetChannelListPageTag:{serverId:1,timetag:2,limit:3},qchatGetMembersByPageTag:{serverId:1,channelId:2,timetag:3,limit:4},qchatUpdateWhiteBlackRoleTag:{serverId:1,channelId:2,type:3,opeType:4,roleId:5},qchatGetWhiteBlackRolesPageTag:{serverId:1,channelId:2,type:3,timetag:4,limit:5},qchatUpdateWhiteBlackMembersTag:{serverId:1,channelId:2,type:3,opeType:4,toAccids:5},qchatGetWhiteBlackMembersPageTag:{serverId:1,channelId:2,type:3,timetag:4,limit:5},qchatGetExistingWhiteBlackRolesTag:{serverId:1,channelId:2,type:3,roleIds:4},qchatGetExistingWhiteBlackMembersTag:{serverId:1,channelId:2,type:3,accids:4},QChatChannelCategoryInfo:{categoryId:1,serverId:2,name:4,ext:5,owner:6,viewMode:7,validFlag:8,createTime:9,updateTime:10,channelNumber:11},qchatUpdateChannelCategoryWhiteBlackRoleTag:{serverId:1,categoryId:2,type:3,opeType:4,roleId:5},qchatGetChannelCategoryWhiteBlackRolesPageTag:{serverId:1,categoryId:2,type:3,timetag:4,limit:5},qchatUpdateChannelCategoryWhiteBlackMembersTag:{serverId:1,categoryId:2,type:3,opeType:4,toAccids:5},qchatGetChannelCategoryWhiteBlackMembersPageTag:{serverId:1,categoryId:2,type:3,timetag:4,limit:5},qchatGetChannelCategoryWhiteBlackRolesTag:{serverId:1,categoryId:2,type:3,roleIds:4},qchatGetChannelCategoryWhiteBlackMembersTag:{serverId:1,categoryId:2,type:3,accids:4},qchatGetChannelCategoriesPageTag:{serverId:1,timetag:2,limit:3},qchatGetChannelCategoryChannelsPageTag:{serverId:1,categoryId:2,timetag:3,limit:4},qchatGetChannelSearchByPageTag:{keyword:1,startTime:2,endTime:3,order:4,limit:5,serverId:6,sort:7,cursor:8},qchatUpdateChannelTag:{channelId:1,name:4,topic:5,ext:6,viewMode:12,visitorMode:16},serverRoles:{serverId:1,roleIds:2,timeTag:3},qchatChannelMemberSearchTag:{serverId:1,channelId:2,keyword:3,limit:4},qchatChannelMemberInfo:{serverId:1,channelId:2,avatar:3,accid:4,nick:5,createTime:6,updateTime:7}},En=invertSerializeMap(kn),Pn={qchatCreateChannel:{sid:24,cid:48,service:"qchatChannel",params:[{type:"Property",name:"channelInfo",reflectMapper:kn.channelInfo},{type:"Property",name:"antispamTag",reflectMapper:kn.antispamTag}],response:[{type:"Property",name:"channelInfo",reflectMapper:En.channelInfo}]},qchatDeleteChannel:{sid:24,cid:49,service:"qchatChannel",params:[{type:"Long",name:"channelId"}]},qchatUpdateChannel:{sid:24,cid:50,service:"qchatChannel",params:[{type:"Property",name:"channelInfo",reflectMapper:kn.qchatUpdateChannelTag},{type:"Property",name:"antispamTag",reflectMapper:kn.antispamTag}],response:[{type:"Property",name:"channelInfo",reflectMapper:En.channelInfo}]},qchatGetChannels:{sid:24,cid:51,service:"qchatChannel",params:[{type:"LongArray",name:"channelIds"}],response:[{type:"PropertyArray",name:"channelList",reflectMapper:En.channelInfo}]},qchatGetChannelsByPage:{sid:24,cid:52,service:"qchatChannel",params:[{type:"Property",name:"qchatGetChannelListPageTag",reflectMapper:kn.qchatGetChannelListPageTag}],response:[{type:"Property",name:"listQueryTag",reflectMapper:{1:"hasMore",2:"nextTimetag"}},{type:"PropertyArray",name:"datas",reflectMapper:En.channelInfo}]},qchatGetMembersByPage:{sid:24,cid:53,service:"qchatChannel",params:[{type:"Property",name:"qchatGetMembersByPageTag",reflectMapper:kn.qchatGetMembersByPageTag}],response:[{type:"Property",name:"listQueryTag",reflectMapper:{1:"hasMore",2:"nextTimetag"}},{type:"PropertyArray",name:"datas",reflectMapper:En.memberInfo}]},qchatUpdateWhiteBlackRole:{sid:24,cid:54,service:"qchatChannel",params:[{type:"Property",name:"qchatUpdateWhiteBlackRoleTag",reflectMapper:kn.qchatUpdateWhiteBlackRoleTag}],response:[{type:"Property",name:"listQueryTag",reflectMapper:{1:"hasMore",2:"nextTimetag"}},{type:"PropertyArray",name:"datas",reflectMapper:En.memberInfo}]},qchatGetWhiteBlackRolesPage:{sid:24,cid:55,service:"qchatChannel",params:[{type:"Property",name:"qchatGetWhiteBlackRolesPageTag",reflectMapper:kn.qchatGetWhiteBlackRolesPageTag}],response:[{type:"Property",name:"listQueryTag",reflectMapper:{1:"hasMore",2:"nextTimetag"}},{type:"PropertyArray",name:"datas",reflectMapper:En.serverRole}]},qchatUpdateWhiteBlackMembers:{sid:24,cid:56,service:"qchatChannel",params:[{type:"Property",name:"qchatUpdateWhiteBlackMembersTag",reflectMapper:kn.qchatUpdateWhiteBlackMembersTag}]},qchatGetWhiteBlackMembersPage:{sid:24,cid:57,service:"qchatChannel",params:[{type:"Property",name:"qchatGetWhiteBlackMembersPageTag",reflectMapper:kn.qchatGetWhiteBlackMembersPageTag}],response:[{type:"Property",name:"listQueryTag",reflectMapper:{1:"hasMore",2:"nextTimetag"}},{type:"PropertyArray",name:"datas",reflectMapper:En.memberInfo}]},qchatGetExistingWhiteBlackRoles:{sid:24,cid:58,service:"qchatChannel",params:[{type:"Property",name:"qchatGetExistingWhiteBlackRolesTag",reflectMapper:kn.qchatGetExistingWhiteBlackRolesTag}],response:[{type:"PropertyArray",name:"datas",reflectMapper:En.serverRole}]},qchatGetExistingWhiteBlackMembers:{sid:24,cid:59,service:"qchatChannel",params:[{type:"Property",name:"qchatGetExistingWhiteBlackMembersTag",reflectMapper:kn.qchatGetExistingWhiteBlackMembersTag}],response:[{type:"PropertyArray",name:"datas",reflectMapper:En.memberInfo}]},qchatUpdateCategoryInfoOfChannel:{sid:24,cid:60,service:"qchatChannel",params:[{type:"Property",name:"qchatUpdateCategoryInfoOfChannelTag",reflectMapper:kn.channelInfo}],response:[{type:"Property",name:"channelInfo",reflectMapper:En.channelInfo}]},qchatCreateChannelCategory:{sid:24,cid:109,service:"qchatChannel",params:[{type:"Property",name:"qchatCreateChannelCategoryTag",reflectMapper:kn.QChatChannelCategoryInfo}],response:[{type:"Property",name:"QChatChannelCategoryInfo",reflectMapper:En.QChatChannelCategoryInfo}]},qchatRemoveChannelCategory:{sid:24,cid:110,service:"qchatChannel",params:[{type:"Long",name:"categoryId"}]},qchatUpdateChannelCategory:{sid:24,cid:111,service:"qchatChannel",params:[{type:"Property",name:"qchatUpdateChannelCategoryTag",reflectMapper:kn.QChatChannelCategoryInfo}],response:[{type:"Property",name:"QChatChannelCategoryInfo",reflectMapper:En.QChatChannelCategoryInfo}]},qchatGetChannelCategoriesByID:{sid:24,cid:112,service:"qchatChannel",params:[{type:"LongArray",name:"categoryIds"}],response:[{type:"PropertyArray",name:"channelCategoryList",reflectMapper:En.QChatChannelCategoryInfo}]},qchatUpdateChannelCategoryWhiteBlackRole:{sid:24,cid:113,service:"qchatChannel",params:[{type:"Property",name:"qchatUpdateChannelCategoryWhiteBlackRoleTag",reflectMapper:kn.qchatUpdateChannelCategoryWhiteBlackRoleTag}]},qchatGetChannelCategoryWhiteBlackRolesPage:{sid:24,cid:114,service:"qchatChannel",params:[{type:"Property",name:"qchatGetChannelCategoryWhiteBlackRolesPageTag",reflectMapper:kn.qchatGetChannelCategoryWhiteBlackRolesPageTag}],response:[{type:"Property",name:"listQueryTag",reflectMapper:{1:"hasMore",2:"nextTimetag"}},{type:"PropertyArray",name:"datas",reflectMapper:En.serverRole}]},qchatUpdateChannelCategoryWhiteBlackMembers:{sid:24,cid:115,service:"qchatChannel",params:[{type:"Property",name:"qchatUpdateChannelCategoryWhiteBlackMembersTag",reflectMapper:kn.qchatUpdateChannelCategoryWhiteBlackMembersTag}]},qchatGetChannelCategoryWhiteBlackMembersPage:{sid:24,cid:116,service:"qchatChannel",params:[{type:"Property",name:"qchatGetChannelCategoryWhiteBlackMembersPageTag",reflectMapper:kn.qchatGetChannelCategoryWhiteBlackMembersPageTag}],response:[{type:"Property",name:"listQueryTag",reflectMapper:{1:"hasMore",2:"nextTimetag"}},{type:"PropertyArray",name:"datas",reflectMapper:En.memberInfo}]},qchatGetChannelCategoryWhiteBlackRoles:{sid:24,cid:117,service:"qchatChannel",params:[{type:"Property",name:"qchatGetChannelCategoryWhiteBlackRolesTag",reflectMapper:kn.qchatGetChannelCategoryWhiteBlackRolesTag}],response:[{type:"PropertyArray",name:"datas",reflectMapper:En.serverRole}]},qchatGetChannelCategoryWhiteBlackMembers:{sid:24,cid:118,service:"qchatChannel",params:[{type:"Property",name:"qchatGetChannelCategoryWhiteBlackMembersTag",reflectMapper:kn.qchatGetChannelCategoryWhiteBlackMembersTag}],response:[{type:"PropertyArray",name:"datas",reflectMapper:En.memberInfo}]},qchatGetChannelCategoriesPage:{sid:24,cid:119,service:"qchatChannel",params:[{type:"Property",name:"qchatGetChannelCategoriesPageTag",reflectMapper:kn.qchatGetChannelCategoriesPageTag}],response:[{type:"Property",name:"listQueryTag",reflectMapper:{1:"hasMore",2:"nextTimetag"}},{type:"PropertyArray",name:"datas",reflectMapper:En.QChatChannelCategoryInfo}]},qchatGetChannelCategoryChannelsPage:{sid:24,cid:120,service:"qchatChannel",params:[{type:"Property",name:"qchatGetChannelCategoryChannelsPageTag",reflectMapper:kn.qchatGetChannelCategoryChannelsPageTag}],response:[{type:"Property",name:"listQueryTag",reflectMapper:{1:"hasMore",2:"nextTimetag"}},{type:"PropertyArray",name:"datas",reflectMapper:En.channelInfo}]},qchatSubscribe:{sid:24,cid:15,service:"qchatChannel",params:[{type:"Property",name:"qchatSubReqTag",reflectMapper:kn.qchatSubReqTag},{type:"PropertyArray",name:"channels",reflectMapper:kn.qchatChannelIdInfoTag}],response:[{type:"PropertyArray",name:"unreadInfos",reflectMapper:En.unreadInfo},{type:"PropertyArray",name:"failedChannels",reflectMapper:En.qchatChannelIdInfoTag}]},qchatGetUnreadInfo:{sid:24,cid:27,service:"qchatChannel",params:[{type:"PropertyArray",name:"channels",reflectMapper:kn.qchatChannelIdInfoTag}],response:[{type:"PropertyArray",name:"unreadInfos",reflectMapper:En.unreadInfo}]},qchatGetChannelSearchByPage:{sid:24,cid:93,service:"qchatChannel",params:[{type:"Property",name:"qchatGetChannelSearchByPageTag",reflectMapper:kn.qchatGetChannelSearchByPageTag}],response:[{type:"Property",name:"listQueryTag",reflectMapper:{1:"hasMore",2:"nextTimetag",3:"cursor"}},{type:"PropertyArray",name:"datas",reflectMapper:En.channelInfo}]},qchatGetRoleIdsByServerId:{sid:25,cid:8,service:"qchatChannel",params:[{type:"Property",name:"qchatGetRoleIdsByServerIdTag",reflectMapper:{serverIdTimeTags:1}}],response:[{type:"PropertyArray",name:"serverRoles",reflectMapper:En.serverRoles},{type:"LongArray",name:"failServerIds"}]},qchatChannelMemberSearch:{sid:24,cid:95,service:"qchatChannel",params:[{type:"Property",name:"qchatChannelMemberSearchTag",reflectMapper:kn.qchatChannelMemberSearchTag}],response:[{type:"PropertyArray",name:"datas",reflectMapper:En.qchatChannelMemberInfo}]},qchatSubscribeAsVisitor:{sid:25,cid:9,service:"qchatChannel",params:[{type:"Property",name:"tag",reflectMapper:kn.qchatSubReqTag},{type:"PropertyArray",name:"datas",reflectMapper:kn.qchatChannelIdInfoTag}],response:[{type:"PropertyArray",name:"failedArr",reflectMapper:En.qchatChannelIdInfoTag}]}},An={"24_31":"qchatCreateServer","24_32":"qchatDeleteServer","24_33":"qchatUpdateServer","24_34":"qchatGetServers","24_35":"qchatGetServersByPage","24_36":"qchatInviteServerMembers","24_37":"qchatAcceptServerInvite","24_38":"qchatRejectInviteServer","24_39":"qchatApplyServerJoin","24_40":"qchatAcceptServerApply","24_41":"qchatRejectServerApply","24_42":"qchatKickServerMembers","24_43":"qchatLeaveServer","24_44":"qchatUpdateMyMemberInfo","24_45":"qchatUpdateServerMemberInfo","24_46":"qchatGetServerMembers","24_47":"qchatGetServerMembersByPage","24_104":"qchatUpdateServerMemberBan","24_105":"qchatGetBannedMembersByPage","24_91":"qchatServerSearchByPage","24_92":"qchatServerMemberSearchByPage","24_122":"qchatGenerateInviteCode","24_123":"qchatJoinByInviteCode","24_124":"qchatGetInviteApplyRecordOfServer","24_125":"qchatGetInviteApplyRecordOfSelf","25_5":"qchatClearServersUnread","25_7":"qchatSubscribeChannelsByServers","25_10":"qchatEnterAsVisitor","25_11":"qchatLeaveAsVisitor"},On={serverInfo:{serverId:1,name:3,icon:4,ext:5,owner:6,memberNumber:7,inviteMode:8,applyMode:9,validFlag:10,createTime:11,updateTime:12,channelNumber:13,categoryNumber:14,searchType:15,searchEnable:16,reorderWeight:17},antispamTag:{antiSpamBusinessId:1},memberInfo:{serverId:1,accid:3,nick:4,avatar:5,ext:6,type:7,joinTime:8,inviter:9,validFlag:10,createTime:11,updateTime:12},otherMemberInfo:{serverId:1,accid:3,nick:4,avatar:5,type:7,joinTime:8,inviter:9,validFlag:10,createTime:11,updateTime:12},getServerListPageTag:{timestamp:1,limit:2},getServerMemberListPageTag:{serverId:1,timetag:2,limit:3},updateServerMemberBanTag:{serverId:1,opeType:2,accid:3,ext:4},getBannedMembersByPageTag:{serverId:1,timetag:2,limit:3},serverMemberBanInfo:{serverId:1,appid:2,accid:3,ext:4,banTime:5,validFlag:6,createTime:7,updateTime:8},serverSearchByPageTag:{keyword:1,startTime:2,endTime:3,order:4,limit:5,serverType:6,searchType:7,sort:8,cursor:9},serverMemberSearchByPageTag:{serverId:1,keyword:3,limit:4},inviteRespParamTag:{requestId:1},applyRespParamTag:{requestId:1,expireTime:2},inviteApplyRecord:{accid:1,type:2,serverId:3,status:4,requestId:5,createTime:6,updateTime:7,expireTime:8,data:9,recordId:10},clearServersUnreadTag:{successServerIds:1,failServerIds:2,ackTimestamp:3},unreadInfo:Rn},xn=invertSerializeMap(On),Un={qchatCreateServer:{sid:24,cid:31,service:"qchatServer",params:[{type:"Property",name:"serverInfo",reflectMapper:On.serverInfo},{type:"Property",name:"antispamTag",reflectMapper:On.antispamTag}],response:[{type:"Property",name:"serverInfo",reflectMapper:xn.serverInfo}]},qchatDeleteServer:{sid:24,cid:32,service:"qchatServer",params:[{type:"Long",name:"serverId"}]},qchatUpdateServer:{sid:24,cid:33,service:"qchatServer",params:[{type:"Property",name:"serverInfo",reflectMapper:On.serverInfo},{type:"Property",name:"antispamTag",reflectMapper:On.antispamTag}],response:[{type:"Property",name:"serverInfo",reflectMapper:xn.serverInfo}]},qchatGetServers:{sid:24,cid:34,service:"qchatServer",params:[{type:"LongArray",name:"serverIds"}],response:[{type:"PropertyArray",name:"serverList",reflectMapper:xn.serverInfo}]},qchatGetServersByPage:{sid:24,cid:35,service:"qchatServer",params:[{type:"Property",name:"tag",reflectMapper:On.getServerListPageTag}],response:[{type:"Property",name:"listQueryTag",reflectMapper:{1:"hasMore",2:"nextTimetag"}},{type:"PropertyArray",name:"datas",reflectMapper:xn.serverInfo}]},qchatInviteServerMembers:{sid:24,cid:36,service:"qchatServer",params:[{type:"Long",name:"serverId"},{type:"StrArray",name:"accids"},{type:"String",name:"ps"},{type:"Property",name:"params",reflectMapper:{ttl:1}}],response:[{type:"StrArray",name:"failByOverAccids"},{type:"StrArray",name:"failByBanAccids"},{type:"Property",name:"record",reflectMapper:xn.applyRespParamTag}]},qchatAcceptServerInvite:{sid:24,cid:37,service:"qchatServer",params:[{type:"Long",name:"serverId"},{type:"String",name:"accid"},{type:"Property",name:"recordInfo",reflectMapper:On.inviteRespParamTag}]},qchatRejectInviteServer:{sid:24,cid:38,service:"qchatServer",params:[{type:"Long",name:"serverId"},{type:"String",name:"accid"},{type:"String",name:"ps"},{type:"Property",name:"recordInfo",reflectMapper:On.inviteRespParamTag}]},qchatApplyServerJoin:{sid:24,cid:39,service:"qchatServer",params:[{type:"Long",name:"serverId"},{type:"String",name:"ps"},{type:"Property",name:"params",reflectMapper:{ttl:1}}],response:[{type:"Property",name:"data",reflectMapper:xn.applyRespParamTag}]},qchatAcceptServerApply:{sid:24,cid:40,service:"qchatServer",params:[{type:"Long",name:"serverId"},{type:"String",name:"accid"},{type:"Property",name:"recordInfo",reflectMapper:On.applyRespParamTag}]},qchatRejectServerApply:{sid:24,cid:41,service:"qchatServer",params:[{type:"Long",name:"serverId"},{type:"String",name:"accid"},{type:"String",name:"ps"},{type:"Property",name:"recordInfo",reflectMapper:On.applyRespParamTag}]},qchatKickServerMembers:{sid:24,cid:42,service:"qchatServer",params:[{type:"Long",name:"serverId"},{type:"StrArray",name:"accids"}]},qchatLeaveServer:{sid:24,cid:43,service:"qchatServer",params:[{type:"Long",name:"serverId"}]},qchatUpdateMyMemberInfo:{sid:24,cid:44,service:"qchatServer",params:[{type:"Property",name:"memberInfo",reflectMapper:On.memberInfo},{type:"Property",name:"antispamTag",reflectMapper:On.antispamTag}],response:[{type:"Property",name:"memberInfo",reflectMapper:xn.memberInfo}]},qchatUpdateServerMemberInfo:{sid:24,cid:45,service:"qchatServer",params:[{type:"Property",name:"memberInfo",reflectMapper:On.otherMemberInfo},{type:"Property",name:"antispamTag",reflectMapper:On.antispamTag}],response:[{type:"Property",name:"memberInfo",reflectMapper:xn.memberInfo}]},qchatGetServerMembers:{sid:24,cid:46,service:"qchatServer",params:[{type:"StrArray",name:"accids"}],response:[{type:"PropertyArray",name:"accidList",reflectMapper:xn.memberInfo}]},qchatGetServerMembersByPage:{sid:24,cid:47,service:"qchatServer",params:[{type:"Property",name:"tag",reflectMapper:On.getServerMemberListPageTag}],response:[{type:"Property",name:"listQueryTag",reflectMapper:{1:"hasMore",2:"nextTimetag"}},{type:"PropertyArray",name:"datas",reflectMapper:xn.memberInfo}]},qchatUpdateServerMemberBan:{sid:24,cid:104,service:"qchatServer",params:[{type:"Property",name:"tag",reflectMapper:On.updateServerMemberBanTag}]},qchatGetBannedMembersByPage:{sid:24,cid:105,service:"qchatServer",params:[{type:"Property",name:"tag",reflectMapper:On.getBannedMembersByPageTag}],response:[{type:"Property",name:"listQueryTag",reflectMapper:{1:"hasMore",2:"nextTimetag"}},{type:"PropertyArray",name:"datas",reflectMapper:xn.serverMemberBanInfo}]},qchatServerSearchByPage:{sid:24,cid:91,service:"qchatServer",params:[{type:"Property",name:"tag",reflectMapper:On.serverSearchByPageTag}],response:[{type:"Property",name:"listQueryTag",reflectMapper:{1:"hasMore",2:"nextTimetag",3:"cursor"}},{type:"PropertyArray",name:"datas",reflectMapper:xn.serverInfo}]},qchatServerMemberSearchByPage:{sid:24,cid:92,service:"qchatServer",params:[{type:"Property",name:"tag",reflectMapper:On.serverMemberSearchByPageTag}],response:[{type:"PropertyArray",name:"members",reflectMapper:xn.serverMemberBanInfo}]},qchatGenerateInviteCode:{sid:24,cid:122,service:"qchatServer",params:[{type:"Property",name:"tag",reflectMapper:{serverId:1,ttl:2}}],response:[{type:"Property",name:"data",reflectMapper:{1:"serverId",2:"requestId",3:"inviteCode",4:"expireTime"}}]},qchatJoinByInviteCode:{sid:24,cid:123,service:"qchatServer",params:[{type:"Property",name:"tag",reflectMapper:{serverId:1,inviteCode:2,ps:3}}]},qchatGetInviteApplyRecordOfServer:{sid:24,cid:124,service:"qchatServer",params:[{type:"Property",name:"tag",reflectMapper:{serverId:1,fromTime:2,toTime:3,reverse:4,limit:5,cursor:6}}],response:[{type:"PropertyArray",name:"data",reflectMapper:xn.inviteApplyRecord}]},qchatGetInviteApplyRecordOfSelf:{sid:24,cid:125,service:"qchatServer",params:[{type:"Property",name:"tag",reflectMapper:{fromTime:1,toTime:2,reverse:3,limit:4,cursor:5}}],response:[{type:"PropertyArray",name:"data",reflectMapper:xn.inviteApplyRecord}]},qchatClearServersUnread:{sid:25,cid:5,service:"qchatServer",params:[{type:"LongArray",name:"serverIds"}],response:[{type:"Property",name:"clearServersUnreadTag",reflectMapper:xn.clearServersUnreadTag}]},qchatSubscribeChannelsByServers:{sid:25,cid:7,service:"qchatServer",params:[{type:"int",name:"type"},{type:"LongArray",name:"serverIds"}],response:[{type:"PropertyArray",name:"unreadInfos",reflectMapper:xn.unreadInfo},{type:"LongArray",name:"failServerIds"}]},qchatEnterAsVisitor:{sid:25,cid:10,service:"qchatServer",params:[{type:"Property",name:"tag",reflectMapper:{serverIds:1}}],response:[{type:"LongArray",name:"failServerIds"}]},qchatLeaveAsVisitor:{sid:25,cid:11,service:"qchatServer",params:[{type:"Property",name:"tag",reflectMapper:{serverIds:1}}],response:[{type:"LongArray",name:"failServerIds"}]}};var jn=Function.prototype,Bn=Object.prototype,Nn=jn.toString,Ln=Bn.hasOwnProperty,Gn=Nn.call(Object);var Qn=function isPlainObject(e){if(!P(e)||"[object Object]"!=g(e))return!1;var t=nn(e);if(null===t)return!0;var r=Ln.call(t,"constructor")&&t.constructor;return"function"==typeof r&&r instanceof r&&Nn.call(r)==Gn};function format(e,t){if(!Qn(t))return{};const r=JSON.parse(JSON.stringify(t)),n=doFormat(e,r);return JSON.parse(JSON.stringify(Object.assign(Object.assign({},r),n)))}function doFormat(e,t){if(!Qn(t))return{};const r={};return Object.keys(e).forEach((n=>{const a=e[n].type;if("string"!=typeof a){const a=doFormat(e[n],t);return void(Object.keys(a).length>0&&(r[n]=a))}const i=e[n],o=i.rawKey||n,s=Fn[a](t,o,i);void 0!==s&&(t[o]=void 0,r[n]=s)})),r}const Fn={number:function(e,t){if(void 0!==e[t])return+e[t]},string:function(e,t){if(void 0!==e[t])return e[t]},boolean:function(e,t){return+e[t]>0||0!=+e[t]&&void 0},enum:function(e,t,r){return r.values[e[t]]},object:function(e,t){if(void 0!==e[t])try{return JSON.parse(e[t])}catch(e){return{}}}};function formatReverse(e,t){if(!Qn(t))return{};const r=JSON.parse(JSON.stringify(t)),n=doFormatReverse(e,r);return JSON.parse(JSON.stringify(Object.assign(Object.assign({},r),n)))}function doFormatReverse(e,t){if(!Qn(t))return Object.keys(e).reduce(((t,r)=>(t[e[r].rawKey||r]=void 0,t)),{});const r={};return Object.keys(e).forEach((n=>{const a=e[n].type;if("string"!=typeof a){const a=doFormatReverse(e[n],t[n]);return Object.assign(r,a),void(t[n]=void 0)}const i=e[n],o=i.rawKey||n,s=Dn[a](t,n,i);t[o]=void 0,r[o]=s})),r}const Dn={number:function(e,t){return e[t]},string:function(e,t){return e[t]},boolean:function(e,t){return!0===e[t]?1:!1===e[t]?0:void 0},enum:function(e,t,r){return r.values[e[t]]},object:function(e,t){if(void 0!==e[t])try{return JSON.stringify(e[t])}catch(e){return""}}},Vn=Dn,$n={serverId:{type:"string"},name:{type:"string"},icon:{type:"string"},ext:{type:"string"},owner:{type:"string"},memberNumber:{type:"number"},inviteMode:{type:"number"},applyMode:{type:"number"},validFlag:{type:"boolean"},createTime:{type:"number"},updateTime:{type:"number"},channelNumber:{type:"number"},categoryNumber:{type:"number"},searchType:{type:"number"},searchEnable:{type:"boolean"},reorderWeight:{type:"string"}},Wn={serverId:{type:"string"},uid:{type:"string"},accid:{type:"string"},nick:{type:"string"},avatar:{type:"string"},ext:{type:"string"},type:{type:"number"},joinTime:{type:"number"},inviter:{type:"string"},validFlag:{type:"boolean"},createTime:{type:"number"},updateTime:{type:"number"}},Kn={serverId:{type:"string"},appid:{type:"string"},accid:{type:"string"},ext:{type:"string"},banTime:{type:"number"},validFlag:{type:"boolean"},createTime:{type:"number"},updateTime:{type:"number"}};function formatServer(e){return format($n,e)}function formatServers(e){return Array.isArray(e)&&e.length>0?e.map((e=>formatServer(e))):[]}function formatMember$1(e){return format(Wn,e)}function formatMembers$1(e){return Array.isArray(e)&&e.length>0?e.map((e=>formatMember$1(e))):[]}function formatServerMemberBanInfos(e){return Array.isArray(e)&&e.length>0?e.map((e=>function formatServerMemberBanInfo(e){return format(Kn,e)}(e))):[]}function generateAntispamTag(e){var t,r,n;if(!e.antispamTag)return{};const a=Object.assign({},e.antispamTag);return(null===(t=e.antispamTag)||void 0===t?void 0:t.antiSpamBusinessId)&&"string"!=typeof(null===(r=e.antispamTag)||void 0===r?void 0:r.antiSpamBusinessId)&&(a.antiSpamBusinessId=JSON.stringify(null===(n=e.antispamTag)||void 0===n?void 0:n.antiSpamBusinessId)),a}const Jn={accid:{type:"string"},type:{type:"number"},serverId:{type:"string"},status:{type:"number"},requestId:{type:"string"},createTime:{type:"number"},updateTime:{type:"number"},expireTime:{type:"number"},data:{type:"object"}};function formatInviteApplyRecord(e){return format(Jn,e)}function formatInviteApplyRecords(e){return Array.isArray(e)&&e.length>0?e.map((e=>formatInviteApplyRecord(e))):[]}const zn={successServerIds:{type:"object"},failServerIds:{type:"object"},ackTimestamp:{type:"number"}};function formatClearServersUnread(e){return format(zn,e)}var Hn,Yn,Xn,Zn;!function(e){e[e.reorderWeight=0]="reorderWeight",e[e.createTime=1]="createTime"}(Hn||(Hn={})),function(e){e[e.white=1]="white",e[e.black=2]="black"}(Yn||(Yn={})),function(e){e[e.add=1]="add",e[e.remove=2]="remove"}(Xn||(Xn={})),function(e){e[e.message=0]="message",e[e.media=1]="media",e[e.ext=100]="ext"}(Zn||(Zn={}));const ea={channelId:{type:"string"},serverId:{type:"string"},name:{type:"string"},topic:{type:"string"},ext:{type:"string"},type:{type:"enum",values:Zn},validFlag:{type:"boolean"},createTime:{type:"number"},updateTime:{type:"number"},viewMode:{type:"number"},categoryId:{type:"string"},syncMode:{type:"number"},visitorMode:{type:"number"},reorderWeight:{type:"string"}},ta={serverId:{type:"string"},channelId:{type:"string"},ackTimestamp:{type:"number"},unreadCount:{type:"number"},mentionedCount:{type:"number"},maxCount:{type:"number"},lastMsgTime:{type:"number"}},ra={serverId:{type:"string"},channelId:{type:"string"},type:{type:"enum",values:Yn},opeType:{type:"enum",values:Xn},toAccids:{type:"object"}},na={serverId:{type:"string"},channelId:{type:"string"},type:{type:"enum",values:Yn},opeType:{type:"enum",values:Xn},roleId:{type:"string"}},aa={categoryId:{type:"string"},serverId:{type:"string"},name:{type:"string"},ext:{type:"string"},owner:{type:"string"},viewMode:{type:"number"},validFlag:{type:"boolean"},createTime:{type:"number"},updateTime:{type:"number"},channelNumber:{type:"number"}},ia={serverId:{type:"string"},channelId:{type:"string"},accid:{type:"string"},avatar:{type:"string"},nick:{type:"string"},createTime:{type:"number"},updateTime:{type:"number"}};function formatUpdateWhiteBlackRole(e){return format(na,e)}function formatChannel(e){return format(ea,e)}function formatChannels(e){return Array.isArray(e)&&e.length>0?e.map((e=>formatChannel(e))):[]}function formatUnreadInfo(e){return format(ta,e)}function formatUnreadInfos(e){return Array.isArray(e)&&e.length>0?e.map((e=>formatUnreadInfo(e))):[]}function formatChannelCategory(e){return format(aa,e)}function formatChannelCategorys(e){return Array.isArray(e)&&e.length>0?e.map((e=>formatChannelCategory(e))):[]}function formatChannelMembers(e){return Array.isArray(e)&&e.length>0?e.map((e=>function formatChannelMember(e){return format(ia,e)}(e))):[]}var oa=o?o.isConcatSpreadable:void 0;var sa=function isFlattenable(e){return It(e)||Ut(e)||!!(oa&&e&&e[oa])};var ca,la,da,ha,pa=function baseFlatten(e,t,r,n,a){var i=-1,o=e.length;for(r||(r=sa),a||(a=[]);++i<o;){var s=e[i];t>0&&r(s)?t>1?baseFlatten(s,t-1,r,n,a):Mt(a,s):n||(a[a.length]=s)}return a},ua=Ke((function(e,t){return He(e)?je(e,pa(t,1,He,!0)):[]}));class QChatServerService extends Service{constructor(e){super("qchatServer",e),this.core=e,registerParser({cmdMap:An,cmdConfig:Un})}createServer(e){return __awaiter(this,void 0,void 0,(function*(){validate({icon:{type:"string",required:!1},name:{type:"string",required:!1},ext:{type:"string",required:!1},searchType:{type:"number",required:!1,min:0},searchEnable:{type:"boolean",required:!1},inviteMode:{type:"number",min:0,max:1,required:!1},applyMode:{type:"number",min:0,max:1,required:!1}},e);return formatServer((yield this.core.sendCmd("qchatCreateServer",{serverInfo:Object.assign(Object.assign({},e),{searchEnable:!1===e.searchEnable?0:1}),antispamTag:generateAntispamTag(e)})).content.serverInfo)}))}deleteServer(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",min:1}},e),yield this.core.sendCmd("qchatDeleteServer",e)}))}updateServer(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",min:1},icon:{type:"string",required:!1},name:{type:"string",required:!1},ext:{type:"string",required:!1},searchType:{type:"number",required:!1,min:0},searchEnable:{type:"boolean",required:!1},inviteMode:{type:"number",min:0,max:1,required:!1},applyMode:{type:"number",min:0,max:1,required:!1}},e);return formatServer((yield this.core.sendCmd("qchatUpdateServer",{serverInfo:Object.assign(Object.assign({},e),{searchEnable:!1===e.searchEnable?0:1}),antispamTag:generateAntispamTag(e)})).content.serverInfo)}))}getServers(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverIds:{type:"array",itemType:"string",min:1}},e);return formatServers((yield this.core.sendCmd("qchatGetServers",e)).content.serverList)}))}getServersByPage(e){return __awaiter(this,void 0,void 0,(function*(){validate({timestamp:{type:"number"},limit:{type:"number",min:1,required:!1}},e);const t=yield this.core.sendCmd("qchatGetServersByPage",{tag:e}),{datas:r,listQueryTag:n}=t.content;return{listQueryTag:{hasMore:1==+n.hasMore,nextTimetag:parseInt(n.nextTimetag)},datas:formatServers(r)}}))}inviteServerMembers(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",min:1},accids:{type:"array",itemType:"string",min:1},ps:{type:"string"},params:{type:"object",rules:{ttl:{type:"number"}},required:!1}},e);const t=yield this.core.sendCmd("qchatInviteServerMembers",e),r=t.content.record||{};return{failByOverAccids:t.content.failByOverAccids,failByBanAccids:t.content.failByBanAccids,recordInfo:formatInviteApplyRecord(r)}}))}acceptServerInvite(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",allowEmpty:!1},accid:{type:"string",allowEmpty:!1},recordInfo:{type:"object",rules:{requestId:{type:"string",allowEmpty:!1}}}},e),yield this.core.sendCmd("qchatAcceptServerInvite",e)}))}rejectInviteServer(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",min:1},accid:{type:"string",min:1},ps:{type:"string"},recordInfo:{type:"object",rules:{requestId:{type:"string",allowEmpty:!1}}}},e),yield this.core.sendCmd("qchatRejectInviteServer",e)}))}applyServerJoin(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",min:1},ps:{type:"string"},params:{type:"object",rules:{ttl:{type:"number"}},required:!1}},e);return formatInviteApplyRecord((yield this.core.sendCmd("qchatApplyServerJoin",e)).content.data)}))}acceptServerApply(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",min:1},accid:{type:"string",min:1},recordInfo:{type:"object",rules:{requestId:{type:"string",allowEmpty:!1}}}},e),yield this.core.sendCmd("qchatAcceptServerApply",e)}))}rejectServerApply(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",min:1},accid:{type:"string",min:1},ps:{type:"string"},recordInfo:{type:"object",rules:{requestId:{type:"string",allowEmpty:!1}}}},e),yield this.core.sendCmd("qchatRejectServerApply",e)}))}kickServerMembers(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",min:1},accids:{type:"array",itemType:"string",min:1}},e),yield this.core.sendCmd("qchatKickServerMembers",e)}))}leaveServer(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",min:1}},e),yield this.core.sendCmd("qchatLeaveServer",e)}))}updateMyMemberInfo(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",min:1},accid:{type:"string",required:!1},nick:{type:"string",required:!1},avatar:{type:"string",required:!1},ext:{type:"string",required:!1}},e);return formatMember$1((yield this.core.sendCmd("qchatUpdateMyMemberInfo",{memberInfo:e,antispamTag:generateAntispamTag(e)})).content.memberInfo)}))}updateServerMemberInfo(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",min:1},accid:{type:"string",min:1},nick:{type:"string",required:!1},avatar:{type:"string",required:!1}},e);return formatMember$1((yield this.core.sendCmd("qchatUpdateServerMemberInfo",{memberInfo:e,antispamTag:generateAntispamTag(e)})).content.memberInfo)}))}getServerMembers(e){return __awaiter(this,void 0,void 0,(function*(){validate({accids:{type:"array"}},e);const t=[];if(e.accids.length)for(const r of e.accids)t.push(`${r.serverId}|${r.accid}`);return formatMembers$1((yield this.core.sendCmd("qchatGetServerMembers",{accids:t})).content.accidList)}))}getServerMembersByPage(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",min:1},timetag:{type:"number"},limit:{type:"number",min:1,required:!1}},e);const t=yield this.core.sendCmd("qchatGetServerMembersByPage",{tag:e}),{datas:r,listQueryTag:n}=t.content;return{listQueryTag:{hasMore:1==+n.hasMore,nextTimetag:parseInt(n.nextTimetag)},datas:formatMembers$1(r)}}))}subscribeServer(e){return __awaiter(this,void 0,void 0,(function*(){if(validate({type:{type:"number",min:4,max:4,required:!1},opeType:{type:"number",min:1,max:2}},e),e.type||(e.type=4),e.servers.length){const t=Object.assign(Object.assign({},e),{channels:e.servers.map((e=>({serverId:e.serverId,channelId:""})))}),{failedChannels:r}=yield this.core.qchatChannel.subscribeModuleService.subscribe(t);return this.core.qchatChannel.subscribeModuleService.cacheSubscribe(t),{failedServers:r}}}))}banServerMember(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",allowEmpty:!1},accid:{type:"string",allowEmpty:!1},ext:{type:"string",required:!1}},e),yield this.core.sendCmd("qchatUpdateServerMemberBan",{tag:Object.assign(Object.assign({},e),{opeType:1})})}))}unbanServerMember(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",allowEmpty:!1},accid:{type:"string",allowEmpty:!1},ext:{type:"string",required:!1}},e),yield this.core.sendCmd("qchatUpdateServerMemberBan",{tag:Object.assign(Object.assign({},e),{opeType:2})})}))}getBannedMembersByPage(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",allowEmpty:!1},timetag:{type:"number",min:0},limit:{type:"number",min:1,required:!1}},e);const t=yield this.core.sendCmd("qchatGetBannedMembersByPage",{tag:e}),{datas:r,listQueryTag:n}=t.content;return{listQueryTag:{hasMore:1==+n.hasMore,nextTimetag:parseInt(n.nextTimetag)},datas:formatServerMemberBanInfos(r)}}))}serverSearchByPage(e){return __awaiter(this,void 0,void 0,(function*(){if(validate({keyword:{type:"string",allowEmpty:!1},startTime:{type:"number",min:0,required:!1},endTime:{type:"number",min:0,required:!1},limit:{type:"number",min:1,required:!1},serverType:{type:"array",itemType:"number",min:0,required:!1},order:{type:"enum",values:getEnumKeys(Tn),required:!1},searchType:{type:"enum",values:getEnumKeys(wn)},sort:{type:"enum",values:getEnumKeys(qn),required:!1},cursor:{type:"string",allowEmpty:!1,required:!1}},e),e.startTime&&e.endTime&&e.startTime>=e.endTime)throw new ValidateError("startTime more than endTime",e,"timeRule");const t=yield this.core.sendCmd("qchatServerSearchByPage",{tag:Object.assign(Object.assign({},e),{order:e.order&&Tn[e.order],searchType:wn[e.searchType],sort:e.sort&&qn[e.sort],serverType:JSON.stringify(e.serverType)})}),{datas:r,listQueryTag:n}=t.content;return{listQueryTag:{hasMore:1==+n.hasMore,nextTimetag:parseInt(n.nextTimetag),cursor:n.cursor},datas:formatServers(r)}}))}serverMemberSearchByPage(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",allowEmpty:!1},keyword:{type:"string",allowEmpty:!1},limit:{type:"number",min:1,required:!1}},e);return formatMembers$1((yield this.core.sendCmd("qchatServerMemberSearchByPage",{tag:e})).content.members)}))}generateInviteCode(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",allowEmpty:!1},ttl:{type:"number",min:0,required:!1}},e);return function formatExpireTime(e){return format({expireTime:{type:"number"}},e)}((yield this.core.sendCmd("qchatGenerateInviteCode",{tag:e})).content.data)}))}joinByInviteCode(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",allowEmpty:!1},inviteCode:{type:"string",allowEmpty:!1},ps:{type:"string",required:!1}},e),yield this.core.sendCmd("qchatJoinByInviteCode",{tag:e})}))}getInviteApplyRecordOfServer(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",allowEmpty:!1},fromTime:{type:"number",min:0},toTime:{type:"number",min:0},reverse:{type:"boolean",required:!1},limit:{type:"number",min:1,required:!1},cursor:{type:"string",allowEmpty:!1,required:!1}},e);return formatInviteApplyRecords((yield this.core.sendCmd("qchatGetInviteApplyRecordOfServer",{tag:Object.assign(Object.assign({},e),{reverse:e.reverse?1:0})})).content.data)}))}getInviteApplyRecordOfSelf(e){return __awaiter(this,void 0,void 0,(function*(){validate({fromTime:{type:"number",min:0},toTime:{type:"number",min:0},reverse:{type:"boolean",required:!1},limit:{type:"number",min:1,required:!1},cursor:{type:"string",allowEmpty:!1,required:!1}},e);return formatInviteApplyRecords((yield this.core.sendCmd("qchatGetInviteApplyRecordOfSelf",{tag:Object.assign(Object.assign({},e),{reverse:e.reverse?1:0})})).content.data)}))}markRead(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverIds:{type:"array",itemType:"string",required:!0}},e);const t=formatClearServersUnread((yield this.core.sendCmd("qchatClearServersUnread",e)).content.clearServersUnreadTag),{successServerIds:r,ackTimestamp:n}=t;return this.logger.log("qchatServer::clearServersUnread:: begin auto clear servers unreadInfo"),this.core.eventBus.emit("qchatChannel/clearUnreadCountByServers",r,n),t}))}subscribeAllChannel(e){return __awaiter(this,void 0,void 0,(function*(){validate({type:{type:"number",required:!0},serverIds:{type:"array",itemType:"string",required:!0,max:10}},e);const t=yield this.core.sendCmd("qchatSubscribeChannelsByServers",e,{timeout:3e4});t.content.unreadInfos=formatUnreadInfos(t.content.unreadInfos),this.core.eventBus.emit("qchatChannel/cacheUnreadCount",t.content.unreadInfos);const r={type:e.type,opeType:1,channels:t.content.unreadInfos.map((e=>({serverId:e.serverId,channelId:e.channelId})))};this.core.eventBus.emit("qchatChannel/cacheSubscribe",r),this.core.eventBus.emit("qchatChannel/getRoleIdsByServerId",e.serverIds),this.core.emit("unreadInfos",t.content.unreadInfos);try{t.content.failServerIds=JSON.parse(t.content.failServerIds),ua(e.serverIds,t.content.failServerIds).forEach((e=>{this.core.emit("serverUnreadInfo",this.core.qchatChannel.subscribeModuleService.getServerUnreadInfo(e))}))}catch(e){this.core.logger.error("qchatServer::subscribeAllChannel: JSON parse failServerIds error",e)}return t.content}))}enterAsVisitor(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverIds:{type:"array",itemType:"string",min:1}},e);const t=yield this.core.sendCmd("qchatEnterAsVisitor",{tag:{serverIds:JSON.stringify(e.serverIds)}});let r=[];try{r=JSON.parse(t.content.failServerIds)}catch(e){r=[]}const n=ua(e.serverIds,r);return this.core.qchatChannel.subscribeForVisitorService.cacheServer(n),{failedServers:r}}))}leaveAsVisitor(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverIds:{type:"array",itemType:"string",min:1}},e);const t=yield this.core.sendCmd("qchatLeaveAsVisitor",{tag:{serverIds:JSON.stringify(e.serverIds)}});let r=[];try{r=JSON.parse(t.content.failServerIds)}catch(e){r=[]}return ua(e.serverIds,r).forEach((e=>{this.core.qchatChannel.subscribeForVisitorService.deleteServer(e)})),{failedServers:r}}))}subscribeAsVisitor(e){return __awaiter(this,void 0,void 0,(function*(){return validate({opeType:{type:"number",min:1,max:2},type:{type:"number",required:!1},serverIds:{type:"array",itemType:"string",min:1}},e),e.serverIds.length?yield this.core.qchatChannel.subscribeForVisitorService.subscribeServerAsVisitor(e):{failedServers:[]}}))}}!function(e){e[e.everyone=1]="everyone",e[e.custom=2]="custom"}(ca||(ca={})),function(e){e[e.normal=0]="normal",e[e.owner=1]="owner"}(la||(la={})),function(e){e[e.ignore=0]="ignore",e[e.deny=-1]="deny",e[e.allow=1]="allow"}(da||(da={})),function(e){e[e.manageServer=1]="manageServer",e[e.manageChannel=2]="manageChannel",e[e.manageRole=3]="manageRole",e[e.sendMsg=4]="sendMsg",e[e.accountInfoSelf=5]="accountInfoSelf",e[e.inviteServer=6]="inviteServer",e[e.kickServer=7]="kickServer",e[e.accountInfoOther=8]="accountInfoOther",e[e.recallMsg=9]="recallMsg",e[e.deleteMsg=10]="deleteMsg",e[e.remindOther=11]="remindOther",e[e.remindEveryone=12]="remindEveryone",e[e.manageBlackWhiteList=13]="manageBlackWhiteList",e[e.banServerMember=14]="banServerMember",e[e.RTCChannelConnect=15]="RTCChannelConnect",e[e.RTCChannelDisconnectOther=16]="RTCChannelDisconnectOther",e[e.RTCChannelOpenMicrophone=17]="RTCChannelOpenMicrophone",e[e.RTCChannelOpenCamera=18]="RTCChannelOpenCamera",e[e.RTCChannelOpenCloseOtherMicrophone=19]="RTCChannelOpenCloseOtherMicrophone",e[e.RTCChannelOpenCloseOtherCamera=20]="RTCChannelOpenCloseOtherCamera",e[e.RTCChannelOpenCloseEveryoneMicrophone=21]="RTCChannelOpenCloseEveryoneMicrophone",e[e.RTCChannelOpenCloseEveryoneCamera=22]="RTCChannelOpenCloseEveryoneCamera",e[e.RTCChannelOpenShareScreen=23]="RTCChannelOpenShareScreen",e[e.RTCChannelCloseOtherShareScreen=24]="RTCChannelCloseOtherShareScreen",e[e.manageInviteApply=25]="manageInviteApply",e[e.manageInviteApplyHistory=26]="manageInviteApplyHistory",e[e.mentionedRole=27]="mentionedRole"}(ha||(ha={}));const ma={type:{type:"enum",values:ca},memberType:{type:"enum",values:la},createTime:{type:"number"},updateTime:{type:"number"},priority:{type:"number"},memberCount:{type:"number"},joinTime:{type:"number"}},ga={roleId:{type:"string"},categoryId:{type:"string"},serverId:{type:"string"},type:{type:"enum",values:ca},validFlag:{type:"boolean"},createTime:{type:"number"},updateTime:{type:"number"},name:{type:"string"},icon:{type:"string"},ext:{type:"string"}},ya={id:{type:"string"},accid:{type:"string"},categoryId:{type:"string"},serverId:{type:"string"},validFlag:{type:"boolean"},createTime:{type:"number"},updateTime:{type:"number"},nick:{type:"string"},avatar:{type:"string"},ext:{type:"string"},memberType:{type:"enum",values:la},joinTime:{type:"number"},inviter:{type:"string"}};function generatorRoleForCmd(e){const t=Object.assign({},e),r=formatReverse(ma,t);return r.auths&&(r.auths=function generateRoleAuthsForCmd(e){const t=Object.keys(e).reduce(((t,r)=>{const n=ha[r];return n?t[n]=da[e[r]]:t[r]=da[e[r]],t}),{});return JSON.stringify(t)}(r.auths)),r}function formatRoleAuths(e){return Object.keys(e).reduce(((t,r)=>{const n=getEnumKeyByEnumValue(ha,r);if(n)t[n]=da[e[r]];else{t[parseInt(r)]=da[e[r]]}return t}),{})}function formatRole(e){const t=format(ma,e);return e.auths&&(t.auths=formatRoleAuths(JSON.parse(t.auths))),t.isMember&&delete t.isMember,t}function formatRoles(e){return Array.isArray(e)&&e.length>0?e.map((e=>formatRole(e))):[]}function formatChannelCategoryRole(e){return e.auths&&(e.auths=formatRoleAuths(JSON.parse(e.auths))),format(ga,e)}function formatChannelCategoryMemberRole(e){return e.auths&&(e.auths=formatRoleAuths(JSON.parse(e.auths))),format(ya,e)}var va,fa,Ca,ba,Ma,Ia,Sa;!function(e){e[e.sendTime=1]="sendTime"}(va||(va={})),function(e){e[e.text=0]="text",e[e.image=1]="image",e[e.audio=2]="audio",e[e.video=3]="video",e[e.geo=4]="geo",e[e.notification=5]="notification",e[e.file=6]="file",e[e.tip=10]="tip",e[e.robot=11]="robot",e[e.g2=12]="g2",e[e.custom=100]="custom"}(fa||(fa={})),function(e){e[e.sending=1]="sending",e[e.success=2]="success",e[e.failed=3]="failed"}(Ca||(Ca={})),function(e){e[e.notifyAll=1]="notifyAll",e[e.notifySubscribe=2]="notifySubscribe"}(ba||(ba={})),function(e){e[e.unknown=0]="unknown",e[e.server=1]="server",e[e.channel=2]="channel",e[e.serverAccids=3]="serverAccids",e[e.channelAccids=4]="channelAccids",e[e.accids=5]="accids"}(Ma||(Ma={})),function(e){e[e.serverMemberInvite=1]="serverMemberInvite",e[e.serverMemberInviteReject=2]="serverMemberInviteReject",e[e.serverMemberApply=3]="serverMemberApply",e[e.serverMemberApplyReject=4]="serverMemberApplyReject",e[e.serverCreate=5]="serverCreate",e[e.serverRemove=6]="serverRemove",e[e.serverUpdate=7]="serverUpdate",e[e.serverMemberInviteDone=8]="serverMemberInviteDone",e[e.serverMemberInviteAccept=9]="serverMemberInviteAccept",e[e.serverMemberApplyDone=10]="serverMemberApplyDone",e[e.serverMemberApplyAccept=11]="serverMemberApplyAccept",e[e.serverMemberKick=12]="serverMemberKick",e[e.serverMemberLeave=13]="serverMemberLeave",e[e.serverMemberUpdate=14]="serverMemberUpdate",e[e.channelCreate=15]="channelCreate",e[e.channelRemove=16]="channelRemove",e[e.channelUpdate=17]="channelUpdate",e[e.channelUpdateWhiteBlackIdentify=18]="channelUpdateWhiteBlackIdentify",e[e.channelUpdateWhiteBlackIdentifyUser=19]="channelUpdateWhiteBlackIdentifyUser",e[e.updateQuickComment=20]="updateQuickComment",e[e.channelCategoryCreate=21]="channelCategoryCreate",e[e.channelCategoryRemove=22]="channelCategoryRemove",e[e.channelCategoryUpdate=23]="channelCategoryUpdate",e[e.channelCategoryUpdateWhiteBlackIdentify=24]="channelCategoryUpdateWhiteBlackIdentify",e[e.channelCategoryUpdateWhiteBlackIdentifyUser=25]="channelCategoryUpdateWhiteBlackIdentifyUser",e[e.serverIdentifyAdd=26]="serverIdentifyAdd",e[e.serverIdentifyRemove=27]="serverIdentifyRemove",e[e.serverIdentifyUpdate=28]="serverIdentifyUpdate",e[e.channelIdentifyUpdate=29]="channelIdentifyUpdate",e[e.userIdentifyUpdate=30]="userIdentifyUpdate",e[e.channelVisibilityUpdate=31]="channelVisibilityUpdate",e[e.serverEnterLeave=32]="serverEnterLeave",e[e.serverMemberJoinByInviteCode=33]="serverMemberJoinByInviteCode",e[e.channelVisibilityToVisitorUpdate=34]="channelVisibilityToVisitorUpdate",e[e.myMemberInfoUpdated=35]="myMemberInfoUpdated",e[e.custom=100]="custom",e[e.msgTyping=101]="msgTyping"}(Ia||(Ia={})),function(e){e[e.reply=1]="reply",e[e.thread=2]="thread",e[e.all=3]="all"}(Sa||(Sa={}));var now_1=function(){return i.Date.now()},Ta=/\s/;var qa=function trimmedEndIndex(e){for(var t=e.length;t--&&Ta.test(e.charAt(t)););return t},wa=/^\s+/;var _a=function baseTrim(e){return e?e.slice(0,qa(e)+1).replace(wa,""):e},Ra=/^[-+]0x[0-9a-f]+$/i,ka=/^0b[01]+$/i,Ea=/^0o[0-7]+$/i,Pa=parseInt;var Aa=function toNumber(e){if("number"==typeof e)return e;if(Rr(e))return NaN;if(y(e)){var t="function"==typeof e.valueOf?e.valueOf():e;e=y(t)?t+"":t}if("string"!=typeof e)return 0===e?e:+e;e=_a(e);var r=ka.test(e);return r||Ea.test(e)?Pa(e.slice(2),r?2:8):Ra.test(e)?NaN:+e},Oa=Math.max,xa=Math.min;var Ua=function debounce(e,t,r){var n,a,i,o,s,c,l=0,d=!1,h=!1,p=!0;if("function"!=typeof e)throw new TypeError("Expected a function");function invokeFunc(t){var r=n,i=a;return n=a=void 0,l=t,o=e.apply(i,r)}function leadingEdge(e){return l=e,s=setTimeout(timerExpired,t),d?invokeFunc(e):o}function shouldInvoke(e){var r=e-c;return void 0===c||r>=t||r<0||h&&e-l>=i}function timerExpired(){var e=now_1();if(shouldInvoke(e))return trailingEdge(e);s=setTimeout(timerExpired,function remainingWait(e){var r=t-(e-c);return h?xa(r,i-(e-l)):r}(e))}function trailingEdge(e){return s=void 0,p&&n?invokeFunc(e):(n=a=void 0,o)}function debounced(){var e=now_1(),r=shouldInvoke(e);if(n=arguments,a=this,c=e,r){if(void 0===s)return leadingEdge(c);if(h)return clearTimeout(s),s=setTimeout(timerExpired,t),invokeFunc(c)}return void 0===s&&(s=setTimeout(timerExpired,t)),o}return t=Aa(t)||0,y(r)&&(d=!!r.leading,i=(h="maxWait"in r)?Oa(Aa(r.maxWait)||0,t):i,p="trailing"in r?!!r.trailing:p),debounced.cancel=function cancel(){void 0!==s&&clearTimeout(s),l=0,n=c=a=s=void 0},debounced.flush=function flush(){return void 0===s?o:trailingEdge(now_1())},debounced};var ja=function throttle(e,t,r){var n=!0,a=!0;if("function"!=typeof e)throw new TypeError("Expected a function");return y(r)&&(n="leading"in r?!!r.leading:n,a="trailing"in r?!!r.trailing:a),Ua(e,t,{leading:n,maxWait:t,trailing:a})},Ba=Math.min;var Na=function baseIntersection(e,t,r){for(var n=r?Oe:Ae,a=e[0].length,i=e.length,o=i,s=Array(i),c=1/0,l=[];o--;){var d=e[o];o&&t&&(d=xe(d,x(t))),c=Ba(d.length,c),s[o]=!r&&(t||a>=120&&d.length>=120)?new _e(o&&d):void 0}d=e[0];var h=-1,p=s[0];e:for(;++h<a&&l.length<c;){var u=d[h],m=t?t(u):u;if(u=r||0!==u?u:0,!(p?Ue(p,m):n(l,m,r))){for(o=i;--o;){var g=s[o];if(!(g?Ue(g,m):n(e[o],m,r)))continue e}p&&p.push(m),l.push(u)}}return l};var La=function castArrayLikeObject(e){return He(e)?e:[]},Ga=Ke((function(e){var t=xe(e,La);return t.length&&t[0]===e[0]?Na(t):[]}));var Qa=function baseSlice(e,t,r){var n=-1,a=e.length;t<0&&(t=-t>a?0:a+t),(r=r>a?a:r)<0&&(r+=a),a=t>r?0:r-t>>>0,t>>>=0;for(var i=Array(a);++n<a;)i[n]=e[n+t];return i};var Fa=function isIterateeCall(e,t,r){if(!y(r))return!1;var n=typeof t;return!!("number"==n?ze(r)&&Lt(t,r.length):"string"==n&&t in r)&&ce(r[t],e)},Da=1/0;var Va=function toFinite(e){return e?(e=Aa(e))===Da||e===-1/0?17976931348623157e292*(e<0?-1:1):e==e?e:0:0===e?e:0};var $a=function toInteger(e){var t=Va(e),r=t%1;return t==t?r?t-r:t:0},Wa=Math.ceil,Ka=Math.max;var Ja,za,Ha=function chunk(e,t,r){t=(r?Fa(e,t,r):void 0===t)?1:Ka($a(t),0);var n=null==e?0:e.length;if(!n||t<1)return[];for(var a=0,i=0,o=Array(Wa(n/t));a<n;)o[i++]=Qa(e,a,a+=t);return o};!function(e){e[e.sub=1]="sub",e[e.unSub=2]="unSub"}(Ja||(Ja={}));class UnreadInfoModuleService{constructor(e){this.unreadCount={},this.autoSubscribeUnreadMap={},this.autoSubscribeServerMap={},this.autoSubscribeTypingMap={},this.unreadServerCount={},this.serverRoleIdsMap={},this._serverUnreadInfo=ja((e=>{this.core.emit("serverUnreadInfo",this.getServerUnreadInfo(e))}),100),this.core=e}changeCacheServerRoleIds(e){const{serverId:t,roleId:r}=e.attach.serverIdentifyInfo,n=this.serverRoleIdsMap[t];if(!n)return;if(e.time<n.timeTag)return;e.type===Ia[Ia.serverIdentifyAdd]?n.roleIds.add(r):n.roleIds.delete(r),this.core.logger.debug(`QChatChannel::qchatChannel/serverIdentifyChange::now ${t} roleIds is`,[...n.roleIds]);const a=this.unreadServerCount[t];if(!a)return;Ha(Object.keys(a),100).forEach((e=>{this.core.qchatChannel.getChannelUnreadInfos({channels:e.map((e=>({serverId:t,channelId:e})))})}))}getRoleIdsByServerId(e){return __awaiter(this,void 0,void 0,(function*(){const t=e.filter((e=>!this.serverRoleIdsMap[e]));if(!t.length)return;const r={serverIdTimeTags:t};this.core.logger.debug("QChatChannel:: getRoleIdsByServerId params is",r);const n=yield this.core.sendCmd("qchatGetRoleIdsByServerId",{qchatGetRoleIdsByServerIdTag:r});this.core.logger.debug("QChatChannel:: getRoleIdsByServerId result is",n),n.content.serverRoles.forEach((e=>{try{e.roleIds=JSON.parse(e.roleIds)}catch(e){this.core.logger.error("QChatChannel:: getRoleIdsByServerId JSON parse roleIds error",e)}this.serverRoleIdsMap[e.serverId]={roleIds:new Set(e.roleIds),timeTag:e.timeTag}}))}))}_unSubscribeChannel(e,t){return __awaiter(this,void 0,void 0,(function*(){const r=`${e}_${t}`,n=this.autoSubscribeUnreadMap[r];n&&(this.subscribe({opeType:Ja.unSub,type:n,channels:[{serverId:e,channelId:t}]}),this.autoSubscribeUnreadMap[r]=void 0)}))}subscribe(e){return __awaiter(this,void 0,void 0,(function*(){validate({type:{type:"number",min:1,max:5},opeType:{type:"number",min:1,max:2}},e);const t=yield this.core.sendCmd("qchatSubscribe",{qchatSubReqTag:{type:e.type,opeType:e.opeType},channels:e.channels}),r=new Set;e.channels.forEach((e=>__awaiter(this,void 0,void 0,(function*(){this.serverRoleIdsMap[e.serverId]||r.add(e.serverId)}))));return Ha(Array.from(r),10).forEach((e=>{this.getRoleIdsByServerId(e)})),t.content}))}resumeSubscribe(e){return __awaiter(this,void 0,void 0,(function*(){this.serverRoleIdsMap={},this.unreadServerCount={},this.unreadCount={};if(!e.isAutoReconnect)return;const t={};Object.keys(this.autoSubscribeUnreadMap).forEach((e=>{const r=this.autoSubscribeUnreadMap[e];if(r){const[n,a]=e.split("_"),i={serverId:n,channelId:a};t[r]=t[r]||[],t[r].push(i)}})),t[5]=[],Object.keys(this.autoSubscribeTypingMap).forEach((e=>__awaiter(this,void 0,void 0,(function*(){if(this.autoSubscribeTypingMap[e]){const[r,n]=e.split("_"),a={serverId:r,channelId:n};t[5].push(a)}})))),t[4]=[],Object.keys(this.autoSubscribeServerMap).forEach((e=>__awaiter(this,void 0,void 0,(function*(){if(this.autoSubscribeServerMap[e]){const r={serverId:e};t[4].push(r)}}))));const r=[];Object.keys(t).forEach((e=>{const n=t[e];if(n&&0===n.length)return Promise.resolve();if(n.length>100){return Ha(n,100).forEach((t=>{r.push(this.createSubscribePromise(t,e))}))}r.push(this.createSubscribePromise(n,e))})),yield Promise.all(r)}))}createSubscribePromise(e,t){const r={type:parseInt(t),opeType:1,channels:e};return this.core.logger.debug("qchatChannel:: autoSubscribeUnread params",r),this.subscribe(r).then((({unreadInfos:e})=>{e&&e.length>0&&(e=formatUnreadInfos(e),this.cacheUnreadCount(e))})).catch((e=>{this.core.logger.error("qchatChannel:: autoSubscribeUnread error ",e)}))}cacheSubscribe(e){e.channels.forEach((t=>{const r=t.channelId?`${t.serverId}_${t.channelId}`:`${t.serverId}`,n=5===e.type?this.autoSubscribeTypingMap:4===e.type?this.autoSubscribeServerMap:this.autoSubscribeUnreadMap;e.opeType===Ja.sub?n[r]=e.type:e.opeType===Ja.unSub&&(n[r]=void 0)}))}cacheUnreadCount(e){e.forEach((e=>{const t=`${e.serverId}_${e.channelId}`;this.unreadCount[t]=Object.assign({},e),this.unreadServerCount[e.serverId]||(this.unreadServerCount[e.serverId]={}),this.unreadServerCount[e.serverId][e.channelId]=!0}))}getServerUnreadInfo(e){const t={serverId:e,unreadCount:0,mentionedCount:0,maxCount:0},r=this.unreadServerCount[e];return r&&(Object.keys(r).forEach((r=>{const n=`${e}_${r}`,a=this.unreadCount[n];t.unreadCount+=a.unreadCount,t.mentionedCount+=a.mentionedCount,void 0!==a.maxCount&&(t.maxCount=a.maxCount)})),t.unreadCount=t.unreadCount>t.maxCount?t.maxCount:t.unreadCount,t.mentionedCount=t.mentionedCount>t.maxCount?t.maxCount:t.mentionedCount),t}getUnreadInfo(e){validate({serverId:{type:"string"},channelId:{type:"string"}},e);const t=`${e.serverId}_${e.channelId}`;return this.unreadCount[t]?this.unreadCount[t]:null}shouldChangeUnread(e,t){if(!e.serverId||!e.channelId)return!1;if(this.core.qchatChannel.subscribeForVisitorService.isInSubscribeChannels(e.serverId,e.channelId))return!1;if(!1===e.historyEnable)return!1;if(!1===e.needBadge)return!1;if(e.fromAccount===this.core.account)return!1;if(t&&2!==(null==e?void 0:e.status))return!1;if(e.notifyReason&&e.notifyReason===getEnumKeyByEnumValue(ba,ba.notifySubscribe)){if(!e.serverId||!e.channelId)return!1;const r=this.getUnreadInfo({serverId:e.serverId,channelId:e.channelId}),n=t?"ackTimestamp":"lastMsgTime";if(!r)return!1;if(e.time&&r[n]&&r[n]>e.time)return!1}return!0}shouldChangeMentionedUnread(e,t=!1){return __awaiter(this,void 0,void 0,(function*(){if(e.accidsOfMentionedRoles&&e.accidsOfMentionedRoles.includes(this.core.account))return!0;if(e.mentionRoleIds&&e.serverId){if(!this.serverRoleIdsMap[e.serverId]){if(!t)return this.handledRoleMsg(e),!1;yield this.getRoleIdsByServerId([e.serverId])}for(let t=0;t<e.mentionRoleIds.length;t++)if(this.serverRoleIdsMap[e.serverId].roleIds.has(e.mentionRoleIds[t]))return!0}return!1}))}handledRoleMsg(e){return __awaiter(this,void 0,void 0,(function*(){if(!e.mentionRoleIds)return;if(this.serverRoleIdsMap[e.serverId]||(yield this.getRoleIdsByServerId([e.serverId])),!this.serverRoleIdsMap[e.serverId])return void this.core.logger.warn("QChatChannel::handledRoleMsg::can not get serverRoleIds,server id",e.serverId);let t=!1;if(e.mentionRoleIds.forEach((r=>{this.serverRoleIdsMap[e.serverId].roleIds.has(r)&&(t=!0,this.core.logger.debug("QChatChannel::handledRoleMsg::will update message mentionedCount，message is ",e))})),!t)return;const r=this.unreadCount[`${e.serverId}_${e.channelId}`],n=2===(null==e?void 0:e.status);if(r.mentionedCount=n?r.mentionedCount?r.mentionedCount-1:0:r.mentionedCount?r.mentionedCount+1:1,"number"==typeof r.maxCount){let t=r.mentionedCount;if(t=t>r.maxCount?r.maxCount:t,t>r.maxCount)return void this.core.logger.debug("QChatChannel::handledRoleMsg::tempUnreadCount more than maxCount");this.core.emit("unreadInfo",Object.assign(Object.assign({},r),{mentionedCount:t})),this.core.emit("unreadInfos",[Object.assign(Object.assign({},r),{mentionedCount:t})]),this._serverUnreadInfo(e.serverId)}}))}getMentionedFlag(e,t=!1){return __awaiter(this,void 0,void 0,(function*(){return!!e.mentionAll||(e.mentionRoleIds||e.accidsOfMentionedRoles?yield this.shouldChangeMentionedUnread(e,t):!(!e.mentionAccids||!e.mentionAccids.includes(this.core.account)))}))}changeUnread(e,t){return __awaiter(this,void 0,void 0,(function*(){const r=e.serverId,n=e.channelId,a=`${r}_${n}`;if(!this.shouldChangeUnread(e,t))return void this.core.logger.debug(`changeUnread: ${a} does not need to update unreadInfo`);if(!this.unreadCount[a])return yield this.core.qchatChannel.getChannelUnreadInfos({channels:[{serverId:r,channelId:n}]}),void(!this.serverRoleIdsMap[r]&&e.mentionRoleIds&&this.getRoleIdsByServerId([r]));const i=this.unreadCount[a],o=2===(null==e?void 0:e.status),s=yield this.getMentionedFlag(e);o?(i.unreadCount=i.unreadCount?i.unreadCount-1:0,s&&(i.mentionedCount=i.mentionedCount?i.mentionedCount-1:0),this.core.logger.debug(`changeUnread: ${a} unread reduce `,i)):(i.unreadCount=i.unreadCount?i.unreadCount+1:1,s&&(i.mentionedCount=i.mentionedCount?i.mentionedCount+1:1),this.core.logger.debug(`changeUnread: ${a} unread add `,i)),delete i.lastMsgTime;const c=i.maxCount;let l=i.mentionedCount,d=i.unreadCount;"number"==typeof c&&(l=l>c?c:l,d=d>c?c:d,d>c)?this.core.logger.debug("QChatChannel::subscribe::tempUnreadCount more than maxCount"):(this.core.logger.warn("unreadInfo event will abandon,please use unreadInfos"),this.core.emit("unreadInfo",Object.assign(Object.assign({},i),{mentionedCount:l,unreadCount:d})),this.core.emit("unreadInfos",[Object.assign(Object.assign({},i),{mentionedCount:l,unreadCount:d})]),this._serverUnreadInfo(r))}))}updateUnread(e){const t=e.serverId,r=e.channelId,n=`${t}_${r}`,a=this.unreadCount[n];a&&a.ackTimestamp&&e&&e.ackTimestamp&&a.ackTimestamp>e.ackTimestamp?this.core.logger.debug("qchat channel updateUnread exist: ",null==a?void 0:a.ackTimestamp,null==e?void 0:e.ackTimestamp):(this.core.logger.debug("qchat channel updateUnread: ",e),this.unreadCount[n]=e,this.unreadServerCount[t]||(this.unreadServerCount[t]={}),this.unreadServerCount[t][r]=!0,this.core.logger.warn("unreadInfo event will abandon,please use unreadInfos"),this.core.emit("unreadInfo",this.unreadCount[n]),this.core.emit("unreadInfos",[this.unreadCount[n]]),this._serverUnreadInfo(t))}clearUnreadCountByServers(e,t){const r=[];e.forEach((e=>{this.unreadServerCount[e]&&Object.keys(this.unreadServerCount[e]).forEach((t=>{r.push(`${e}_${t}`)}))})),r.forEach((e=>{this.unreadCount[e].unreadCount=this.unreadCount[e].mentionedCount=0,this.unreadCount[e].ackTimestamp=t})),this.core.emit("unreadInfos",r.map((e=>this.unreadCount[e]))),Ga(e,Object.keys(this.unreadServerCount)).forEach((e=>{this.core.emit("serverUnreadInfo",this.getServerUnreadInfo(e))}))}}class SubscribeForVisitorService{constructor(e){this.limitForBatchEnter=10,this.limitForBatchSubscribe=100,this.autoServers=new Set,this.autoVisitorSubscribeServer=new Set,this.autoVisitorSubscribeChannel=new Set,this.core=e}subscribeChannelAsVisitor(e){return __awaiter(this,void 0,void 0,(function*(){const t=(yield this.core.sendCmd("qchatSubscribeAsVisitor",{tag:{type:e.type||6,opeType:e.opeType},datas:e.channels})).content.failedArr;return e.channels.filter((e=>!t.some((t=>t.channelId===e.channelId&&t.serverId===e.serverId)))).forEach((t=>{1===e.opeType?this.autoVisitorSubscribeChannel.add(`${t.serverId}&${t.channelId}`):this.autoVisitorSubscribeChannel.delete(`${t.serverId}&${t.channelId}`)})),{failedChannels:t}}))}subscribeServerAsVisitor(e){return __awaiter(this,void 0,void 0,(function*(){const t=yield this.core.sendCmd("qchatSubscribeAsVisitor",{tag:{type:e.type||7,opeType:e.opeType},datas:e.serverIds.map((e=>({serverId:e})))}),r=t.content.failedArr;return e.serverIds.filter((e=>!r.some((t=>t.serverId===e)))).forEach((t=>{1===e.opeType?this.autoVisitorSubscribeServer.add(t):this.autoVisitorSubscribeServer.delete(t)})),{failedServers:t.content.failedArr.map((e=>e.serverId))}}))}deleteServer(e){this.autoServers.delete(e),this.autoVisitorSubscribeServer.has(e)&&this.subscribeServerAsVisitor({opeType:2,serverIds:[e]});const t=[];this.autoVisitorSubscribeChannel.forEach((r=>{if(0===r.indexOf(e)){const n=r.replace(`${e}&`,"");t.push({serverId:e,channelId:n})}})),t.length>0&&this.subscribeChannelAsVisitor({opeType:2,channels:t})}deleteAutoSetInServerId(e){this.autoServers.delete(e),this.autoVisitorSubscribeServer.delete(e),this.autoVisitorSubscribeChannel.forEach((t=>{0===t.indexOf(e)&&this.autoVisitorSubscribeChannel.delete(t)}))}deleteAutoSetInChannel(e,t){this.autoVisitorSubscribeChannel.delete(`${e}&${t}`)}unSubscribeChannel(e,t){this.subscribeChannelAsVisitor({opeType:2,channels:[{serverId:e,channelId:t}]})}isInSubscribeChannels(e,t){return this.autoVisitorSubscribeChannel.has(`${e}&${t}`)}isInAutoServers(e){return this.autoServers.has(e)}doAutoSubscribe(){const e=[];Ha(Array.from(this.autoVisitorSubscribeServer),this.limitForBatchSubscribe).forEach((t=>{e.push(this.subscribeServerAsVisitor({opeType:1,serverIds:t}))}));return Ha(Array.from(this.autoVisitorSubscribeChannel),this.limitForBatchSubscribe).forEach((t=>{e.push(this.subscribeChannelAsVisitor({opeType:1,channels:t.map((e=>{const t=e.indexOf("&");return{serverId:e.slice(0,t),channelId:e.slice(t+1)}}))}))})),Promise.all(e)}doAutoEnterServer(){return __awaiter(this,void 0,void 0,(function*(){const e=Ha(Array.from(this.autoServers),this.limitForBatchEnter),t=[];e.forEach((e=>{t.push(this.core.qchatServer.enterAsVisitor({serverIds:e}))}));(yield Promise.all(t)).forEach((e=>{e.failedServers.forEach((e=>{this.deleteAutoSetInServerId(e)}))}))}))}resumeSubscribe(e){return __awaiter(this,void 0,void 0,(function*(){e.isAutoReconnect?(yield this.doAutoEnterServer(),yield this.doAutoSubscribe()):(this.autoServers.clear(),this.autoVisitorSubscribeChannel.clear(),this.autoVisitorSubscribeServer.clear())}))}cacheServer(e){e.forEach((e=>this.autoServers.add(e)))}}!function(e){e[e.sub=1]="sub",e[e.unSub=2]="unSub"}(za||(za={}));class QChatChannelService extends Service{constructor(e){super("qchatChannel",e),this.core=e,registerParser({cmdMap:_n,cmdConfig:Pn}),this.subscribeModuleService=new UnreadInfoModuleService(e),this.subscribeForVisitorService=new SubscribeForVisitorService(e),this.core.eventBus.on("qchatChannel/changeUnread",this.subscribeModuleService.changeUnread.bind(this.subscribeModuleService)),this.core.eventBus.on("qchatChannel/updateUnread",this.subscribeModuleService.updateUnread.bind(this.subscribeModuleService)),this.core.eventBus.on("qchatChannel/cacheUnreadCount",this.subscribeModuleService.cacheUnreadCount.bind(this.subscribeModuleService)),this.core.eventBus.on("qchatChannel/cacheSubscribe",this.subscribeModuleService.cacheSubscribe.bind(this.subscribeModuleService)),this.core.eventBus.on("qchatChannel/clearUnreadCountByServers",this.subscribeModuleService.clearUnreadCountByServers.bind(this.subscribeModuleService)),this.core.eventBus.on("qchatChannel/getRoleIdsByServerId",this.subscribeModuleService.getRoleIdsByServerId.bind(this.subscribeModuleService)),this.core.eventBus.on("logined",(e=>{this.subscribeModuleService.resumeSubscribe(e),this.subscribeForVisitorService.resumeSubscribe(e)})),this.core.eventBus.on("qchatChannel/autoUnSubscribe",(e=>{if(this.logger.log("QChatChannel::enter autoUnSubscribe sysMsg is",e),e.type===Ia[Ia.channelVisibilityUpdate])this.logger.log("QChatChannel::begin autoUnSubscribe channel key is",`${e.serverId}_${e.channelId}`),this.subscribeModuleService._unSubscribeChannel(e.serverId,e.channelId),this.logger.log("QChatChannel::autoUnSubscribe channel done key is",`${e.serverId}_${e.channelId}`);else if(e.type===Ia[Ia.serverEnterLeave]){this.subscribeModuleService.autoSubscribeServerMap[e.serverId]&&(this.logger.log("QChatChannel::begin autoUnSubscribe server key is",e.serverId),this.subscribeModuleService.subscribe({type:4,opeType:za.unSub,channels:[{serverId:e.serverId,channelId:""}]}),this.logger.log("QChatChannel::autoUnSubscribe server done key is",e.serverId));const t=this.subscribeModuleService.unreadServerCount[e.serverId];if(!t)return;this.logger.log("QChatChannel::begin autoUnSubscribe channels key is",Object.keys(t)),Object.keys(t).forEach((t=>{this.subscribeModuleService._unSubscribeChannel(e.serverId,t)})),this.logger.log("QChatChannel::autoUnSubscribe channels done key is",Object.keys(t))}})),this.core.eventBus.on("qchatChannel/serverIdentifyChange",(e=>{this.subscribeModuleService.changeCacheServerRoleIds(e)}))}createChannel(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",min:1},type:{type:"enum",values:getEnumKeys(Zn)},name:{type:"string",required:!1},topic:{type:"string",required:!1},ext:{type:"string",required:!1},visitorMode:{type:"number",required:!1}},e);return formatChannel((yield this.core.sendCmd("qchatCreateChannel",{channelInfo:Object.assign(Object.assign({},e),{type:Zn[e.type]}),antispamTag:generateAntispamTag(e)})).content.channelInfo)}))}deleteChannel(e){return __awaiter(this,void 0,void 0,(function*(){validate({channelId:{type:"string",allowEmpty:!1}},e),yield this.core.sendCmd("qchatDeleteChannel",e)}))}updateChannel(e){return __awaiter(this,void 0,void 0,(function*(){validate({channelId:{type:"string",min:1},serverId:{type:"string",required:!1},type:{type:"enum",values:getEnumKeys(Zn),required:!1},name:{type:"string",required:!1},topic:{type:"string",required:!1},ext:{type:"string",required:!1},visitorMode:{type:"number",required:!1}},e);const t=e;e.type&&(t.type=Zn[e.type]);return formatChannel((yield this.core.sendCmd("qchatUpdateChannel",{channelInfo:t,antispamTag:generateAntispamTag(e)})).content.channelInfo)}))}getChannels(e){return __awaiter(this,void 0,void 0,(function*(){validate({channelIds:{type:"array",itemType:"string",min:1}},e);return formatChannels((yield this.core.sendCmd("qchatGetChannels",e)).content.channelList)}))}getChannelsByPage(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",min:1},timetag:{type:"number"},limit:{type:"number",min:1,required:!1}},e);const t=yield this.core.sendCmd("qchatGetChannelsByPage",{qchatGetChannelListPageTag:Object.assign({limit:100},e)}),{datas:r,listQueryTag:n}=t.content;return{listQueryTag:{hasMore:1==+n.hasMore,nextTimetag:parseInt(n.nextTimetag)},datas:formatChannels(r)}}))}getMembersByPage(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",min:1},channelId:{type:"string",min:1},timetag:{type:"number"},limit:{type:"number",min:1,required:!1}},e);const t=yield this.core.sendCmd("qchatGetMembersByPage",{qchatGetMembersByPageTag:e}),{datas:r,listQueryTag:n}=t.content;return{listQueryTag:{hasMore:1==+n.hasMore,nextTimetag:parseInt(n.nextTimetag)},datas:formatMembers$1(r)}}))}updateWhiteBlackRole(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",min:1},channelId:{type:"string",min:1},roleId:{type:"string",min:1},type:{type:"enum",values:getEnumKeys(Yn)},opeType:{type:"enum",values:getEnumKeys(Xn)}},e),yield this.core.sendCmd("qchatUpdateWhiteBlackRole",{qchatUpdateWhiteBlackRoleTag:Object.assign(Object.assign({},e),{type:Yn[e.type],opeType:Xn[e.opeType]})})}))}getWhiteBlackRolesPage(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",min:1},channelId:{type:"string",min:1},type:{type:"enum",values:getEnumKeys(Yn)},timetag:{type:"number"},limit:{type:"number",min:1,required:!1}},e);const t=yield this.core.sendCmd("qchatGetWhiteBlackRolesPage",{qchatGetWhiteBlackRolesPageTag:Object.assign(Object.assign({},e),{type:Yn[e.type]})}),{datas:r,listQueryTag:n}=t.content;return{listQueryTag:{hasMore:1==+n.hasMore,nextTimetag:parseInt(n.nextTimetag)},datas:formatRoles(r)}}))}updateWhiteBlackMembers(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",min:1},channelId:{type:"string",min:1},type:{type:"enum",values:getEnumKeys(Yn)},opeType:{type:"enum",values:getEnumKeys(Xn)},toAccids:{type:"array",itemType:"string",min:1}},e),yield this.core.sendCmd("qchatUpdateWhiteBlackMembers",{qchatUpdateWhiteBlackMembersTag:Object.assign(Object.assign({},e),{type:Yn[e.type],opeType:Xn[e.opeType],toAccids:JSON.stringify(e.toAccids)})})}))}getWhiteBlackMembersPage(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",min:1},channelId:{type:"string",min:1},type:{type:"enum",values:getEnumKeys(Yn)},timetag:{type:"number"},limit:{type:"number",min:1,required:!1}},e);const t=yield this.core.sendCmd("qchatGetWhiteBlackMembersPage",{qchatGetWhiteBlackMembersPageTag:Object.assign(Object.assign({limit:100},e),{type:Yn[e.type]})}),{datas:r,listQueryTag:n}=t.content;return{listQueryTag:{hasMore:1==+n.hasMore,nextTimetag:parseInt(n.nextTimetag)},datas:formatMembers$1(r)}}))}getExistingWhiteBlackRoles(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",min:1},channelId:{type:"string",min:1},type:{type:"enum",values:getEnumKeys(Yn)},roleIds:{type:"array",itemType:"string",min:1}},e);const t=yield this.core.sendCmd("qchatGetExistingWhiteBlackRoles",{qchatGetExistingWhiteBlackRolesTag:Object.assign(Object.assign({},e),{type:Yn[e.type],roleIds:JSON.stringify(e.roleIds)})}),{datas:r}=t.content;return{datas:formatRoles(r)}}))}getExistingWhiteBlackMembers(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",min:1},channelId:{type:"string",min:1},type:{type:"enum",values:getEnumKeys(Yn)},accids:{type:"array",itemType:"string",min:1}},e);const t=yield this.core.sendCmd("qchatGetExistingWhiteBlackMembers",{qchatGetExistingWhiteBlackMembersTag:Object.assign(Object.assign({},e),{type:Yn[e.type],accids:JSON.stringify(e.accids)})}),{datas:r}=t.content;return{datas:formatMembers$1(r)}}))}updateCategoryInfoOfChannel(e){return __awaiter(this,void 0,void 0,(function*(){validate({channelId:{type:"string",min:1},categoryId:{type:"string",allowEmpty:!1,required:!1},syncMode:{type:"number",min:0,max:1,required:!1}},e);return formatChannel((yield this.core.sendCmd("qchatUpdateCategoryInfoOfChannel",{qchatUpdateCategoryInfoOfChannelTag:e})).content.channelInfo)}))}createChannelCategory(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",allowEmpty:!1},name:{type:"string",allowEmpty:!1,required:!1},ext:{type:"string",required:!1},viewMode:{type:"number",min:0,max:1,required:!1}},e);return formatChannelCategory((yield this.core.sendCmd("qchatCreateChannelCategory",{qchatCreateChannelCategoryTag:e})).content.QChatChannelCategoryInfo)}))}removeChannelCategory(e){return __awaiter(this,void 0,void 0,(function*(){validate({categoryId:{type:"string",allowEmpty:!1}},e),yield this.core.sendCmd("qchatRemoveChannelCategory",e)}))}updateChannelCategory(e){return __awaiter(this,void 0,void 0,(function*(){validate({categoryId:{type:"string",allowEmpty:!1},name:{type:"string",allowEmpty:!1,required:!1},ext:{type:"string",required:!1},viewMode:{type:"number",min:0,max:1,required:!1}},e);return formatChannelCategory((yield this.core.sendCmd("qchatUpdateChannelCategory",{qchatUpdateChannelCategoryTag:e})).content.QChatChannelCategoryInfo)}))}getChannelCategoriesByID(e){return __awaiter(this,void 0,void 0,(function*(){validate({categoryIds:{type:"array",itemType:"string",min:1}},e);return formatChannelCategorys((yield this.core.sendCmd("qchatGetChannelCategoriesByID",e)).content.channelCategoryList)}))}updateChannelCategoryWhiteBlackRole(e){return __awaiter(this,void 0,void 0,(function*(){validate({categoryId:{type:"string",allowEmpty:!1},serverId:{type:"string",allowEmpty:!1},type:{type:"enum",values:getEnumKeys(Yn)},opeType:{type:"enum",values:getEnumKeys(Xn)},roleId:{type:"string",allowEmpty:!1}},e),yield this.core.sendCmd("qchatUpdateChannelCategoryWhiteBlackRole",{qchatUpdateChannelCategoryWhiteBlackRoleTag:Object.assign(Object.assign({},e),{type:Yn[e.type],opeType:Xn[e.opeType]})})}))}getChannelCategoryWhiteBlackRolesPage(e){return __awaiter(this,void 0,void 0,(function*(){validate({categoryId:{type:"string",allowEmpty:!1},serverId:{type:"string",allowEmpty:!1},type:{type:"enum",values:getEnumKeys(Yn)},timetag:{type:"number",min:0},limit:{type:"number",min:1,required:!1}},e);const t=yield this.core.sendCmd("qchatGetChannelCategoryWhiteBlackRolesPage",{qchatGetChannelCategoryWhiteBlackRolesPageTag:Object.assign(Object.assign({},e),{type:Yn[e.type]})}),{datas:r,listQueryTag:n}=t.content;return{listQueryTag:{hasMore:1==+n.hasMore,nextTimetag:parseInt(n.nextTimetag)},datas:formatRoles(r)}}))}updateChannelCategoryWhiteBlackMembers(e){return __awaiter(this,void 0,void 0,(function*(){validate({categoryId:{type:"string",allowEmpty:!1},serverId:{type:"string",allowEmpty:!1},type:{type:"enum",values:getEnumKeys(Yn)},opeType:{type:"enum",values:getEnumKeys(Xn)},toAccids:{type:"array",itemType:"string",min:1}},e),yield this.core.sendCmd("qchatUpdateChannelCategoryWhiteBlackMembers",{qchatUpdateChannelCategoryWhiteBlackMembersTag:Object.assign(Object.assign({},e),{type:Yn[e.type],opeType:Xn[e.opeType],toAccids:JSON.stringify(e.toAccids)})})}))}getChannelCategoryWhiteBlackMembersPage(e){return __awaiter(this,void 0,void 0,(function*(){validate({categoryId:{type:"string",allowEmpty:!1},serverId:{type:"string",allowEmpty:!1},type:{type:"enum",values:getEnumKeys(Yn)},timetag:{type:"number",min:0},limit:{type:"number",min:1,required:!1}},e);const t=yield this.core.sendCmd("qchatGetChannelCategoryWhiteBlackMembersPage",{qchatGetChannelCategoryWhiteBlackMembersPageTag:Object.assign(Object.assign({},e),{type:Yn[e.type]})}),{datas:r,listQueryTag:n}=t.content;return{listQueryTag:{hasMore:1==+n.hasMore,nextTimetag:parseInt(n.nextTimetag)},datas:formatMembers$1(r)}}))}getChannelCategoryWhiteBlackRoles(e){return __awaiter(this,void 0,void 0,(function*(){validate({categoryId:{type:"string",allowEmpty:!1},serverId:{type:"string",allowEmpty:!1},type:{type:"enum",values:getEnumKeys(Yn)},roleIds:{type:"array",itemType:"string",min:1}},e);const t=yield this.core.sendCmd("qchatGetChannelCategoryWhiteBlackRoles",{qchatGetChannelCategoryWhiteBlackRolesTag:Object.assign(Object.assign({},e),{type:Yn[e.type],roleIds:JSON.stringify(e.roleIds)})}),{datas:r}=t.content;return formatRoles(r)}))}getChannelCategoryWhiteBlackMembers(e){return __awaiter(this,void 0,void 0,(function*(){validate({categoryId:{type:"string",allowEmpty:!1},serverId:{type:"string",allowEmpty:!1},type:{type:"enum",values:getEnumKeys(Yn)},accids:{type:"array",itemType:"string",min:1}},e);const t=yield this.core.sendCmd("qchatGetChannelCategoryWhiteBlackMembers",{qchatGetChannelCategoryWhiteBlackMembersTag:Object.assign(Object.assign({},e),{type:Yn[e.type],accids:JSON.stringify(e.accids)})}),{datas:r}=t.content;return formatMembers$1(r)}))}getChannelCategoriesPage(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",allowEmpty:!1},timetag:{type:"number",min:0},limit:{type:"number",min:1,required:!1}},e);const t=yield this.core.sendCmd("qchatGetChannelCategoriesPage",{qchatGetChannelCategoriesPageTag:e}),{datas:r,listQueryTag:n}=t.content;return{listQueryTag:{hasMore:1==+n.hasMore,nextTimetag:parseInt(n.nextTimetag)},datas:formatChannelCategorys(r)}}))}getChannelCategoryChannelsPage(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",allowEmpty:!1},categoryId:{type:"string",allowEmpty:!1},timetag:{type:"number",min:0},limit:{type:"number",min:1,required:!1}},e);const t=yield this.core.sendCmd("qchatGetChannelCategoryChannelsPage",{qchatGetChannelCategoryChannelsPageTag:e}),{datas:r,listQueryTag:n}=t.content;return{listQueryTag:{hasMore:1==+n.hasMore,nextTimetag:parseInt(n.nextTimetag)},datas:formatChannels(r)}}))}subscribeChannel(e){return __awaiter(this,void 0,void 0,(function*(){validate({type:{type:"number",min:1,max:5},opeType:{type:"number",min:1,max:2}},e);const t=yield this.subscribeModuleService.subscribe(e);if(t.unreadInfos=formatUnreadInfos(t.unreadInfos),1===e.opeType&&(e.channels=t.unreadInfos.map((e=>({serverId:e.serverId,channelId:e.channelId})))),this.logger.debug("QChatChannel::subscribeChannel:: cacheSubscribe ",e),this.subscribeModuleService.cacheSubscribe(e),5!==e.type)return this.subscribeModuleService.cacheUnreadCount(t.unreadInfos),t}))}getChannelUnreadInfos(e){return __awaiter(this,void 0,void 0,(function*(){const t=formatUnreadInfos((yield this.core.sendCmd("qchatGetUnreadInfo",e)).content.unreadInfos);return t.forEach((e=>this.subscribeModuleService.updateUnread(e))),t}))}getChannelSearchByPage(e){return __awaiter(this,void 0,void 0,(function*(){if(validate({keyword:{type:"string",allowEmpty:!1},startTime:{type:"number",min:0,required:!1},endTime:{type:"number",min:1,required:!1},order:{type:"enum",values:getEnumKeys(Tn),required:!1},limit:{type:"number",min:1,required:!1},serverId:{type:"string",required:!1},sort:{type:"enum",values:getEnumKeys(Hn),required:!1},cursor:{type:"string",allowEmpty:!1,required:!1}},e),e.startTime&&e.endTime&&e.startTime>=e.endTime)throw new ValidateError("startTime more than endTime",e,"timeRule");const t=yield this.core.sendCmd("qchatGetChannelSearchByPage",{qchatGetChannelSearchByPageTag:Object.assign(Object.assign({},e),{order:e.order&&Tn[e.order],sort:e.sort&&Hn[e.sort]})}),{datas:r,listQueryTag:n}=t.content;return{listQueryTag:{hasMore:1==+n.hasMore,nextTimetag:parseInt(n.nextTimetag),cursor:n.cursor},datas:formatChannels(r)}}))}channelMemberSearch(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",allowEmpty:!1},channelId:{type:"string",allowEmpty:!1},keyword:{type:"string",allowEmpty:!1},limit:{type:"number",min:1,required:!1}},e);return formatChannelMembers((yield this.core.sendCmd("qchatChannelMemberSearch",{qchatChannelMemberSearchTag:e})).content.datas)}))}subscribeAsVisitor(e){return __awaiter(this,void 0,void 0,(function*(){return validate({opeType:{type:"number",min:1,max:2},type:{type:"number",required:!1},channels:{type:"array",rules:{serverId:{type:"string",allowEmpty:!1},channelId:{type:"string",allowEmpty:!1}},min:1}},e),yield this.subscribeForVisitorService.subscribeChannelAsVisitor(e)}))}}const Ya={"24_61":"qchatCreateServerRole","24_62":"qchatDeleteServerRole","24_63":"qchatUpdateServerRole","24_64":"qchatGetServerRoles","24_65":"qchatAddChannelRole","24_66":"qchatRemoveChannelRole","24_67":"qchatUpdateChannelRole","24_68":"qchatGetChannelRoles","24_69":"qchatAddMemberRole","24_70":"qchatRemoveMemberRole","24_71":"qchatUpdateMemberRole","24_72":"qchatGetMemberRoles","24_73":"qchatAddMembersToServerRole","24_74":"qchatRemoveMembersFromServerRole","24_75":"qchatGetMembersFromServerRole","24_76":"qchatGetServerRolesByAccid","24_77":"qchatGetExistingServerRolesByAccids","24_78":"qchatGetExistingChannelRolesByServerRoleIds","24_79":"qchatGetExistingAccidsOfMemberRoles","24_80":"qchatUpdateServerRolePriorities","24_81":"qchatGetExistingAccidsInServerRole","24_82":"qchatCheckPermission","24_83":"qchatAddChannelCategoryRole","24_84":"qchatRemoveChannelCategoryRole","24_85":"qchatUpdateChannelCategoryRole","24_86":"qchatGetChannelCategoryRole","24_87":"qchatAddChannelCategoryMemberRole","24_88":"qchatRemoveChannelCategoryMemberRole","24_89":"qchatUpdateChannelCategoryMemberRole","24_90":"qchatGetChannelCategoryMemberRole","24_126":"qchatCheckPermissions"},Xa={channelRole:{serverId:1,roleId:2,parentRoleId:3,channelId:4,name:5,icon:6,ext:7,auths:8,type:9,createTime:10,updateTime:11},memberRole:{serverId:1,id:2,accid:3,channelId:4,auths:5,createTime:6,updateTime:7,nick:8,avatar:9,ext:10,memberType:11,joinTime:12,inviter:13},antispamTag:{antiSpamBusinessId:1},serverRole:{serverId:1,roleId:2,name:3,icon:4,ext:5,auths:6,type:7,memberCount:8,priority:9,createTime:10,updateTime:11,isMember:12},getRoleByPagesTag:{serverId:1,channelId:2,time:3,limit:4},checkPermissionTag:{serverId:1,channelId:2,auth:3},member:{serverId:1,roleId:2,accid:3,createTime:4,updateTime:5,nick:6,avatar:7,ext:8,type:9,joinTime:10,inviter:11},qchatAddChannelCategoryRoleTag:{categoryId:3,serverId:4,parentRoleId:5},channelCategoryRole:{roleId:1,categoryId:3,serverId:4,parentRoleId:5,type:6,validFlag:7,createTime:8,updateTime:9,auths:10,name:11,icon:12,ext:13},qchatGetChannelCategoryRoleTag:{serverId:1,categoryId:2,timetag:3,limit:4},channelCategoryMemberRole:{id:1,accid:3,categoryId:4,serverId:5,validFlag:6,createTime:7,updateTime:8,auths:9,nick:10,avatar:11,ext:12,memberType:13,joinTime:14,inviter:15},qchatGetChannelCategoryMemberRoleTag:{serverId:1,categoryId:2,timetag:3,limit:4},checkPermissionsTag:{serverId:1,channelId:2,auths:3}},Za=invertSerializeMap(Xa),ei={qchatCreateServerRole:{service:"qchatRole",sid:24,cid:61,params:[{type:"Property",name:"serverRole",reflectMapper:Xa.serverRole},{type:"Property",name:"antispamTag",reflectMapper:Xa.antispamTag}],response:[{type:"Property",name:"serverRole",reflectMapper:Za.serverRole}]},qchatDeleteServerRole:{service:"qchatRole",sid:24,cid:62,params:[{type:"Long",name:"serverId"},{type:"Long",name:"roleId"}]},qchatUpdateServerRole:{service:"qchatRole",sid:24,cid:63,params:[{type:"Property",name:"updateServerRoleTag",reflectMapper:{serverId:1,roleId:2,name:3,icon:4,ext:5,auths:6,priority:7}},{type:"Property",name:"antispamTag",reflectMapper:Xa.antispamTag}],response:[{type:"Property",name:"serverRole",reflectMapper:Za.serverRole}]},qchatGetServerRoles:{service:"qchatRole",sid:24,cid:64,params:[{type:"Property",name:"getServerRolesTag",reflectMapper:{serverId:1,timetag:2,limit:3,priority:4,channelId:5,categoryId:6}}],response:[{type:"PropertyArray",name:"serverRoles",reflectMapper:Za.serverRole}]},qchatAddChannelRole:{service:"qchatRole",sid:24,cid:65,params:[{type:"Property",name:"channelRole",reflectMapper:Xa.channelRole}],response:[{type:"Property",name:"channelRole",reflectMapper:Za.channelRole}]},qchatRemoveChannelRole:{service:"qchatRole",sid:24,cid:66,params:[{type:"Long",name:"serverId"},{type:"Long",name:"channelId"},{type:"Long",name:"roleId"}]},qchatUpdateChannelRole:{service:"qchatRole",sid:24,cid:67,params:[{type:"Property",name:"updateChannelRoleTag",reflectMapper:{serverId:1,roleId:2,channelId:3,auths:4}}],response:[{type:"Property",name:"channelRole",reflectMapper:Za.channelRole}]},qchatGetChannelRoles:{service:"qchatRole",sid:24,cid:68,params:[{type:"Property",name:"getChannelRolesTag",reflectMapper:{serverId:1,channelId:2,timetag:3,limit:4}}],response:[{type:"PropertyArray",name:"channelRoles",reflectMapper:Za.channelRole}]},qchatAddMemberRole:{service:"qchatRole",sid:24,cid:69,params:[{type:"Property",name:"memberRole",reflectMapper:Xa.memberRole}],response:[{type:"Property",name:"memberRole",reflectMapper:Za.memberRole}]},qchatRemoveMemberRole:{service:"qchatRole",sid:24,cid:70,params:[{type:"Property",name:"memberRole",reflectMapper:Xa.memberRole}]},qchatUpdateMemberRole:{service:"qchatRole",sid:24,cid:71,params:[{type:"Property",name:"updateMemberRoleTag",reflectMapper:{serverId:1,accid:2,channelId:3,auths:4}}],response:[{type:"Property",name:"memberRole",reflectMapper:Za.memberRole}]},qchatGetMemberRoles:{service:"qchatRole",sid:24,cid:72,params:[{type:"Property",name:"getMemberRolesTag",reflectMapper:{serverId:1,channelId:2,timetag:3,limit:4}}],response:[{type:"PropertyArray",name:"memberRoles",reflectMapper:Za.memberRole}]},qchatAddMembersToServerRole:{service:"qchatRole",sid:24,cid:73,params:[{type:"Long",name:"serverId"},{type:"Long",name:"roleId"},{type:"String",name:"accids"}],response:[{type:"Property",name:"accids",reflectMapper:{1:"successAccids",2:"failedAccids"}}]},qchatRemoveMembersFromServerRole:{service:"qchatRole",sid:24,cid:74,params:[{type:"Long",name:"serverId"},{type:"Long",name:"roleId"},{type:"String",name:"accids"}],response:[{type:"Property",name:"accids",reflectMapper:{1:"successAccids",2:"failedAccids"}}]},qchatGetMembersFromServerRole:{service:"qchatRole",sid:24,cid:75,params:[{type:"Property",name:"getMembersFromServerRoleTag",reflectMapper:{serverId:1,roleId:2,timetag:3,accid:4,limit:5}}],response:[{type:"PropertyArray",name:"members",reflectMapper:Za.member}]},qchatGetServerRolesByAccid:{service:"qchatRole",sid:24,cid:76,params:[{type:"Property",name:"getServerRolesByAccidTag",reflectMapper:{serverId:1,accid:2,timetag:3,limit:4}}],response:[{type:"PropertyArray",name:"serverRoles",reflectMapper:Za.serverRole}]},qchatGetExistingServerRolesByAccids:{service:"qchatRole",sid:24,cid:77,params:[{type:"Long",name:"serverId"},{type:"String",name:"accids"}],response:[{type:"String",name:"serverRoles"}]},qchatGetExistingChannelRolesByServerRoleIds:{service:"qchatRole",sid:24,cid:78,params:[{type:"Long",name:"serverId"},{type:"Long",name:"channelId"},{type:"String",name:"roleIds"}],response:[{type:"PropertyArray",name:"channelRoles",reflectMapper:Za.channelRole}]},qchatGetExistingAccidsOfMemberRoles:{service:"qchatRole",sid:24,cid:79,params:[{type:"Long",name:"serverId"},{type:"Long",name:"channelId"},{type:"String",name:"accids"}],response:[{type:"PropertyArray",name:"memberRoles",reflectMapper:Za.memberRole}]},qchatUpdateServerRolePriorities:{service:"qchatRole",sid:24,cid:80,params:[{type:"Long",name:"serverId"},{type:"PropertyArray",name:"serverRoles",reflectMapper:{serverId:1,roleId:2,priority:7}}],response:[{type:"PropertyArray",name:"serverRoles",reflectMapper:Za.serverRole}]},qchatGetExistingAccidsInServerRole:{service:"qchatRole",sid:24,cid:81,params:[{type:"Long",name:"serverId"},{type:"Long",name:"roleId"},{type:"String",name:"accids"}],response:[{type:"PropertyArray",name:"members",reflectMapper:Za.member}]},qchatCheckPermission:{service:"qchatRole",sid:24,cid:82,params:[{type:"Property",name:"checkPermissionTag",reflectMapper:Xa.checkPermissionTag}],response:[{type:"Boolean",name:"checked"}]},qchatAddChannelCategoryRole:{service:"qchatRole",sid:24,cid:83,params:[{type:"Property",name:"qchatAddChannelCategoryRoleTag",reflectMapper:Xa.channelCategoryRole}],response:[{type:"Property",name:"channelCategoryRole",reflectMapper:Za.channelCategoryRole}]},qchatRemoveChannelCategoryRole:{service:"qchatRole",sid:24,cid:84,params:[{type:"Long",name:"serverId"},{type:"Long",name:"categoryId"},{type:"Long",name:"roleId"}]},qchatUpdateChannelCategoryRole:{service:"qchatRole",sid:24,cid:85,params:[{type:"Property",name:"qchatUpdateChannelCategoryRoleTag",reflectMapper:Xa.channelCategoryRole}],response:[{type:"Property",name:"channelCategoryRole",reflectMapper:Za.channelCategoryRole}]},qchatGetChannelCategoryRole:{service:"qchatRole",sid:24,cid:86,params:[{type:"Property",name:"qchatGetChannelCategoryRoleTag",reflectMapper:Xa.qchatGetChannelCategoryRoleTag}],response:[{type:"PropertyArray",name:"list",reflectMapper:Za.channelCategoryRole}]},qchatAddChannelCategoryMemberRole:{service:"qchatRole",sid:24,cid:87,params:[{type:"Property",name:"qchatAddChannelCategoryMemberRoleTag",reflectMapper:Xa.channelCategoryMemberRole}],response:[{type:"Property",name:"channelCategoryMemberRole",reflectMapper:Za.channelCategoryMemberRole}]},qchatRemoveChannelCategoryMemberRole:{service:"qchatRole",sid:24,cid:88,params:[{type:"Long",name:"serverId"},{type:"Long",name:"categoryId"},{type:"String",name:"accid"}]},qchatUpdateChannelCategoryMemberRole:{service:"qchatRole",sid:24,cid:89,params:[{type:"Property",name:"qchatUpdateChannelCategoryMemberRoleTag",reflectMapper:Xa.channelCategoryMemberRole}],response:[{type:"Property",name:"channelCategoryMemberRole",reflectMapper:Za.channelCategoryMemberRole}]},qchatGetChannelCategoryMemberRole:{service:"qchatRole",sid:24,cid:90,params:[{type:"Property",name:"qchatGetChannelCategoryMemberRoleTag",reflectMapper:Xa.qchatGetChannelCategoryMemberRoleTag}],response:[{type:"PropertyArray",name:"list",reflectMapper:Za.channelCategoryMemberRole}]},qchatCheckPermissions:{service:"qchatRole",sid:24,cid:126,params:[{type:"Property",name:"checkPermissionsTag",reflectMapper:Xa.checkPermissionsTag}],response:[{type:"PropertyArray",name:"checkPermissionsResult",reflectMapper:{1:"auth",2:"isAllow"}}]}};class CategoryModuleService{constructor(e){this.core=e}addChannelCategoryRole(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",allowEmpty:!1},categoryId:{type:"string",allowEmpty:!1},parentRoleId:{type:"string",allowEmpty:!1}},e);return formatChannelCategoryRole((yield this.core.sendCmd("qchatAddChannelCategoryRole",{qchatAddChannelCategoryRoleTag:e})).content.channelCategoryRole)}))}removeChannelCategoryRole(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",allowEmpty:!1},categoryId:{type:"string",allowEmpty:!1},roleId:{type:"string",allowEmpty:!1}},e),yield this.core.sendCmd("qchatRemoveChannelCategoryRole",e)}))}updateChannelCategoryRole(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",allowEmpty:!1},categoryId:{type:"string",allowEmpty:!1},roleId:{type:"string",allowEmpty:!1},auths:{type:"object"}},e);const t=yield this.core.sendCmd("qchatUpdateChannelCategoryRole",{qchatUpdateChannelCategoryRoleTag:generatorRoleForCmd(e)});if(406===t.raw.code)throw new CustomError("No update required",{},406);return formatChannelCategoryRole(t.content.channelCategoryRole)}))}getChannelCategoryRole(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",allowEmpty:!1},categoryId:{type:"string",allowEmpty:!1},timetag:{type:"number",min:0,required:!1},limit:{type:"number",min:1,required:!1}},e);return function formatChannelCategoryRoles(e){return Array.isArray(e)&&e.length>0?e.map((e=>formatChannelCategoryRole(e))):[]}((yield this.core.sendCmd("qchatGetChannelCategoryRole",{qchatGetChannelCategoryRoleTag:e})).content.list)}))}addChannelCategoryMemberRole(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",allowEmpty:!1},categoryId:{type:"string",allowEmpty:!1},accid:{type:"string",allowEmpty:!1}},e);return formatChannelCategoryMemberRole((yield this.core.sendCmd("qchatAddChannelCategoryMemberRole",{qchatAddChannelCategoryMemberRoleTag:e})).content.channelCategoryMemberRole)}))}removeChannelCategoryMemberRole(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",allowEmpty:!1},categoryId:{type:"string",allowEmpty:!1},accid:{type:"string",allowEmpty:!1}},e),yield this.core.sendCmd("qchatRemoveChannelCategoryMemberRole",e)}))}updateChannelCategoryMemberRole(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",allowEmpty:!1},categoryId:{type:"string",allowEmpty:!1},accid:{type:"string",allowEmpty:!1},auths:{type:"object"}},e);const t=yield this.core.sendCmd("qchatUpdateChannelCategoryMemberRole",{qchatUpdateChannelCategoryMemberRoleTag:generatorRoleForCmd(e)});if(406===t.raw.code)throw new CustomError("No update required",{},406);return formatChannelCategoryMemberRole(t.content.channelCategoryMemberRole)}))}getChannelCategoryMemberRole(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",allowEmpty:!1},categoryId:{type:"string",allowEmpty:!1},timetag:{type:"number",min:0,required:!1},limit:{type:"number",min:1,required:!1}},e);return function formatChannelCategoryMemberRoles(e){return Array.isArray(e)&&e.length>0?e.map((e=>formatChannelCategoryMemberRole(e))):[]}((yield this.core.sendCmd("qchatGetChannelCategoryMemberRole",{qchatGetChannelCategoryMemberRoleTag:e})).content.list)}))}}class QChatRoleService extends Service{constructor(e){super("qchatRole",e),this.core=e,registerParser({cmdMap:Ya,cmdConfig:ei}),this.category=new CategoryModuleService(e)}createServerRole(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",allowEmpty:!1},name:{type:"string",allowEmpty:!1},priority:{type:"number",min:1},icon:{type:"string",required:!1},ext:{type:"string",required:!1}},e);return formatRole((yield this.core.sendCmd("qchatCreateServerRole",{serverRole:Object.assign(Object.assign({},generatorRoleForCmd(e)),{type:ca.custom}),antispamTag:generateAntispamTag(e)})).content.serverRole)}))}updateServerRole(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",allowEmpty:!1},roleId:{type:"string",allowEmpty:!1},name:{type:"string",required:!1},icon:{type:"string",required:!1},ext:{type:"string",required:!1},priority:{type:"number",required:!1},auths:{type:"object",required:!1}},e);return formatRole((yield this.core.sendCmd("qchatUpdateServerRole",{updateServerRoleTag:generatorRoleForCmd(e),antispamTag:generateAntispamTag(e)})).content.serverRole)}))}deleteServerRole(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",allowEmpty:!1},roleId:{type:"string",allowEmpty:!1}},e),yield this.core.sendCmd("qchatDeleteServerRole",e)}))}getServerRoles(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",allowEmpty:!1},channelId:{type:"string",allowEmpty:!1,required:!1},categoryId:{type:"string",allowEmpty:!1,required:!1},limit:{type:"number",min:1,required:!1},priority:{type:"number",required:!1}},e);const t=yield this.core.sendCmd("qchatGetServerRoles",{getServerRolesTag:generatorRoleForCmd(e)});let r=t.content.serverRoles.filter((e=>1===parseInt(e.isMember)));return r=r.map((e=>e.roleId)),{roles:formatRoles(t.content.serverRoles),isMemberRoles:r}}))}addChannelRole(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",allowEmpty:!1},channelId:{type:"string",allowEmpty:!1},parentRoleId:{type:"string",allowEmpty:!1}},e);return formatRole((yield this.core.sendCmd("qchatAddChannelRole",{channelRole:generatorRoleForCmd(e)})).content.channelRole)}))}getChannelRoles(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",allowEmpty:!1},channelId:{type:"string",allowEmpty:!1},timetag:{type:"number",required:!1},limit:{type:"number",min:1,required:!1}},e);return formatRoles((yield this.core.sendCmd("qchatGetChannelRoles",{getChannelRolesTag:e})).content.channelRoles)}))}removeChannelRole(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",allowEmpty:!1},channelId:{type:"string",allowEmpty:!1},roleId:{type:"string",allowEmpty:!1}},e),yield this.core.sendCmd("qchatRemoveChannelRole",e)}))}updateChannelRole(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",allowEmpty:!1},channelId:{type:"string",allowEmpty:!1},roleId:{type:"string",allowEmpty:!1},auths:{type:"object",required:!1}},e);const t=yield this.core.sendCmd("qchatUpdateChannelRole",{updateChannelRoleTag:generatorRoleForCmd(e)});if(406===t.raw.code)throw new CustomError("No update required",{},406);return formatRole(t.content.channelRole)}))}addMemberRole(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",allowEmpty:!1},channelId:{type:"string",allowEmpty:!1},accid:{type:"string",allowEmpty:!1}},e);return formatRole((yield this.core.sendCmd("qchatAddMemberRole",{memberRole:e})).content.memberRole)}))}getMemberRoles(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",allowEmpty:!1},channelId:{type:"string",allowEmpty:!1},timetag:{type:"number",required:!1},limit:{type:"number",min:1,required:!1}},e);return formatRoles((yield this.core.sendCmd("qchatGetMemberRoles",{getMemberRolesTag:e})).content.memberRoles)}))}removeMemberRole(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",allowEmpty:!1},channelId:{type:"string",allowEmpty:!1},accid:{type:"string",allowEmpty:!1}},e),yield this.core.sendCmd("qchatRemoveMemberRole",{memberRole:e})}))}updateMemberRole(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",allowEmpty:!1},channelId:{type:"string",allowEmpty:!1},accid:{type:"string",allowEmpty:!1},auths:{type:"object",required:!1}},e);const t=yield this.core.sendCmd("qchatUpdateMemberRole",{updateMemberRoleTag:generatorRoleForCmd(e)});if(406===t.raw.code)throw new CustomError("No update required",{},406);return formatRole(t.content.memberRole)}))}addMembersToServerRole(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",allowEmpty:!1},roleId:{type:"string",allowEmpty:!1},accids:{type:"array",itemType:"string",min:1}},e);const t=yield this.core.sendCmd("qchatAddMembersToServerRole",Object.assign(Object.assign({},e),{accids:JSON.stringify(e.accids)})),r=Dr(t,"content.accids.successAccids"),n=Dr(t,"content.accids.failedAccids");return{successAccids:r?JSON.parse(r):[],failedAccids:n?JSON.parse(n):[]}}))}removeMembersFromServerRole(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",allowEmpty:!1},roleId:{type:"string",allowEmpty:!1},accids:{type:"array",itemType:"string",min:1}},e);const t=yield this.core.sendCmd("qchatRemoveMembersFromServerRole",Object.assign(Object.assign({},e),{accids:JSON.stringify(e.accids)})),r=Dr(t,"content.accids.successAccids"),n=Dr(t,"content.accids.failedAccids");return{successAccids:r?JSON.parse(r):[],failedAccids:n?JSON.parse(n):[]}}))}getMembersFromServerRole(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",allowEmpty:!1},roleId:{type:"string",allowEmpty:!1},timetag:{type:"number",required:!1},accid:{type:"string",allowEmpty:!1,required:!1},limit:{type:"number",min:1,required:!1}},e);return formatRoles((yield this.core.sendCmd("qchatGetMembersFromServerRole",{getMembersFromServerRoleTag:e})).content.members)}))}getServerRolesByAccid(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",allowEmpty:!1},accid:{type:"string",allowEmpty:!1},timetag:{type:"number",required:!1},limit:{type:"number",min:1,required:!1}},e);return formatRoles((yield this.core.sendCmd("qchatGetServerRolesByAccid",{getServerRolesByAccidTag:e})).content.serverRoles)}))}getExistingServerRolesByAccids(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",allowEmpty:!1},accids:{type:"array",itemType:"string"}},e);const t=yield this.core.sendCmd("qchatGetExistingServerRolesByAccids",{serverId:e.serverId,accids:JSON.stringify(e.accids)});try{const e=JSON.parse(t.content.serverRoles);return Object.keys(e).forEach((t=>{e[t].forEach(((r,n)=>{e[t][n]=deserialize(r,Za.serverRole)})),e[t]=formatRoles(e[t])})),e}catch(r){throw this.logger.error(`can not parse serverRolesGroupByAccid from ${e.serverId} and ${e.accids}`,t.content.serverRoles),r}}))}getExistingChannelRolesByServerRoleIds(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",allowEmpty:!1},channelId:{type:"string",allowEmpty:!1},roleIds:{type:"array",itemType:"string"}},e);return formatRoles((yield this.core.sendCmd("qchatGetExistingChannelRolesByServerRoleIds",{serverId:e.serverId,channelId:e.channelId,roleIds:JSON.stringify(e.roleIds)})).content.channelRoles)}))}getExistingAccidsOfMemberRoles(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",allowEmpty:!1},channelId:{type:"string",allowEmpty:!1},accids:{type:"array",itemType:"string"}},e);const t=(yield this.core.sendCmd("qchatGetExistingAccidsOfMemberRoles",{serverId:e.serverId,channelId:e.channelId,accids:JSON.stringify(e.accids)})).content.memberRoles;return t&&t.length>0?t.map((e=>e.accid)):[]}))}getExistingAccidsInServerRole(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",allowEmpty:!1},roleId:{type:"string",allowEmpty:!1},accids:{type:"array",itemType:"string"}},e);const t=(yield this.core.sendCmd("qchatGetExistingAccidsInServerRole",{serverId:e.serverId,roleId:e.roleId,accids:JSON.stringify(e.accids)})).content.members;return t&&t.length>0?t.map((e=>e.accid)):[]}))}updateServerRolePriorities(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",allowEmpty:!1},serverRoles:{type:"array"}},e);return formatRoles((yield this.core.sendCmd("qchatUpdateServerRolePriorities",{serverId:e.serverId,serverRoles:e.serverRoles.map((e=>({serverId:e.serverId,roleId:e.roleId,priority:e.priority})))})).content.serverRoles)}))}checkPermission(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",allowEmpty:!1},channelId:{type:"string",allowEmpty:!1,required:!1},auth:{type:"string"}},e);return(yield this.core.sendCmd("qchatCheckPermission",{checkPermissionTag:Object.assign(Object.assign({},e),{auth:ha[e.auth]||e.auth})})).content.checked}))}addChannelCategoryRole(e){return __awaiter(this,void 0,void 0,(function*(){return yield this.category.addChannelCategoryRole(e)}))}removeChannelCategoryRole(e){return __awaiter(this,void 0,void 0,(function*(){return yield this.category.removeChannelCategoryRole(e)}))}updateChannelCategoryRole(e){return __awaiter(this,void 0,void 0,(function*(){return yield this.category.updateChannelCategoryRole(e)}))}getChannelCategoryRole(e){return __awaiter(this,void 0,void 0,(function*(){return yield this.category.getChannelCategoryRole(e)}))}addChannelCategoryMemberRole(e){return __awaiter(this,void 0,void 0,(function*(){return yield this.category.addChannelCategoryMemberRole(e)}))}removeChannelCategoryMemberRole(e){return __awaiter(this,void 0,void 0,(function*(){return yield this.category.removeChannelCategoryMemberRole(e)}))}updateChannelCategoryMemberRole(e){return __awaiter(this,void 0,void 0,(function*(){return yield this.category.updateChannelCategoryMemberRole(e)}))}getChannelCategoryMemberRole(e){return __awaiter(this,void 0,void 0,(function*(){return yield this.category.getChannelCategoryMemberRole(e)}))}checkPermissions(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",allowEmpty:!1},channelId:{type:"string",allowEmpty:!1,required:!1},auths:{type:"array",itemType:"string"}},e),this.core.logger.log("qchatRole::checkPermission options is",e);const t=yield this.core.sendCmd("qchatCheckPermissions",{checkPermissionsTag:Object.assign(Object.assign({},e),{auths:JSON.stringify(e.auths.map((e=>ha[e]||e)))})});this.core.logger.log("qchatRole::checkPermission result is",t.content);const r={};return t.content.checkPermissionsResult.forEach((e=>{r[e.auth]=e.isAllow})),this.core.logger.log("qchatRole::checkPermission auths is",r),formatRoleAuths(r)}))}}var ti=function basePick(e,t){return rn(e,t,(function(t,r){return Wr(e,r)}))};var ri=function flatten(e){return(null==e?0:e.length)?pa(e,1):[]};var ni=function flatRest(e){return We(Ge(e,void 0,ri),e+"")}((function(e,t){return null==e?{}:ti(e,t)}));const ai={"24_10":"qchatSendMsg","24_11":"qchatOnMsg","24_12":"qchatOnRecvUnreadInfo","24_13":"qchatSendCustomSysMsg","24_14":"qchatOnSysMsg","24_16":"qchatGetHistoryMsg","24_17":"qchatMarkMessageRead","24_18":"qchatMultiSyncMessageRead","24_22":"qchatUpdateSystemNotification","24_23":"qchatMultiSyncSystemNotificationUpdate","24_24":"qchatSyncSystemNotification","24_25":"qchatUpdateMessage","24_26":"qchatRecvMessageUpdate","24_28":"qchatMarkSysMsgRead","24_94":"qchatMessageSearchByPage","24_100":"qchatGetMessageHistoryByIds","24_101":"qchatGetThreadMessages","24_102":"qchatUpdateQuickComment","24_103":"qchatGetQuickComments","24_108":"qchatGetThreadRootMessagesMeta","24_121":"qchatGetLastMessageOfChannels","24_127":"qchatGetMentionedMeMessages","25_6":"qchatMultiSyncServersMessageRead"},ii={getHistoryMsgTag:{serverId:1,channelId:2,beginTime:3,endTime:4,excludeMsgId:5,limit:6,reverse:7},getThreadHistoryMsgTag:{beginTime:1,endTime:2,excludeMsgId:3,limit:4,reverse:5},qchatMsgTag:{serverId:1,channelId:2,fromAccount:3,fromClientType:4,fromDeviceId:5,fromNick:6,time:7,updateTime:8,type:9,body:10,attach:11,ext:12,msgIdClient:13,msgIdServer:14,resendFlag:15,status:16,pushPayload:17,pushContent:18,mentionAccids:19,mentionAll:20,env:21,callbackExt:22,replyMsgFromAccount:23,replyMsgTime:24,replyMsgIdServer:25,replyMsgIdClient:26,threadMsgFromAccount:27,threadMsgTime:28,threadMsgIdServer:29,threadMsgIdClient:30,useCustomContent:31,antiSpamContent:32,antiSpamBusinessId:33,antiSpamUsingYidun:34,yidunCallback:35,yidunAntiCheating:36,yidunAntiSpamExt:37,yidunAntiSpamRes:38,mentionRoleIds:41,accidsOfMentionedRoles:42,updateContent:39,updateOperatorInfo:40,subType:61,historyEnable:100,pushEnable:101,needBadge:102,needPushNick:103,notifyReason:104,routeEnable:105,isAntispam:106},sysMsg:{toType:1,serverId:2,channelId:3,toAccids:4,fromAccount:5,fromClientType:6,fromDeviceId:7,fromNick:8,time:9,updateTime:10,type:11,msgIdClient:12,msgIdServer:13,body:14,attach:15,ext:16,resendFlag:17,status:18,pushPayload:19,pushContent:20,env:21,callbackExt:22,persistEnable:100,pushEnable:101,needBadge:102,needPushNick:103,routeEnable:104},qchatMsgUpdateTag:{operatorAccount:1,operatorClientType:2,ps:3,ext:4,pushContent:5,pushPayload:6,env:7,routeEnable:100},markMsgReadTag:{serverId:1,channelId:2,time:3},qchatQuickCommentRequestTag:{serverId:1,channelId:2,fromAccount:3,msgIdServer:4,time:5,type:6,opeType:7,opeAccid:8},qchatQuickCommentQueryTag:{serverId:1,channelId:2,msgIdServerList:3},qchatGetLastMessageOfChannelsTag:{serverId:1,channelIdList:2},qchatMultiSyncServersMessageReadTag:{successServerIds:1,failServerIds:2,ackTimestamp:3},qchatMessageSearchByPageTag:{keyword:1,serverId:2,channelId:3,fromAccid:4,fromTime:5,toTime:6,msgTypes:7,subTypes:8,includeSelf:9,order:10,limit:11,sort:12,cursor:13},qchatPageQueryTag:{hasMore:1,nextTimetag:2,cursor:3},unreadInfo:Rn},oi=invertSerializeMap(ii),si={qchatSendMsg:{service:"qchatMsg",sid:24,cid:10,params:[{type:"Property",name:"qchatMsg",reflectMapper:ii.qchatMsgTag}],response:[{type:"Property",name:"qchatMsg",reflectMapper:oi.qchatMsgTag}]},qchatOnMsg:{service:"qchatMsg",sid:24,cid:11,response:[{type:"Property",name:"qchatMsg",reflectMapper:oi.qchatMsgTag}]},qchatOnRecvUnreadInfo:{service:"qchatMsg",sid:24,cid:12,response:[{type:"Property",name:"qchatMsg",reflectMapper:oi.qchatMsgTag}]},qchatSendCustomSysMsg:{service:"qchatMsg",sid:24,cid:13,params:[{type:"Property",name:"sysMsg",reflectMapper:ii.sysMsg}],response:[{type:"Property",name:"sysMsg",reflectMapper:oi.sysMsg}]},qchatOnSysMsg:{service:"qchatMsg",sid:24,cid:14,response:[{type:"Property",name:"sysMsg",reflectMapper:oi.sysMsg}]},qchatGetHistoryMsg:{service:"qchatMsg",sid:24,cid:16,params:[{type:"Property",name:"getHistoryMsgTag",reflectMapper:ii.getHistoryMsgTag}],response:[{type:"PropertyArray",name:"qchatMsgs",reflectMapper:oi.qchatMsgTag}]},qchatUpdateMessage:{service:"qchatMsg",sid:24,cid:25,params:[{type:"Property",name:"qchatMsgUpdateTag",reflectMapper:ii.qchatMsgUpdateTag},{type:"Property",name:"qchatMsg",reflectMapper:ii.qchatMsgTag}],response:[{type:"Property",name:"qchatMsg",reflectMapper:oi.qchatMsgTag}]},qchatRecvMessageUpdate:{service:"qchatMsg",sid:24,cid:26,response:[{type:"Property",name:"qchatMsgUpdateInfo",reflectMapper:oi.qchatMsgUpdateTag},{type:"Property",name:"qchatMsg",reflectMapper:oi.qchatMsgTag}]},qchatMarkMessageRead:{sid:24,cid:17,service:"qchatMsg",params:[{type:"Property",name:"markMsgReadTag",reflectMapper:ii.markMsgReadTag}],response:[{type:"Property",name:"unreadInfo",reflectMapper:oi.unreadInfo}]},qchatMultiSyncMessageRead:{sid:24,cid:18,service:"qchatMsg",response:[{type:"Property",name:"unreadInfo",reflectMapper:oi.unreadInfo}]},qchatUpdateSystemNotification:{service:"qchatMsg",sid:24,cid:22,params:[{type:"Property",name:"qchatMsgUpdateTag",reflectMapper:ii.qchatMsgUpdateTag},{type:"Property",name:"sysMsg",reflectMapper:ii.sysMsg}],response:[{type:"Property",name:"sysMsg",reflectMapper:oi.sysMsg}]},qchatMultiSyncSystemNotificationUpdate:{service:"qchatMsg",sid:24,cid:23,response:[{type:"Property",name:"qchatMsgUpdateTag",reflectMapper:oi.qchatMsgUpdateTag},{type:"Property",name:"sysMsg",reflectMapper:oi.sysMsg}]},qchatSyncSystemNotification:{service:"qchatMsg",sid:24,cid:24,response:[{type:"PropertyArray",name:"systemNotifications",reflectMapper:oi.sysMsg}]},qchatMarkSysMsgRead:{service:"qchatMsg",sid:24,cid:28,params:[{type:"PropertyArray",name:"sysMsgs",reflectMapper:ii.sysMsg}]},qchatMessageSearchByPage:{service:"qchatMsg",sid:24,cid:94,params:[{type:"Property",name:"qchatMessageSearchByPageTag",reflectMapper:ii.qchatMessageSearchByPageTag}],response:[{type:"Property",name:"listQueryTag",reflectMapper:oi.qchatPageQueryTag},{type:"PropertyArray",name:"datas",reflectMapper:oi.qchatMsgTag}]},qchatGetMessageHistoryByIds:{service:"qchatMsg",sid:24,cid:100,params:[{type:"Property",name:"channelInfo",reflectMapper:{serverId:1,channelId:2}},{type:"PropertyArray",name:"messageReferList",reflectMapper:{msgIdServer:1,time:2}}],response:[{type:"PropertyArray",name:"qchatMsgs",reflectMapper:oi.qchatMsgTag}]},qchatGetThreadMessages:{service:"qchatMsg",sid:24,cid:101,params:[{type:"Property",name:"qchatMsg",reflectMapper:ii.qchatMsgTag},{type:"Property",name:"getThreadHistoryMsgTag",reflectMapper:ii.getThreadHistoryMsgTag}],response:[{type:"Property",name:"thread",reflectMapper:oi.qchatMsgTag},{type:"Property",name:"threadInfo",reflectMapper:{1:"messageCount",2:"lastMessageTimestamp"}},{type:"PropertyArray",name:"qchatMsgs",reflectMapper:oi.qchatMsgTag}]},qchatUpdateQuickComment:{service:"qchatMsg",sid:24,cid:102,params:[{type:"Property",name:"tag",reflectMapper:ii.qchatQuickCommentRequestTag}]},qchatGetQuickComments:{service:"qchatMsg",sid:24,cid:103,params:[{type:"Property",name:"tag",reflectMapper:ii.qchatQuickCommentQueryTag}],response:[{type:"PropertyArray",name:"quickCommentResponse",reflectMapper:{1:"serverId",2:"channelId",3:"msgIdServer",4:"totalCount",5:"lastUpdateTime",6:"details"}}]},qchatGetThreadRootMessagesMeta:{service:"qchatMsg",sid:24,cid:108,params:[{type:"Property",name:"tag",reflectMapper:{serverId:1,channelId:2}},{type:"PropertyArray",name:"qchatMsgs",reflectMapper:{time:7,msgIdServer:14}}],response:[{type:"PropertyArray",name:"metas",reflectMapper:{1:"total",2:"timestamp",3:"msgIdServer",4:"msgTime"}}]},qchatGetLastMessageOfChannels:{service:"qchatMsg",sid:24,cid:121,params:[{type:"Property",name:"tag",reflectMapper:ii.qchatGetLastMessageOfChannelsTag}],response:[{type:"PropertyArray",name:"msgs",reflectMapper:oi.qchatMsgTag}]},qchatMultiSyncServersMessageRead:{service:"qchatMsg",sid:25,cid:6,response:[{type:"Property",name:"qchatMultiSyncServersMessageReadTag",reflectMapper:oi.qchatMultiSyncServersMessageReadTag}]},qchatGetMentionedMeMessages:{service:"qchatMsg",sid:24,cid:127,params:[{type:"Property",name:"tag",reflectMapper:{serverId:1,channelId:2,timestamp:3,limit:4}}],response:[{type:"Property",name:"page",reflectMapper:oi.qchatPageQueryTag},{type:"PropertyArray",name:"datas",reflectMapper:oi.qchatMsgTag}]}};var ci;!function(e){e[e.Android=1]="Android",e[e.iOS=2]="iOS",e[e.PC=4]="PC",e[e.WindowsPhone=8]="WindowsPhone",e[e.Web=16]="Web",e[e.Server=32]="Server",e[e.Mac=64]="Mac"}(ci||(ci={}));const li=["image","audio","video","file"],di={time:{type:"number"},updateTime:{type:"number"},resendFlag:{type:"boolean"},persistEnable:{type:"boolean"},routeEnable:{type:"boolean"},pushEnable:{type:"boolean"},needBadge:{type:"boolean"},needPushNick:{type:"boolean"},type:{type:"enum",values:Ia},fromClientType:{type:"enum",values:ci},status:{type:"number"},toAccids:{type:"object"},toType:{type:"number"},attach:{type:"object"},pushPayload:{type:"object"}};function generatorSysMsgForCmd(e,t){const r=Object.assign({},e),n=Object.assign({type:t||Ia.custom},formatReverse(di,r));return n.serverId&&n.channelId&&n.toAccids?n.toType=Ma.channelAccids:n.serverId&&n.toAccids?n.toType=Ma.serverAccids:n.serverId&&n.channelId?n.toType=Ma.channel:n.serverId?n.toType=Ma.server:n.toAccids?n.toType=Ma.accids:n.toType=Ma.unknown,n}const hi={[Ia.channelUpdateWhiteBlackIdentify]:function(e){return e.notify=formatUpdateWhiteBlackRole(deserialize(e.notify,En.qchatUpdateWhiteBlackRoleTag)),e},[Ia.channelUpdateWhiteBlackIdentifyUser]:function(e){return e.notify=function formatUpdateWhiteBlackMembers(e){return format(ra,e)}(deserialize(e.notify,En.qchatUpdateWhiteBlackMembersTag)),e},[Ia.updateQuickComment]:function(e){return e.notify=function formatQuickCommentRequest(e){return format(mi,e)}(deserialize(e.notify,oi.qchatQuickCommentRequestTag)),e},[Ia.channelCategoryCreate]:function(e){return e.categoryInfo=formatChannelCategory(deserialize(e.categoryInfo,En.QChatChannelCategoryInfo)),e},[Ia.channelCategoryUpdate]:function(e){return e.categoryInfo=formatChannelCategory(deserialize(e.categoryInfo,En.QChatChannelCategoryInfo)),e},[Ia.channelCategoryUpdateWhiteBlackIdentify]:function(e){return e.notify=formatUpdateWhiteBlackRole(deserialize(e.notify,En.qchatUpdateChannelCategoryWhiteBlackRoleTag)),e},[Ia.channelCategoryUpdateWhiteBlackIdentifyUser]:function(e){return e.notify=formatUpdateWhiteBlackRole(deserialize(e.notify,En.qchatUpdateChannelCategoryWhiteBlackMembersTag)),e},[Ia.serverIdentifyAdd]:function(e){return e.serverIdentifyInfo=formatRole(deserialize(e.serverIdentifyInfo,Za.serverRole)),e},[Ia.serverIdentifyRemove]:function(e){return e.serverIdentifyInfo=formatRole(deserialize(e.serverIdentifyInfo,Za.serverRole)),e},[Ia.serverIdentifyUpdate]:function(e){return e.serverIdentifyInfo=formatRole(deserialize(e.serverIdentifyInfo,Za.serverRole)),e},[Ia.channelIdentifyUpdate]:function(e){return e.channelIdentifyInfo=formatRole(deserialize(e.channelIdentifyInfo,Za.channelRole)),e},[Ia.userIdentifyUpdate]:function(e){return e.userIdentifyInfo=formatRole(deserialize(e.userIdentifyInfo,Za.memberRole)),e},[Ia.myMemberInfoUpdated]:function(e){const t=Dr(e,"userInfo.name"),r=Dr(e,"userInfo.icon");return e.updatedInfos=e.reuseServers.map((e=>{const n={serverId:e.serverId};1==(1&e.bits)&&"string"==typeof t&&Object.assign(n,{nickChanged:!0,nick:t});return 2==(2&e.bits)&&"string"==typeof r&&Object.assign(n,{avatarChanged:!0,avatar:r}),n})),delete e.userInfo,delete e.reuseServers,e}};function formatSystemNotification(e,t){const r=format(di,e);if(!r.attach)return r;if(r.attach.serverInfo&&(r.attach.serverInfo=formatServer(deserialize(r.attach.serverInfo,xn.serverInfo))),r.attach.channelInfo&&(r.attach.channelInfo=formatChannel(deserialize(r.attach.channelInfo,En.channelInfo))),r.attach.serverMember&&(r.attach.serverMember=formatMember$1(deserialize(r.attach.serverMember,xn.memberInfo))),hi[r.attach.type]&&(r.attach=hi[r.attach.type](r.attach)),r.attach.updateAuths)try{r.attach.updateAuths=formatRoleAuths(JSON.parse(r.attach.updateAuths))}catch(e){t.error("formatSystemNotification:JSON parse updateAuths error: ",e)}return r.attach.type&&(r.attach.rawType=r.attach.type,r.attach.type=Ia[r.attach.type]),r}const pi={type:{type:"enum",values:fa},fromClientType:{type:"enum",values:ci},status:{type:"number"},resendFlag:{type:"boolean"},mentionAll:{type:"boolean"},notifyReason:{type:"enum",values:ba},pushEnable:{type:"boolean"},historyEnable:{type:"boolean"},needBadge:{type:"boolean"},needPushNick:{type:"boolean"},routeEnable:{type:"boolean"},time:{type:"number"},updateTime:{type:"number"},mentionAccids:{type:"object"},mentionRoleIds:{type:"object"},accidsOfMentionedRoles:{type:"object"},attach:{type:"object"},pushPayload:{type:"object"},isAntispam:{type:"boolean"},antiSpamInfo:{useCustomContent:{type:"boolean"},antiSpamContent:{type:"string"},antiSpamBusinessId:{type:"string"},antiSpamUsingYidun:{type:"boolean"},yidunCallback:{type:"string"},yidunAntiCheating:{type:"object"},yidunAntiSpamExt:{type:"object"},yidunAntiSpamRes:{type:"string"}},replyRefer:{fromAccount:{type:"string",rawKey:"replyMsgFromAccount"},time:{type:"number",rawKey:"replyMsgTime"},msgIdServer:{type:"string",rawKey:"replyMsgIdServer"},msgIdClient:{type:"string",rawKey:"replyMsgIdClient"}},threadRefer:{fromAccount:{type:"string",rawKey:"threadMsgFromAccount"},time:{type:"number",rawKey:"threadMsgTime"},msgIdServer:{type:"string",rawKey:"threadMsgIdServer"},msgIdClient:{type:"string",rawKey:"threadMsgIdClient"}}};function generatorMsgForCmd(e){const t=__rest(e,["onSendBefore","onUploadStart","onUploadDone","onUploadProgress"]),r=formatReverse(pi,t);if(r.msgIdClient=e.resendFlag?e.msgIdClient:it(),!r.msgIdClient)throw new FormatError("msgIdClient is required for resend a message","msgIdClient","required");return e.replyMessage&&e.replyMessage.msgIdServer&&(r.replyMsgFromAccount=e.replyMessage.fromAccount,r.replyMsgTime=+e.replyMessage.time,r.replyMsgIdServer=e.replyMessage.msgIdServer,r.replyMsgIdClient=e.replyMessage.msgIdClient,e.replyMessage.threadRefer&&e.replyMessage.threadRefer.msgIdServer?(r.threadMsgFromAccount=e.replyMessage.threadRefer.fromAccount,r.threadMsgTime=+e.replyMessage.threadRefer.time,r.threadMsgIdServer=e.replyMessage.threadRefer.msgIdServer,r.threadMsgIdClient=e.replyMessage.threadRefer.msgIdClient):(r.threadMsgFromAccount=e.replyMessage.fromAccount,r.threadMsgTime=+e.replyMessage.time,r.threadMsgIdServer=e.replyMessage.msgIdServer,r.threadMsgIdClient=e.replyMessage.msgIdClient),delete r.replyMessage),r}function formatMsgOperatorInfo(e){return format({operatorClientType:{type:"enum",values:ci},pushPayload:{type:"object"}},e)}function formatMsg(e,t={},r){var n,a;return __awaiter(this,void 0,void 0,(function*(){const i=format(pi,e);if(i.deliveryStatus=t.deliveryStatus?Ca[t.deliveryStatus]:Ca[Ca.success],t.time&&(i.time=t.time),i.updateContent){let e=JSON.parse(i.updateContent);e=deserialize(e,oi.qchatMsgTag),e=format({status:{type:"number"}},e),i.updateContent=e}if(i.updateOperatorInfo){let e=JSON.parse(i.updateOperatorInfo);e=formatMsgOperatorInfo(deserialize(e,oi.qchatMsgUpdateTag)),i.updateOperatorInfo=e}return""===(null===(n=null==i?void 0:i.threadRefer)||void 0===n?void 0:n.fromAccount)&&delete i.threadRefer,""===(null===(a=null==i?void 0:i.replyRefer)||void 0===a?void 0:a.fromAccount)&&delete i.replyRefer,i.attach&&t.attachUrl&&(i.attach.url=t.attachUrl),yield function formatMsgAttach(e,t){return __awaiter(this,void 0,void 0,(function*(){if(!(li.includes(e.type)&&e.attach&&e.attach.url))return e;if(!t||!t.cloudStorage||"function"!=typeof t.cloudStorage.getPrivateUrl||"function"!=typeof t.cloudStorage.getOriginUrl)return e;if(e.attach.url.indexOf("_im_url=1")<0)return e.attach.url=t.cloudStorage.getPrivateUrl(e.attach.url),e;try{e.attach.url=yield t.cloudStorage.getOriginUrl(e.attach.url)}catch(t){throw new FormatError(`url "${e.attach.url}" parse error`,"message.attach.url","parse error")}return e}))}(i,r)}))}function formatMsgs(e,t={},r){return __awaiter(this,void 0,void 0,(function*(){if(!(Array.isArray(e)&&e.length>0))return[];const n=e.map((e=>formatMsg(e,t,r)));return yield Promise.all(n)}))}const ui={totalCount:{type:"number"},lastUpdateTime:{type:"number"},details:{type:"object"}};const mi={type:{type:"number"},time:{type:"number"},opeType:{type:"number"}};const gi={includeSelf:{type:"number"},order:{type:"enum",values:Tn},sort:{type:"enum",values:va},msgTypes:{type:"object"},subTypes:{type:"object"}};const yi={hasMore:{type:"boolean"},nextTimetag:{type:"number"},cursor:{type:"string"}};const vi={6:function(e){return this.core.qchatChannel.subscribeForVisitorService.deleteAutoSetInServerId(e.serverId),!0},16:function(e){return this.core.qchatChannel.subscribeForVisitorService.deleteAutoSetInChannel(e.serverId,e.channelId),!0},26:function(e){const t=Dr(e,"attach.addAccids");return t&&t.includes(this.core.account)&&this.core.eventBus.emit("qchatChannel/serverIdentifyChange",e),!0},27:function(e){const t=Dr(e,"attach.deleteAccids");return t&&t.includes(this.core.account)&&this.core.eventBus.emit("qchatChannel/serverIdentifyChange",e),!0},31:function(e){return 2===e.attach.event&&(this.core.eventBus.emit("qchatChannel/autoUnSubscribe",e),this.core.eventBus.emit("qchatMedia/serverOrChannelLeave",e)),!0},32:function(e){return 2===e.attach.event?(this.core.eventBus.emit("qchatChannel/autoUnSubscribe",e),this.core.eventBus.emit("qchatMedia/serverOrChannelLeave",e)):1===e.attach.event&&this.core.qchatChannel.subscribeForVisitorService.deleteServer(e.serverId),!0},34:function(e){return 2===e.attach.event&&this.core.qchatChannel.subscribeForVisitorService.unSubscribeChannel(e.serverId,e.channelId),!0},101:function(e){const t=ni(e,["serverId","channelId","ext","fromAccount","fromNick","time"]);return this.logger.log("qchat on recvTypingEvent: ",t),this.core.emit("recvTypingEvent",t),!1}};class NotificationModuleService{constructor(e){this.core=e,this.logger=e.logger}sendSystemNotification(e){return __awaiter(this,void 0,void 0,(function*(){const t=formatSystemNotification((yield this.core.sendCmd("qchatSendCustomSysMsg",{sysMsg:generatorSysMsgForCmd(e)})).content.sysMsg,this.logger);return"debug"===this.core.options.debugLevel?this.logger.debug("sendCustomSysMsg success",t):this.logger.log("sendCustomSysMsg success",t.serverId,t.channelId,t.msgIdServer),t}))}updateSystemNotification(e){return __awaiter(this,void 0,void 0,(function*(){const{systemNotification:t}=e,r=__rest(e,["systemNotification"]),n=generatorSysMsgForCmd(ni(t,["msgIdServer","type","body","ext","status"]));return formatSystemNotification((yield this.core.sendCmd("qchatUpdateSystemNotification",{sysMsg:n,qchatMsgUpdateTag:Object.assign(Object.assign({},r),{operatorAccount:this.core.account,operatorClientType:ci.Web,pushPayload:JSON.stringify(e.pushPayload),routeEnable:Vn.boolean(e,"routeEnable")})})).content.sysMsg,this.logger)}))}markSystemNotificationsRead(e){return __awaiter(this,void 0,void 0,(function*(){yield this.core.sendCmd("qchatMarkSysMsgRead",{sysMsgs:e.systemNotifications.map((e=>function generatorSysMsgMarkersForCmd(e){const t=ni(e,["msgIdServer","type"]);return formatReverse(di,t)}(e)))})}))}onSysMsg(e){const t=e.content.sysMsg;if(!t)return void this.core.logger.warn("No sysMsg in onSysMsg packet");const r=formatSystemNotification(t,this.core.logger),n=vi[Ia[r.type]];if(n){if(!1===n.call(this,r))return}const a={feature:"default",systemNotifications:[r]};this.logger.log("qchat on systemNotification: ",a),this.core.emit("systemNotification",a)}onMultiSysMsg(e){const t=e.content.sysMsg;if(!t)return;const r=formatSystemNotification(t,this.logger);this.core.emit("systemNotificationUpdate",r)}onSyncSysMsg(e){const t=e.content.systemNotifications;if(!(t&&t.length>0))return void this.logger.warn("sync system notification not exist");const r=t.map((e=>formatSystemNotification(e,this.logger)));this.core.emit("systemNotification",{feature:"sync",systemNotifications:r})}}const fi=["image","audio","video","file"];class MessageModuleService{constructor(e){this.markMessageRead=ja((e=>__awaiter(this,void 0,void 0,(function*(){const t=formatUnreadInfo((yield this.core.sendCmd("qchatMarkMessageRead",{markMsgReadTag:e})).content.unreadInfo);this.core.eventBus.emit("qchatChannel/updateUnread",t)}))),200),this.core=e,this.logger=e.logger}sendMessage(e){var t,r,n,a;return __awaiter(this,void 0,void 0,(function*(){fi.indexOf(e.type)>-1&&(e.attach=yield this.doSendFile(e));const i=generatorMsgForCmd(Object.assign({fromAccount:this.core.account},e)),o=yield formatMsg(i,{time:(new Date).getTime(),deliveryStatus:Ca.sending},this.core);try{e.onSendBefore&&e.onSendBefore(o)}catch(e){this.logger.error("sendMsg: options.onSendBefore error",e)}let s;try{s=yield this.core.sendCmd("qchatSendMsg",{qchatMsg:i})}catch(e){const r=yield formatMsg(i,{time:(new Date).getTime(),deliveryStatus:Ca.failed,attachUrl:null===(t=o.attach)||void 0===t?void 0:t.url},this.core);throw e.msg=r,e}const{content:c}=s,l=yield formatMsg(Object.assign({},c.qchatMsg),{deliveryStatus:Ca.success,attachUrl:null===(r=o.attach)||void 0===r?void 0:r.url},this.core);if(l.isAntispam){throw{code:10403,msg:l,message:(null===(n=null==l?void 0:l.antiSpamInfo)||void 0===n?void 0:n.yidunAntiSpamRes)||"message has be antispam",isAntispam:!0,yidunAntiSpamRes:(null===(a=null==l?void 0:l.antiSpamInfo)||void 0===a?void 0:a.yidunAntiSpamRes)||""}}return l}))}doSendFile(e){return __awaiter(this,void 0,void 0,(function*(){validate({type:{type:"enum",values:["image","audio","video","file"]},attach:{type:"object",rules:{url:{type:"string",allowEmpty:!1}},required:!1},maxSize:{type:"number",min:1,required:!1}},e);let t=e.attach;if(!t){if(!this.core.cloudStorage||!this.core.cloudStorage.uploadFile)throw new Error('Service "cloudStorage" does not exist');try{t=yield this.core.cloudStorage.uploadFile(e)}catch(e){throw this.logger.error("sendFile:: upload File error or abort",e),e}try{e.onUploadDone&&e.onUploadDone(t)}catch(e){throw this.logger.error("sendFile options.onUploadDone err",e),e}}return t}))}resendMessage(e){var t,r;return __awaiter(this,void 0,void 0,(function*(){const n=generatorMsgForCmd(Object.assign(Object.assign({},e),{resendFlag:!0}));let a;n.deliveryStatus=Ca.sending;try{a=yield this.core.sendCmd("qchatSendMsg",{qchatMsg:n})}catch(e){const t=yield formatMsg(n,{time:(new Date).getTime(),deliveryStatus:Ca.failed},this.core);throw e.msg=t,e}const{content:i}=a,o=yield formatMsg(Object.assign({},i.qchatMsg),{deliveryStatus:Ca.success},this.core);if(o.isAntispam){throw{code:10403,msg:o,message:(null===(t=null==o?void 0:o.antiSpamInfo)||void 0===t?void 0:t.yidunAntiSpamRes)||"message has be antispam",isAntispam:!0,yidunAntiSpamRes:(null===(r=null==o?void 0:o.antiSpamInfo)||void 0===r?void 0:r.yidunAntiSpamRes)||""}}return o}))}doUpdateMessage(e){var t,r;return __awaiter(this,void 0,void 0,(function*(){const{message:n}=e,a=__rest(e,["message"]),i=generatorMsgForCmd(n);i.msgIdClient=void 0,i.time=n.time;const o=yield this.core.sendCmd("qchatUpdateMessage",{qchatMsg:i,qchatMsgUpdateTag:Object.assign(Object.assign({},a),{operatorAccount:this.core.account,operatorClientType:ci.Web,pushPayload:JSON.stringify(e.pushPayload),routeEnable:Vn.boolean(e,"routeEnable")})}),s=yield formatMsg(o.content.qchatMsg,{},this.core);if(this.core.eventBus.emit("qchatChannel/changeUnread",s,!0),o.content.qchatMsg.isAntispam){throw{code:10403,msg:i,message:(null===(t=o.content.qchatMsg)||void 0===t?void 0:t.yidunAntiSpamRes)||"message has be antispam",isAntispam:!0,yidunAntiSpamRes:(null===(r=o.content.qchatMsg)||void 0===r?void 0:r.yidunAntiSpamRes)||""}}return s}))}getHistoryMessage(e){return __awaiter(this,void 0,void 0,(function*(){const t=yield this.core.sendCmd("qchatGetHistoryMsg",{getHistoryMsgTag:Object.assign(Object.assign({},e),{reverse:e.reverse?1:0})}),{content:r}=t;return yield Promise.all(r.qchatMsgs.map((e=>formatMsg(e,{},this.core))))}))}getMentionedMeMessages(e){return __awaiter(this,void 0,void 0,(function*(){const t=yield this.core.sendCmd("qchatGetMentionedMeMessages",{tag:e}),{content:r}=t;return{pageInfo:function formatPageInfo(e){return format(yi,e)}(r.page),messages:yield Promise.all(r.datas.map((e=>formatMsg(e,{},this.core))))}}))}areMentionedMeMessages(e){return __awaiter(this,void 0,void 0,(function*(){const t={};for(let r=0;r<e.length;r++){const n=e[r];n.fromAccount!==this.core.account?t[n.msgIdClient]=yield this.core.qchatChannel.subscribeModuleService.getMentionedFlag(n,!0):t[n.msgIdClient]=!1}return t}))}getLastMessageOfChannels(e){return __awaiter(this,void 0,void 0,(function*(){const t=(yield this.core.sendCmd("qchatGetLastMessageOfChannels",{tag:e})).content.msgs;return(yield formatMsgs(t,{},this.core)).reduce(((e,t)=>(e[t.channelId]=t,e)),{})}))}messageSearchByPage(e){return __awaiter(this,void 0,void 0,(function*(){const t=yield this.core.sendCmd("qchatMessageSearchByPage",{qchatMessageSearchByPageTag:Object.assign(Object.assign({},(r=e,formatReverse(gi,r))),{includeSelf:e.includeSelf?1:""})});var r;const{datas:n,listQueryTag:a}=t.content,i=yield formatMsgs(n,{},this.core);return{listQueryTag:{hasMore:1==+a.hasMore,nextTimetag:a.nextTimetag?parseInt(a.nextTimetag):0,cursor:a.cursor},datas:i}}))}onMsg(e){return __awaiter(this,void 0,void 0,(function*(){const t=e.content.qchatMsg;if(!t)return void this.logger.warn("No qchatMsg in qchatMsg packet");const r=yield formatMsg(t,{},this.core);this.core.eventBus.emit("qchatChannel/changeUnread",r,!1),this.core.emit("message",r)}))}onRecvUnreadInfo(e){return __awaiter(this,void 0,void 0,(function*(){const t=e.content.qchatMsg;if(!t)return;const r=yield formatMsg(t);this.core.eventBus.emit("qchatChannel/changeUnread",r,!1)}))}onMultiSyncRead(e){const t=e.content.unreadInfo;if(!t)return;const r=formatUnreadInfo(t);this.core.eventBus.emit("qchatChannel/updateUnread",r)}onMultiSyncServersRead(e){const t=e.content.qchatMultiSyncServersMessageReadTag;if(!t)return;const{successServerIds:r,ackTimestamp:n}=formatClearServersUnread(t);this.core.eventBus.emit("qchatChannel/clearUnreadCountByServers",r,n)}onRecvMsgUpdate(e){return __awaiter(this,void 0,void 0,(function*(){const t=e.content.qchatMsg,r=e.content.qchatMsgUpdateInfo;if(!t)return;const n=yield formatMsg(t,{},this.core),a=formatMsgOperatorInfo(r);this.core.eventBus.emit("qchatChannel/changeUnread",n,!0),this.core.emit("messageUpdate",n,a)}))}}class ExtendModuleService{constructor(e){this._sendTypingEvent=ja((e=>__awaiter(this,void 0,void 0,(function*(){yield this.core.sendCmd("qchatSendCustomSysMsg",{sysMsg:generatorSysMsgForCmd(Object.assign(Object.assign({},e),{resendFlag:!1,persistEnable:!1,routeEnable:!1,pushEnable:!1,needBadge:!1,needPushNick:!1}),Ia.msgTyping)})}))),3e3),this.core=e,this.logger=e.logger,this.lastChannelIdInTyping=""}getMessageHistoryByIds(e){return __awaiter(this,void 0,void 0,(function*(){const t=yield this.core.sendCmd("qchatGetMessageHistoryByIds",{channelInfo:{serverId:e.serverId,channelId:e.channelId},messageReferList:e.messageReferList});return Promise.all(t.content.qchatMsgs.map((e=>formatMsg(e))))}))}getReferMessages(e){var t,r;return __awaiter(this,void 0,void 0,(function*(){if(!(null===(t=e.message.replyRefer)||void 0===t?void 0:t.msgIdServer)||!(null===(r=e.message.threadRefer)||void 0===r?void 0:r.msgIdServer))throw new Error("Message has no reply");const n=yield this.getMessageHistoryByIds({serverId:e.message.serverId,channelId:e.message.channelId,messageReferList:[e.message.replyRefer,e.message.threadRefer]});return e.referType===Sa[Sa.all]?{replyMessage:n[0],threadMessage:n[1]}:e.referType===Sa[Sa.reply]?{replyMessage:n[0]}:e.referType===Sa[Sa.thread]?{threadMessage:n[1]}:{replyMessage:n[0],threadMessage:n[1]}}))}getThreadMessages(e){var t;return __awaiter(this,void 0,void 0,(function*(){let r;r=(null===(t=e.message.threadRefer)||void 0===t?void 0:t.msgIdServer)?Object.assign({serverId:e.message.serverId,channelId:e.message.channelId},e.message.threadRefer):e.message;const n=yield this.core.sendCmd("qchatGetThreadMessages",{qchatMsg:r,getThreadHistoryMsgTag:Object.assign(Object.assign({},e.messageQueryOption),{reverse:Vn.boolean(e.messageQueryOption,"reverse")})}),a=yield formatMsg(n.content.thread),i=yield Promise.all(n.content.qchatMsgs.map((e=>formatMsg(e))));return{thread:a,threadInfo:{messageCount:+n.content.threadInfo.messageCount,lastMessageTimestamp:+n.content.threadInfo.lastMessageTimestamp},messages:i}}))}getThreadRootMessagesMeta(e){return __awaiter(this,void 0,void 0,(function*(){const{threadRootMessages:t}=e,r=__rest(e,["threadRootMessages"]),n=(yield this.core.sendCmd("qchatGetThreadRootMessagesMeta",{qchatMsgs:t,tag:r})).content.metas;return n&&n.length>0?n.map((e=>Object.assign(Object.assign({},e),{total:parseInt(e.total),timestamp:parseInt(e.timestamp),msgTime:parseInt(e.msgTime)}))):[]}))}getQuickComments(e){return __awaiter(this,void 0,void 0,(function*(){const t=yield this.core.sendCmd("qchatGetQuickComments",{tag:{serverId:e.serverId,channelId:e.channelId,msgIdServerList:JSON.stringify(e.msgList.map((e=>e.msgIdServer)))}}),{quickCommentResponse:r}=t.content;return function formatQuickComments(e){const t=e.map((e=>{const t=format(ui,e);return t.details=t.details.map((e=>({count:e.count,hasSelf:e.self,severalAccids:e.topN,type:e.type}))),t})),r={};return t.forEach((e=>r[e.msgIdServer]=e)),r}(r)}))}updateQuickComment(e,t){return __awaiter(this,void 0,void 0,(function*(){validate({type:{type:"number"},commentMessage:{type:"object",rules:{msgIdServer:{type:"string",allowEmpty:!1}}}},e);const{serverId:r,channelId:n,fromAccount:a,msgIdServer:i,time:o}=e.commentMessage;yield this.core.sendCmd("qchatUpdateQuickComment",{tag:{serverId:r,channelId:n,fromAccount:a,msgIdServer:i,time:o,type:e.type,opeType:t,opeAccid:this.core.account}})}))}sendTypingEvent(e){return __awaiter(this,void 0,void 0,(function*(){if(e.channelId===this.lastChannelIdInTyping)return this.logger.log("qchatMsg sendTypingEvent throttle"),void this._sendTypingEvent(e);this.lastChannelIdInTyping=e.channelId,this._sendTypingEvent.flush(),this._sendTypingEvent(e)}))}}class QChatMsgService extends Service{constructor(e){super("qchatMsg",e),this.core=e,this.lastChannelIdInMark="",registerParser({cmdMap:ai,cmdConfig:si}),this.notificationModuleService=new NotificationModuleService(e),this.messageModuleService=new MessageModuleService(e),this.extendModuleService=new ExtendModuleService(e)}sendMessage(e){return __awaiter(this,void 0,void 0,(function*(){return validate({serverId:{type:"string",allowEmpty:!1},channelId:{type:"string",allowEmpty:!1},type:{type:"enum",values:getEnumKeys(fa)},ext:{type:"string",required:!1},mentionAll:{type:"boolean",required:!1},mentionAccids:{type:"array",itemType:"string",required:!1},mentionRoleIds:{type:"array",itemType:"string",required:!1,min:1},historyEnable:{type:"boolean",required:!1},pushEnable:{type:"boolean",required:!1}},e),yield this.messageModuleService.sendMessage(e)}))}updateMessage(e){return __awaiter(this,void 0,void 0,(function*(){if(validate({message:{type:"object",rules:{serverId:{type:"string",allowEmpty:!1},channelId:{type:"string",allowEmpty:!1},msgIdServer:{type:"string",allowEmpty:!1},time:{type:"number",min:0},body:{type:"string",required:!1},ext:{type:"string",required:!1}}}},e),"number"==typeof e.message.status&&e.message.status<1e4)throw new CustomError("Status should be greater than or equal to 10000");return yield this.messageModuleService.doUpdateMessage(e)}))}resendMessage(e){return __awaiter(this,void 0,void 0,(function*(){return validate({serverId:{type:"string",allowEmpty:!1},channelId:{type:"string",allowEmpty:!1},msgIdClient:{type:"string",allowEmpty:!1}},e),yield this.messageModuleService.resendMessage(e)}))}deleteMessage(e){return __awaiter(this,void 0,void 0,(function*(){validate({message:{type:"object",rules:{serverId:{type:"string",allowEmpty:!1},channelId:{type:"string",allowEmpty:!1},msgIdServer:{type:"string",allowEmpty:!1},time:{type:"number",min:0}}}},e);const t=JSON.parse(JSON.stringify(e));return t.message.status=2,yield this.messageModuleService.doUpdateMessage(t)}))}revokeMessage(e){return __awaiter(this,void 0,void 0,(function*(){validate({message:{type:"object",rules:{serverId:{type:"string",allowEmpty:!1},channelId:{type:"string",allowEmpty:!1},msgIdServer:{type:"string",allowEmpty:!1},time:{type:"number",min:0}}}},e);const t=JSON.parse(JSON.stringify(e));return t.message=ni(t.message,["serverId","channelId","msgIdServer","time"]),t.message.status=1,yield this.messageModuleService.doUpdateMessage(t)}))}markMessageRead(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string"},channelId:{type:"string"},time:{type:"number",min:0}},e),e.channelId!==this.lastChannelIdInMark&&this.messageModuleService.markMessageRead.flush(),this.lastChannelIdInMark=e.channelId,this.messageModuleService.markMessageRead(e)}))}replyMessage(e){validate({replyMessage:{type:"object",rules:{msgIdServer:{type:"string",allowEmpty:!1}}}},e);const t=e.replyMessage;if(e.serverId!==t.serverId||e.channelId!==t.channelId)throw new CustomError("Forbid replying to message from other server, channel");return this.sendMessage(e)}getMessageHistoryByIds(e){return __awaiter(this,void 0,void 0,(function*(){return validate({serverId:{type:"string",allowEmpty:!1},channelId:{type:"string",allowEmpty:!1},messageReferList:{type:"array",rules:{msgIdServer:{type:"string",allowEmpty:!1},time:{type:"number"}}}},e),yield this.extendModuleService.getMessageHistoryByIds(e)}))}getReferMessages(e){return __awaiter(this,void 0,void 0,(function*(){return validate({message:{type:"object",rules:{msgIdServer:{type:"string",allowEmpty:!1},time:{type:"number"}}},referType:{type:"enum",values:getEnumKeys(Sa),required:!1}},e),yield this.extendModuleService.getReferMessages(e)}))}getThreadMessages(e){return __awaiter(this,void 0,void 0,(function*(){return validate({message:{type:"object",rules:{msgIdServer:{type:"string",allowEmpty:!1},time:{type:"number"}}},messageQueryOption:{type:"object",rules:{beginTime:{type:"number",required:!1},endTime:{type:"number",required:!1},excludeMsgId:{type:"string",required:!1},limit:{type:"number",required:!1},reverse:{type:"boolean",required:!1}}}},e),yield this.extendModuleService.getThreadMessages(e)}))}getThreadRootMessagesMeta(e){return __awaiter(this,void 0,void 0,(function*(){return validate({serverId:{type:"string",allowEmpty:!1},channelId:{type:"string",allowEmpty:!1},threadRootMessages:{type:"array",rules:{msgIdServer:{type:"string",allowEmpty:!1},time:{type:"number"}}}},e),yield this.extendModuleService.getThreadRootMessagesMeta(e)}))}sendSystemNotification(e){return __awaiter(this,void 0,void 0,(function*(){return validate({serverId:{type:"string",allowEmpty:!1},channelId:{type:"string",allowEmpty:!1,required:!1},attach:{type:"object",required:!1}},e),yield this.notificationModuleService.sendSystemNotification(e)}))}updateSystemNotification(e){return __awaiter(this,void 0,void 0,(function*(){return validate({systemNotification:{type:"object",rules:{msgIdServer:{type:"string",allowEmpty:!1},type:{type:"enum",values:getEnumKeys(Ia)},body:{type:"string",required:!1},ext:{type:"string",required:!1},status:{type:"number",required:!1}}}},e),yield this.notificationModuleService.updateSystemNotification(e)}))}markSystemNotificationsRead(e){return __awaiter(this,void 0,void 0,(function*(){validate({systemNotifications:{type:"array",rules:{msgIdServer:{type:"string",allowEmpty:!1},type:{type:"string",allowEmpty:!1}},min:1}},e),yield this.notificationModuleService.markSystemNotificationsRead(e)}))}getHistoryMessage(e){return __awaiter(this,void 0,void 0,(function*(){return validate({serverId:{type:"string",allowEmpty:!1},channelId:{type:"string",allowEmpty:!1},beginTime:{type:"number",min:0,required:!1},endTime:{type:"number",min:0,required:!1},excludeMsgId:{type:"string",allowEmpty:!1,required:!1},limit:{type:"number",min:1,required:!1},reverse:{type:"boolean",required:!1}},e),yield this.messageModuleService.getHistoryMessage(e)}))}getMentionedMeMessages(e){return __awaiter(this,void 0,void 0,(function*(){return validate({serverId:{type:"string",allowEmpty:!1},channelId:{type:"string",allowEmpty:!1},timestamp:{type:"number",min:0,required:!1},limit:{type:"number",min:1,required:!1}},e),yield this.messageModuleService.getMentionedMeMessages(e)}))}areMentionedMeMessages(e){return __awaiter(this,void 0,void 0,(function*(){validate({messages:{type:"array",rules:{serverId:{type:"string",allowEmpty:!1},channelId:{type:"string",allowEmpty:!1},msgIdServer:{type:"string",allowEmpty:!1}},min:1}},e);if(!e.messages.every((t=>e.messages[0].serverId===t.serverId)))throw new CustomError("Different serverId",e,10414);if(this.core.qchatChannel.subscribeForVisitorService.isInAutoServers(e.messages[0].serverId))throw new CustomError("Not allowed for visitor",e,10403);return yield this.messageModuleService.areMentionedMeMessages(e.messages)}))}addQuickComment(e){return __awaiter(this,void 0,void 0,(function*(){yield this.extendModuleService.updateQuickComment(e,1)}))}removeQuickComment(e){return __awaiter(this,void 0,void 0,(function*(){yield this.extendModuleService.updateQuickComment(e,2)}))}getQuickComments(e){return __awaiter(this,void 0,void 0,(function*(){return validate({serverId:{type:"string",allowEmpty:!1},channelId:{type:"string",allowEmpty:!1},msgList:{type:"array",rules:{msgIdServer:{type:"string",allowEmpty:!1}},min:1}},e),yield this.extendModuleService.getQuickComments(e)}))}sendTypingEvent(e){return __awaiter(this,void 0,void 0,(function*(){return validate({serverId:{type:"string",allowEmpty:!1},channelId:{type:"string",allowEmpty:!1},ext:{type:"string",required:!1}},e),yield this.extendModuleService.sendTypingEvent(e)}))}getLastMessageOfChannels(e){return __awaiter(this,void 0,void 0,(function*(){return validate({serverId:{type:"string",allowEmpty:!1},channelIdList:{type:"array",itemType:"string"}},e),yield this.messageModuleService.getLastMessageOfChannels(e)}))}qchatOnMsgHandler(e){return __awaiter(this,void 0,void 0,(function*(){this.messageModuleService.onMsg(e)}))}qchatOnRecvUnreadInfoHandler(e){return __awaiter(this,void 0,void 0,(function*(){this.messageModuleService.onRecvUnreadInfo(e)}))}qchatOnSysMsgHandler(e){this.notificationModuleService.onSysMsg(e)}qchatMultiSyncMessageReadHandler(e){this.messageModuleService.onMultiSyncRead(e)}qchatMultiSyncSystemNotificationUpdateHandler(e){this.notificationModuleService.onMultiSysMsg(e)}qchatSyncSystemNotificationHandler(e){this.notificationModuleService.onSyncSysMsg(e)}qchatRecvMessageUpdateHandler(e){return __awaiter(this,void 0,void 0,(function*(){this.messageModuleService.onRecvMsgUpdate(e)}))}searchMsgByPage(e){return __awaiter(this,void 0,void 0,(function*(){return validate({keyword:{type:"string",allowEmpty:!1,required:!1},serverId:{type:"string",allowEmpty:!1,required:!0},channelId:{type:"string",allowEmpty:!1,required:!1},fromAccid:{type:"string",allowEmpty:!1,required:!1},fromTime:{type:"number",allowEmpty:!1,required:!1},toTime:{type:"number",allowEmpty:!1,required:!1},msgTypes:{type:"array",itemType:"string",allowEmpty:!1,required:!0},subTypes:{type:"array",itemType:"string",allowEmpty:!1,required:!1},includeSelf:{type:"boolean",allowEmpty:!1,required:!1},order:{type:"enum",values:getEnumKeys(Tn),required:!1},limit:{type:"number",min:0,required:!1},sort:{type:"enum",values:getEnumKeys(va),required:!1},cursor:{type:"string",allowEmpty:!1,required:!1}},e),yield this.messageModuleService.messageSearchByPage(e)}))}qchatMultiSyncServersMessageReadHandler(e){this.messageModuleService.onMultiSyncServersRead(e)}}function formatLoginInfo(e,t=1){const r=format({clientPort:{type:"number"},clientType:{type:"enum",values:ci},customClientType:{type:"number"},loginTime:{type:"number"},hasTokenPreviously:{type:"boolean"},pushType:{type:"number"}},e);return Object.assign(Object.assign({},r),{account:r.account,connectionId:r.connectionId,deviceId:r.deviceId,ip:r.ip,mac:r.ip,os:r.os,clientType:r.clientType,time:r.time,online:2!==t})}const Ci={1:{reason:"samePlatformKick",message:"The same account is not allowed to multiple login at the same time"},2:{reason:"serverKick",message:"Kicked out by IM server"},3:{reason:"otherPlatformKick",message:"Kicked out by other client of your account"},4:{reason:"silentlyKick",message:"Quietly kicked"}};const bi={BROWSER:0,RN:2,UNIAPP:3,WECHAT:6};class QChatAuthService extends Service{constructor(e){super("qchatAuth",e),this.syncTimeTag=0}doLogin(e=!1){var t;return __awaiter(this,void 0,void 0,(function*(){const r=this.core.options,n=T.getSystemInfo(),a=Object.assign(Object.assign({},r),{appLogin:e?0:1,clientType:16,clientSession:null===(t=this.core.socket)||void 0===t?void 0:t.sessionId,deviceId:this.core.config.deviceId,sdkVersion:90903,sdkType:bi[T.platform]||0,userAgent:"Native/0.12.3",sdkHumanVersion:"0.12.3",os:n.os,browser:n.browser}),i=yield this.core.sendCmd("qchatLogin",{qchatLoginReqTag:a});if(i.error)throw i.error;const{qchatLoginResTag:o,qchatMultiLoginResult:s}=i.content;return o.isAutoReconnect=e,{loginResult:formatLoginInfo(o),multiLoginResults:s.map((e=>formatLoginInfo(e)))}}))}kick(e){var t;return __awaiter(this,void 0,void 0,(function*(){const r=yield this.core.sendCmd("qchatKick",e);return null===(t=r.content)||void 0===t?void 0:t.deviceIds}))}sync(){return __awaiter(this,void 0,void 0,(function*(){yield this.core.sendCmd("qchatSync",{qchatSyncTag:{systemNotification:this.syncTimeTag||0}})}))}qchatSyncHandler(e){var t,r;this.logger.log("sync: emit syncdone",null===(t=e.content)||void 0===t?void 0:t.timetag),this.core.emit("syncdone"),this.syncTimeTag=(null===(r=e.content)||void 0===r?void 0:r.timetag)||0}qchatMultiSpotLoginHandler(e){if(e.error)return void this.logger.error("qchatMultiPortLoginHandler:: error, ",e.error);const{qchatLoginResTag:t,state:r}=e.content,n=formatLoginInfo(t,r);this.core.emit("multiSpotLogin",[n])}qchatBeKickedHandler(e){if(e.error)return void this.logger.error("qchatBeKickedHandler error, ",e.error);const t=function formatBeKickedTag(e){const t=format({clientType:{type:"enum",values:ci},customClientType:{type:"number"}},e);let r=Ci[t.reason];return r=r||{reason:"unknow",message:"Unknown reason"},Object.assign(t,r)}(e.content.beKickedTag);this.logger.warn("bekicked::",t),this.core.doDisconnect(ot.KICKED,t)}}var Mi,Ii;!function(e){e.UNKNOWN="UNKNOWN",e.LOGIN_STATE_ERROR="LOGIN_STATE_ERROR",e.CLOSE_BY_BACKEND="CLOSE_BY_BACKEND",e.ALL_MEMBERS_OUT="ALL_MEMBERS_OUT",e.END_OF_LIFE="END_OF_LIFE",e.CLOSE_BY_MEMBER="CLOSE_BY_MEMBER",e.KICK_OUT="KICK_OUT",e.SYNC_DATA_ERROR="SYNC_DATA_ERROR",e.LEAVE_BY_SELF="LEAVE_BY_SELF",e.kICK_BY_SELF="kICK_BY_SELF"}(Mi||(Mi={})),function(e){e.offNotAllowSelfOn="offNotAllowSelfOn",e.offAllowSelfOn="offAllowSelfOn",e.disable="disable"}(Ii||(Ii={}));const Si={serverId:{type:"string"},uid:{type:"string"},accid:{type:"string"},nick:{type:"string"},avatar:{type:"string"},ext:{type:"string"},type:{type:"number"},joinTime:{type:"number"},inviter:{type:"string"},validFlag:{type:"boolean"},createTime:{type:"number"},updateTime:{type:"number"}},Ti={limit:{type:"number"}};function formatMembers(e){return Array.isArray(e)&&e.length>0?e.map((e=>function formatMember(e){return format(Si,e)}(e))):[]}const qi={"25_1":"qchatGetNeroomToken","25_2":"qchatUpdateRTCChannelConfig","25_3":"qchatGetRTCChannelConfig","25_4":"qchatGetRTCChannelMembers"},wi={QChatRTCChannelConfigTag:{serverId:1,channelId:2,limit:3,audio:4,video:5},QChatRTCChannelConfigResultTag:{limit:1,audio:2,video:3},QChatGetRTCParams:{serverId:1,channelId:2},qchatGetRTCChannelMembersTag:{serverId:1,channelId:2},memberInfo:{serverId:1,accid:3,nick:4,avatar:5,ext:6,type:7,joinTime:8,inviter:9,validFlag:10,createTime:11,updateTime:12},QChatGetNeroomTokenResultTag:{token:1,expire:2},QChatGetNeroomTokenParams:{neroomDeviceId:1}},_i=invertSerializeMap(wi),Ri={qchatGetNeroomToken:{sid:25,cid:1,service:"qchatMedia",params:[{type:"Property",name:"qchatGetNeroomTokenTag",reflectMapper:wi.QChatGetNeroomTokenParams}],response:[{type:"Property",name:"neroomToken",reflectMapper:_i.QChatGetNeroomTokenResultTag}]},qchatUpdateRTCChannelConfig:{sid:25,cid:2,service:"qchatMedia",params:[{type:"Property",name:"RTCChannelConfig",reflectMapper:wi.QChatRTCChannelConfigTag}]},qchatGetRTCChannelConfig:{sid:25,cid:3,service:"qchatMedia",params:[{type:"Property",name:"qchatGetRTCChannelConfigTag",reflectMapper:wi.QChatGetRTCParams}],response:[{type:"Property",name:"RTCChannelConfig",reflectMapper:_i.QChatRTCChannelConfigResultTag}]},qchatGetRTCChannelMembers:{sid:25,cid:4,service:"qchatMedia",params:[{type:"Property",name:"qchatGetRTCChannelMembersTag",reflectMapper:wi.QChatGetRTCParams}],response:[{type:"PropertyArray",name:"memberList",reflectMapper:_i.memberInfo}]}};class QChatMediaService extends Service{constructor(e){super("qchatMedia",e),this.tokenExpireTime=24e4,this.getTokenState=!1,this.core=e,registerParser({cmdMap:qi,cmdConfig:Ri}),this.core.on("disconnect",(()=>__awaiter(this,void 0,void 0,(function*(){this.roomContext&&(yield this.disconnectChannel()),this.tokenTimer&&(this.core.timerManager.deleteTimer(this.tokenTimer),this.tokenTimer=void 0)})))),this.core.on("kicked",(()=>__awaiter(this,void 0,void 0,(function*(){this.roomContext&&(yield this.disconnectChannel()),this.tokenTimer&&(this.core.timerManager.deleteTimer(this.tokenTimer),this.tokenTimer=void 0)})))),this.core.eventBus.on("qchatMedia/serverOrChannelLeave",(e=>__awaiter(this,void 0,void 0,(function*(){(e.type===Ia[Ia.channelVisibilityUpdate]&&e.channelId===this.channelId||e.type===Ia[Ia.serverEnterLeave]&&e.serverId===this.serverId)&&this.roomContext&&this.roomContext.roomUuid&&(yield this.disconnectChannel())})))),this.tokenExpireTime=24e4,this.channelId="",this.serverId=""}setNeroom(e){this.neroom=new e}_checkPermission(e){return __awaiter(this,void 0,void 0,(function*(){return yield this.core.qchatRole.checkPermission(e)}))}_checkConnectState(){if("connect"!==this.state)throw new CustomError("QChatMedia::you should connect first")}kickMemberOut(e){var t;return __awaiter(this,void 0,void 0,(function*(){this._checkConnectState(),validate({accid:{type:"string",allowEmpty:!1}},e);try{yield null===(t=this.roomContext)||void 0===t?void 0:t.kickMemberOut(e.accid)}catch(t){throw this.logger.error("QChatMedia::kickMemberOut error params is "+JSON.stringify(e),t),new CustomError("QChatMedia::kickMemberOut error",t)}}))}disconnectChannel(){var e;return __awaiter(this,void 0,void 0,(function*(){this._checkConnectState(),this.logger.debug("QChatMedia::disconnect begin disconnect");try{yield null===(e=this.roomContext)||void 0===e?void 0:e.leaveRoom()}catch(e){this.logger.error("QChatMedia::disconnect error",e)}this.authService&&(yield this.authService.logout()),this._setStateInit(),this.core.emit("qchatMediaDisconnect")}))}_setStateInit(){this.logger.debug("QChatMedia::disconnect end"),this.roomContext=void 0,this.rtcController=void 0,this.state="init",this.tokenTimer&&(this.core.timerManager.deleteTimer(this.tokenTimer),this.tokenTimer=void 0),this.channelId="",this.serverId=""}muteAudio(e){var t,r,n,a,i;return __awaiter(this,void 0,void 0,(function*(){if(this._checkConnectState(),validate({accid:{type:"string",allowEmpty:!1}},e),(null===(t=this.roomContext)||void 0===t?void 0:t.localMember.uuid)===e.accid)try{yield null===(r=this.rtcController)||void 0===r?void 0:r.muteMyAudio()}catch(e){throw this.logger.error("QChatMedia::muteAudio error",e),new CustomError("QChatMedia::muteAudio error",e)}else try{const t=null===(n=this.roomContext)||void 0===n?void 0:n.roomProperties.audioOff;if(t&&(null===(a=t.value)||void 0===a?void 0:a.split("_")[0])===Ii.offNotAllowSelfOn){if(!(yield this._checkPermission({serverId:this.serverId,channelId:this.channelId,auth:"RTCChannelOpenCloseEveryoneMicrophone"})))return void this.logger.error("QChatMedia::unMuteAudio not allow open auido")}yield null===(i=this.rtcController)||void 0===i?void 0:i.muteMemberAudio(e.accid)}catch(t){throw this.logger.error("QChatMedia::muteAudio error params is "+JSON.stringify(e),t),new CustomError("QChatMedia::muteAudio error",t)}}))}unMuteAudio(e){var t,r,n,a,i;return __awaiter(this,void 0,void 0,(function*(){this._checkConnectState(),validate({accid:{type:"string",allowEmpty:!1}},e);const o=null===(t=this.roomContext)||void 0===t?void 0:t.roomProperties.audioOff;if(o&&(null===(r=o.value)||void 0===r?void 0:r.split("_")[0])===Ii.offNotAllowSelfOn){if(!(yield this._checkPermission({serverId:this.serverId,channelId:this.channelId,auth:"RTCChannelOpenCloseEveryoneMicrophone"})))return void this.logger.error("QChatMedia::unMuteAudio not allow open auido")}if((null===(n=this.roomContext)||void 0===n?void 0:n.localMember.uuid)===e.accid)try{yield null===(a=this.rtcController)||void 0===a?void 0:a.unmuteMyAudio()}catch(e){throw this.logger.error("QChatMedia::unMuteAudio error",e),new CustomError("QChatMedia::unMuteAudio error",e)}else try{yield null===(i=this.rtcController)||void 0===i?void 0:i.unmuteMemberAudio(e.accid)}catch(t){throw this.logger.error("QChatMedia::unMuteAudio error params is "+JSON.stringify(e),t),new CustomError("QChatMedia::unMuteAudio error",t)}}))}muteVideo(e){var t,r,n,a,i;return __awaiter(this,void 0,void 0,(function*(){if(this._checkConnectState(),validate({accid:{type:"string",allowEmpty:!1}},e),(null===(t=this.roomContext)||void 0===t?void 0:t.localMember.uuid)===e.accid)try{yield null===(r=this.rtcController)||void 0===r?void 0:r.muteMyVideo()}catch(e){throw this.logger.error("QChatMedia::muteVideo error",e),new CustomError("QChatMedia::muteVideo error",e)}else try{const t=null===(n=this.roomContext)||void 0===n?void 0:n.roomProperties.videoOff;if(t&&(null===(a=t.value)||void 0===a?void 0:a.split("_")[0])===Ii.offNotAllowSelfOn){if(!(yield this._checkPermission({serverId:this.serverId,channelId:this.channelId,auth:"RTCChannelOpenCloseEveryoneCamera"})))return void this.logger.error("QChatMedia::unMuteVideo not allow open video")}yield null===(i=this.rtcController)||void 0===i?void 0:i.muteMemberVideo(e.accid)}catch(t){throw this.logger.error("QChatMedia::muteVideo error params is "+JSON.stringify(e),t),new CustomError("QChatMedia::muteVideo error",t)}}))}unMuteVideo(e){var t,r,n,a,i;return __awaiter(this,void 0,void 0,(function*(){this._checkConnectState(),validate({accid:{type:"string",allowEmpty:!1}},e);const o=null===(t=this.roomContext)||void 0===t?void 0:t.roomProperties.videoOff;if(o&&(null===(r=o.value)||void 0===r?void 0:r.split("_")[0])===Ii.offNotAllowSelfOn){if(!(yield this._checkPermission({serverId:this.serverId,channelId:this.channelId,auth:"RTCChannelOpenCloseEveryoneCamera"})))return void this.logger.error("QChatMedia::unMuteVideo not allow open video")}if((null===(n=this.roomContext)||void 0===n?void 0:n.localMember.uuid)===e.accid)try{yield null===(a=this.rtcController)||void 0===a?void 0:a.unmuteMyVideo()}catch(e){throw this.logger.error("QChatMedia::unMuteVideo error",e),new CustomError("QChatMedia::unMuteVideo error",e)}else try{null===(i=this.rtcController)||void 0===i||i.unmuteMemberVideo(e.accid)}catch(e){throw this.logger.error("QChatMedia::unMuteVideo error",e),new CustomError("QChatMedia::unMuteVideo error",e)}}))}startScreenShare(){var e;return __awaiter(this,void 0,void 0,(function*(){this._checkConnectState();try{null===(e=this.rtcController)||void 0===e||e.startScreenShare()}catch(e){throw this.logger.error("QChatMedia::startScreenShare error",e),new CustomError("QChatMedia::startScreenShare error",e)}}))}stopScreenShare(){var e;return __awaiter(this,void 0,void 0,(function*(){this._checkConnectState();try{null===(e=this.rtcController)||void 0===e||e.stopScreenShare()}catch(e){throw this.logger.error("QChatMedia::stopScreenShare error",e),new CustomError("QChatMedia::stopScreenShare error",e)}}))}stopMemberScreenShare(e){var t;return __awaiter(this,void 0,void 0,(function*(){this._checkConnectState(),validate({accid:{type:"string",allowEmpty:!1}},e);try{null===(t=this.rtcController)||void 0===t||t.stopMemberScreenShare(e.accid)}catch(e){throw this.logger.error("QChatMedia::stopMemberScreenShare error",e),new CustomError("QChatMedia::stopMemberScreenShare error",e)}}))}subscribeRemoteVideoStream(e){var t;return __awaiter(this,void 0,void 0,(function*(){this._checkConnectState(),validate({accid:{type:"string",allowEmpty:!1},streamType:{type:"number",allowEmpty:!1,min:0,max:1}},e);try{null===(t=this.rtcController)||void 0===t||t.subscribeRemoteVideoStream(e.accid,e.streamType)}catch(e){throw this.logger.error("QChatMedia::subscribeRemoteVideoStream error",e),new CustomError("QChatMedia::subscribeRemoteVideoStream error",e)}}))}unSubscribeRemoteVideoStream(e){var t;return __awaiter(this,void 0,void 0,(function*(){this._checkConnectState(),validate({accid:{type:"string",allowEmpty:!1},streamType:{type:"number",allowEmpty:!1,min:0,max:1}},e);try{null===(t=this.rtcController)||void 0===t||t.unsubscribeRemoteVideoStream(e.accid,e.streamType)}catch(e){throw this.logger.error("QChatMedia::unSubscribeRemoteVideoStream error",e),new CustomError("QChatMedia::unSubscribeRemoteVideoStream error",e)}}))}setupVideoCanvas(e){var t;if(this._checkConnectState(),(null===(t=this.roomContext)||void 0===t?void 0:t.localMember.uuid)===e.accid)try{return this.rtcController.setupLocalVideoCanvas(e.videoView)}catch(e){throw this.logger.error("QChatMedia::setupVideoCanvas error",e),new CustomError("QChatMedia::setupVideoCanvas error",e)}else try{return this.rtcController.setupRemoteVideoCanvas(e.videoView,e.accid)}catch(e){throw this.logger.error("QChatMedia::setupVideoCanvas error",e),new CustomError("QChatMedia::setupVideoCanvas error",e)}}setupRemoteVideoSubStreamCanvas(e){this._checkConnectState(),validate({accid:{type:"string",allowEmpty:!1}},e);try{return this.rtcController.setupRemoteVideoSubStreamCanvas(e.videoView,e.accid)}catch(e){throw this.logger.error("QChatMedia::setupRemoteVideoSubStreamCanvas error",e),new CustomError("QChatMedia::setupRemoteVideoSubStreamCanvas error",e)}}getScreenSharingUserUuid(){this._checkConnectState();try{return this.rtcController.getScreenSharingUserUuid()}catch(e){throw this.logger.error("QChatMedia::getScreenSharingUserUuid error",e),new CustomError("QChatMedia::getScreenSharingUserUuid error",e)}}initQChatMedia(e){return __awaiter(this,void 0,void 0,(function*(){if(this.neroom)if(void 0===this.state){try{this.neroom.initialize({appKey:this.core.options.appkey,serverConfig:e.serverConfig})}catch(e){throw this.logger.error("QChatMedia::initQChatMedia error",e),new CustomError("QChatMedia::initQChatMedia error",e)}this.authService=this.neroom.authService,this.roomService=this.neroom.roomService,this.messageChannelService=this.neroom.messageChannelService,this.state="init"}else this.logger.error("QChatMedia::init::you already init QChatMedia");else this.logger.warn("QChatMedia::init::you should import neroom SDK")}))}loginByIM(){var e;return __awaiter(this,void 0,void 0,(function*(){if("init"!==this.state)return void this.logger.error("QChatMedia::connect::you should init before login");const t=this.core.options,r=yield this._getToken();try{yield null===(e=this.authService)||void 0===e?void 0:e.loginByIM(t.account,r,t.token)}catch(e){throw this.logger.error("QChatMedia::loginByIM error",e),new CustomError("QChatMedia::loginByIM error",e)}this.state="login"}))}_getToken(){var e;return __awaiter(this,void 0,void 0,(function*(){this.logger.log("QChatMedia::getToken begin getToken");const t=yield this.core.sendCmd("qchatGetNeroomToken",{qchatGetNeroomTokenTag:{neroomDeviceId:null===(e=this.neroom)||void 0===e?void 0:e.deviceId}}),{token:r,expire:n}=t.content.neroomToken;return this.logger.log(`QChatMedia::getToken success token is ${r},expire is ${n} `),this.tokenTimer||(this.logger.debug(`QChatMedia::getToken set token timer,expire is ${1e3*n-this.tokenExpireTime} `),this.tokenTimer=this.core.timerManager.addTimer((()=>__awaiter(this,void 0,void 0,(function*(){this.tokenTimer&&this.core.timerManager.deleteTimer(this.tokenTimer),this.tokenTimer=void 0;const e=yield this._getToken();this.authService&&this.authService.renewToken(e)}))),1e3*n-this.tokenExpireTime)),r}))}connectChannel(e){var t,r;return __awaiter(this,void 0,void 0,(function*(){if(void 0===this.state)return void this.logger.error("QChatMedia::connect::you should init before login");"init"===this.state&&(yield this.loginByIM()),this.serverId=e.serverId,this.channelId=e.channelId;try{yield null===(t=this.roomService)||void 0===t?void 0:t.joinRoom({roomUuid:e.channelId,role:"qchatAudience",userName:this.core.options.account,initialProperties:{}},{})}catch(e){throw this.logger.error("QChatMedia::connectChannel error",e),new CustomError("QChatMedia::connectChannel error",e)}const n=null===(r=this.roomService)||void 0===r?void 0:r.getRoomContext(e.channelId);n?(this.roomContext=n,this.rtcController=this.roomContext.rtcController,this.state="connect",yield this.rtcController.joinRtcChannel(),this.core.emit("connectChannel")):this.logger.error("QChatMedia::connect room not exited")}))}updateRTCChannelInfo(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",allowEmpty:!1},channelId:{type:"string",allowEmpty:!1},limit:{type:"number",allowEmpty:!1}},e),yield this.core.sendCmd("qchatUpdateRTCChannelConfig",{RTCChannelConfig:Object.assign(Object.assign({},e),{audio:JSON.stringify(e.audio),video:JSON.stringify(e.video)})})}))}getRTCChannelInfo(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",allowEmpty:!1},channelId:{type:"string",allowEmpty:!1}},e);return function formatRTCChannelConfig(e){try{e.audio&&(e.audio=JSON.parse(e.audio))}catch(e){throw new ValidateError('result "audio" JSON parse error',{key:"audio"},"JSON parse error")}try{e.video&&(e.video=JSON.parse(e.video))}catch(e){throw new ValidateError('result "video" JSON parse error',{key:"video"},"JSON parse error")}return format(Ti,e)}((yield this.core.sendCmd("qchatGetRTCChannelConfig",{qchatGetRTCChannelConfigTag:e})).content.RTCChannelConfig)}))}getRTCChannelOnlineMembers(e){return __awaiter(this,void 0,void 0,(function*(){validate({serverId:{type:"string",allowEmpty:!1},channelId:{type:"string",allowEmpty:!1}},e);return formatMembers((yield this.core.sendCmd("qchatGetRTCChannelMembers",{qchatGetRTCChannelMembersTag:e})).content.memberList)}))}addRTCChannelListener(){var e,t;this._checkConnectState();try{null===(e=this.authService)||void 0===e||e.addAuthListener({onAuthEvent:e=>__awaiter(this,void 0,void 0,(function*(){if(1026===e&&!this.getTokenState){this.logger.log("QChatMedia::loginByIM token expire,begin get new token "),this.getTokenState=!0;const e=yield this._getToken();this.authService&&(yield this.authService.renewToken(e)),this.getTokenState=!1}}))})}catch(e){throw this.getTokenState=!1,this.logger.error("QChatMedia::loginByIM addAuthListener error",e),new CustomError("QChatMedia::loginByIM addAuthListener error",e)}null===(t=this.roomContext)||void 0===t||t.addRoomListener({onRoomPropertiesChanged:e=>{var t,r,n,a,i,o;if(this.logger.log("QChatMedia::addRTCChannelListener::onRoomPropertiesChanged",e),e.audioOff){const a=null===(t=e.audioOff.value)||void 0===t?void 0:t.split("_")[0];a!==Ii.offNotAllowSelfOn&&a!==Ii.offAllowSelfOn||(null===(r=this.roomContext)||void 0===r?void 0:r.localMember.isAudioOn)&&(null===(n=this.rtcController)||void 0===n||n.muteMyAudio())}else if(e.videoOff){const t=null===(a=e.videoOff.value)||void 0===a?void 0:a.split("_")[0];t!==Ii.offNotAllowSelfOn&&t!==Ii.offAllowSelfOn||(null===(i=this.roomContext)||void 0===i?void 0:i.localMember.isVideoOn)&&(null===(o=this.rtcController)||void 0===o||o.muteMyVideo())}},onRoomPropertiesDeleted:e=>{this.logger.log("QChatMedia::addRTCChannelListener::onRoomPropertiesDeleted",e)},onMemberJoinRtcChannel:e=>{this.logger.log("QChatMedia::addRTCChannelListener::onMemberJoinRTCChannel",e);const t=e.map((e=>e.uuid));this.core.emit("memberJoinRTCChannel",t)},onMemberLeaveRoom:e=>{this.logger.log("QChatMedia::addRTCChannelListener::onMemberLeaveRoom",e);const t=e.map((e=>e.uuid));this.core.emit("memberLeaveRTCChannel",t)},onRoomEnded:e=>{this.authService&&this.authService.logout(),this._setStateInit(),this.logger.log("QChatMedia::addRTCChannelListener::onRoomEnded",e),this.core.emit("RTCChannelEnded",e)},onRtcChannelError:e=>{this.logger.log("QChatMedia::addRTCChannelListener::onRtcChannelError",e),"SOCKET_ERROR"===e&&this.disconnectChannel(),this.core.emit("RTCChannelError",e)},onRtcAudioVolumeIndication:e=>{this.logger.log("QChatMedia::addRTCChannelListener::onRtcAudioVolumeIndication",e),this.core.emit("onRtcAudioVolumeIndication",e)},onMemberAudioMuteChanged:(e,t,r)=>{this.logger.log("QChatMedia::addRTCChannelListener::onMemberAudioMuteChanged",e,t),this.core.emit("memberAudioMuteChanged",{memberAccId:e.uuid,mute:t,operateByAccId:r.uuid})},onMemberScreenShareStateChanged:(e,t,r)=>{this.logger.log("QChatMedia::addRTCChannelListener::onMemberScreenShareStateChanged",e,t),this.core.emit("memberScreenShareStateChanged",{memberAccId:e.uuid,isSharing:t,operateByAccId:r.uuid})},onMemberVideoMuteChanged:(e,t,r)=>{this.logger.log("QChatMedia::addRTCChannelListener::onMemberVideoMuteChanged",e,t),this.core.emit("memberVideoMuteChanged",{memberAccId:e.uuid,mute:t,operateByAccId:r.uuid})}})}enumCameraDevices(){return this._checkConnectState(),this.rtcController.enumCameraDevices().then((e=>e.data),(e=>{throw this.logger.error("QChatMedia::enumCameraDevices error",e),new CustomError("QChatMedia::enumCameraDevices error",e)}))}enumPlayoutDevices(){return this._checkConnectState(),this.rtcController.enumPlayoutDevices().then((e=>e.data),(e=>{throw this.logger.error("QChatMedia::enumPlayoutDevices error",e),new CustomError("QChatMedia::enumPlayoutDevices error",e)}))}enumRecordDevices(){return this._checkConnectState(),this.rtcController.enumRecordDevices().then((e=>e.data),(e=>{throw this.logger.error("QChatMedia::enumRecordDevices error",e),new CustomError("QChatMedia::enumRecordDevices error",e)}))}removeRTCChannelListener(){var e,t;this._checkConnectState(),null===(e=this.roomContext)||void 0===e||e.removeRoomListener({}),null===(t=this.authService)||void 0===t||t.removeAuthListener({})}setSelectedCameraDevice(e){return this._checkConnectState(),validate({deviceId:{type:"string",allowEmpty:!1}},e),this.rtcController.setSelectedCameraDevice(e.deviceId).then((e=>e.data),(e=>{throw this.logger.error("QChatMedia::setSelectedCameraDevice error",e),new CustomError("QChatMedia::setSelectedCameraDevice error",e)}))}setSelectedPlayoutDevice(e){return this._checkConnectState(),validate({deviceId:{type:"string",allowEmpty:!1}},e),this.rtcController.setSelectedPlayoutDevice(e.deviceId).then((e=>e.data),(e=>{throw this.logger.error("QChatMedia::setSelectedPlayoutDevice error",e),new CustomError("QChatMedia::setSelectedPlayoutDevice error",e)}))}setSelectedRecordDevice(e){return this._checkConnectState(),validate({deviceId:{type:"string",allowEmpty:!1}},e),this.rtcController.setSelectedRecordDevice(e.deviceId).then((e=>e.data),(e=>{throw this.logger.error("QChatMedia::setSelectedRecordDevice error",e),new CustomError("QChatMedia::setSelectedRecordDevice error",e)}))}getRTCMembers(){return this._checkConnectState(),this.roomContext.remoteMembers.filter((e=>e.isInRtcChannel)).map((e=>({accid:e.uuid,isAudioOn:!!e.isAudioOn,isVideoOn:!!e.isVideoOn,isSharingScreen:!!e.isSharingScreen,properties:e.properties})))}subscribeRemoteVideoSubStream(e){var t;return __awaiter(this,void 0,void 0,(function*(){this._checkConnectState(),validate({accid:{type:"string",allowEmpty:!1}},e);try{null===(t=this.rtcController)||void 0===t||t.subscribeRemoteVideoSubStream(e.accid)}catch(e){throw this.logger.error("QChatMedia::subscribeRemoteVideoSubStream error",e),new CustomError("QChatMedia::subscribeRemoteVideoSubStream error",e)}}))}unsubscribeRemoteVideoSubStream(e){var t;return __awaiter(this,void 0,void 0,(function*(){this._checkConnectState(),validate({accid:{type:"string",allowEmpty:!1}},e);try{null===(t=this.rtcController)||void 0===t||t.unsubscribeRemoteVideoSubStream(e.accid)}catch(e){throw this.logger.error("QChatMedia::unsubscribeRemoteVideoSubStream error",e),new CustomError("QChatMedia::unsubscribeRemoteVideoSubStream error",e)}}))}muteAllAudio(){var e;return __awaiter(this,void 0,void 0,(function*(){this._checkConnectState();if(yield this._checkPermission({serverId:this.serverId,channelId:this.channelId,auth:"RTCChannelOpenCloseEveryoneMicrophone"}))try{null===(e=this.roomContext)||void 0===e||e.updateRoomProperty("audioOff",JSON.stringify({value:Ii.offNotAllowSelfOn+`_${(new Date).getTime()}`}))}catch(e){throw this.logger.error("QChatMedia::muteAllAudio error",e),new CustomError("QChatMedia::muteAllAudio error",e)}else this.logger.error("QChatMedia::connect::auth your have not RTCChannelOpenCloseEveryoneMicrophone auth")}))}muteAllVideo(){var e;return __awaiter(this,void 0,void 0,(function*(){this._checkConnectState();if(yield this._checkPermission({serverId:this.serverId,channelId:this.channelId,auth:"RTCChannelOpenCloseEveryoneCamera"}))try{null===(e=this.roomContext)||void 0===e||e.updateRoomProperty("videoOff",JSON.stringify({value:Ii.offNotAllowSelfOn+`_${(new Date).getTime()}`}))}catch(e){throw this.logger.error("QChatMedia::muteAllVideo error",e),new CustomError("QChatMedia::muteAllVideo error",e)}else this.logger.error("QChatMedia::connect::auth your have not RTCChannelOpenCloseEveryoneCamera auth")}))}unMuteAllAudio(){var e;return __awaiter(this,void 0,void 0,(function*(){this._checkConnectState();if(yield this._checkPermission({serverId:this.serverId,channelId:this.channelId,auth:"RTCChannelOpenCloseEveryoneMicrophone"}))try{null===(e=this.roomContext)||void 0===e||e.updateRoomProperty("audioOff",JSON.stringify({value:Ii.disable+`_${(new Date).getTime()}`}))}catch(e){throw this.logger.error("QChatMedia::unMuteAllAudio error",e),new CustomError("QChatMedia::unMuteAllAudio error",e)}else this.logger.error("QChatMedia::connect::auth your have not RTCChannelOpenCloseEveryoneMicrophone auth")}))}unMuteAllVideo(){var e;return __awaiter(this,void 0,void 0,(function*(){this._checkConnectState();if(yield this._checkPermission({serverId:this.serverId,channelId:this.channelId,auth:"RTCChannelOpenCloseEveryoneCamera"}))try{null===(e=this.roomContext)||void 0===e||e.updateRoomProperty("videoOff",JSON.stringify({value:Ii.disable+`_${(new Date).getTime()}`}))}catch(e){throw this.logger.error("QChatMedia::unMuteAllVideo error",e),new CustomError("QChatMedia::unMuteAllVideo error",e)}else this.logger.error("QChatMedia::connect::auth your have not RTCChannelOpenCloseEveryoneCamera auth")}))}}const ki={"1_2":"heartbeat","24_2":"qchatLogin","24_4":"qchatExit","24_5":"qchatBeKicked","24_8":"qchatMultiSpotLogin","24_9":"qchatKick","24_19":"qchatSync"},Ei={qchatLoginTag:{appkey:1,account:2,authType:3,token:4,loginExt:5,clientType:6,clientSession:7,deviceId:8,sdkVersion:9,sdkType:10,userAgent:11,customTag:12,customClientType:13,sdkHumanVersion:14,pushTokenName:20,pushToken:21,pushkitTokenName:22,pushkitToken:23,deviceInfo:24,customPushContentType:25,os:30,mac:31,bundleId:32,simCarrierCode:33,simCountryCode:34,networkCode:35,browser:36,deviceModel:37,androidid:38,imei:39,idfv:40,openuuid:41,pushType:100,hasTokenPreviously:101,consid:102,clientIP:103,clientPort:104,loginTime:105}},Pi=invertSerializeMap(Ei),Ai={heartbeat:{sid:1,cid:2,service:"qchatAuth"},qchatLogin:{sid:24,cid:2,service:"qchatAuth",params:[{type:"Property",name:"qchatLoginReqTag",reflectMapper:Ei.qchatLoginTag}],response:[{type:"Property",name:"qchatLoginResTag",reflectMapper:Pi.qchatLoginTag},{type:"PropertyArray",name:"qchatMultiLoginResult",reflectMapper:Pi.qchatLoginTag}]},qchatExit:{sid:24,cid:4,service:"qchatAuth"},qchatBeKicked:{sid:24,cid:5,service:"qchatAuth",response:[{type:"Property",name:"beKickedTag",reflectMapper:{1:"clientType",2:"reason",3:"ext",4:"customClientType"}}]},qchatMultiSpotLogin:{sid:24,cid:8,service:"qchatAuth",response:[{type:"Number",name:"state"},{type:"Property",name:"qchatLoginResTag",reflectMapper:Pi.qchatLoginTag}]},qchatKick:{sid:24,cid:9,service:"qchatAuth",params:[{type:"StrArray",name:"deviceIds"}],response:[{type:"StrArray",name:"deviceIds"}]},qchatSync:{sid:24,cid:19,service:"qchatAuth",isNoResponse:!0,params:[{type:"Property",name:"qchatSyncTag",reflectMapper:{systemNotification:1,pushConfig:2}}],response:[{type:"Number",name:"timetag"}]}},Oi={debugLevel:"off",needReconnect:!0,reconnectionAttempts:Number.MAX_SAFE_INTEGER,isAbtestEnable:!0,abtestUrl:"https://abt-online.netease.im/v1/api/abt/client/getExperimentInfo",abtestProjectKey:"imElite_sdk_abtest_web"};class QChat extends Core{constructor(e,t={cloudStorageConfig:{}}){super(e),this.instanceName="QChat",this.account="",this.options={},this.qchatAuth={},this.qchatServer={},this.qchatChannel={},this.qchatMsg={},this.qchatRole={},this.qchatMedia={},this.cloudStorage={},this.setOptions(e),registerParser({cmdMap:ki,cmdConfig:Ai}),registerParser({cmdMap:un,cmdConfig:yn}),this.qchatAuth=new QChatAuthService(this),this.qchatServer=new QChatServerService(this),this.qchatChannel=new QChatChannelService(this),this.qchatMsg=new QChatMsgService(this),this.qchatRole=new QChatRoleService(this),this.qchatMedia=new QChatMediaService(this),this.cloudStorage=new CloudStorageService(this,Object.assign({storageKeyPrefix:this.instanceName},t.cloudStorageConfig)),t&&this.setOtherOptions(t),QChat.instance=this}static getInstance(e,t){if(!QChat.instance){if(e)return new QChat(e,t);throw new Error("Instance not exist, please input options")}if(e){if(QChat.instance.options.account===e.account&&QChat.instance.options.appkey===e.appkey)return QChat.instance.setOptions(e),t&&QChat.instance.setOtherOptions(t),QChat.instance;throw new Error("Unexpected login")}return QChat.instance}connect(e={}){const t=Object.create(null,{connect:{get:()=>super.connect}});return __awaiter(this,void 0,void 0,(function*(){if(!/^(unconnected|waitReconnect)$/.test(this.status)){const e=`QChat status is ${this.status}, and would not connect`;return this.logger.warn(e),Promise.reject(e)}const r=e.isAutoReconnect||!1;let n;yield t.connect.call(this,{linkUrls:this.options.linkAddresses,isAutoReconnect:r});try{n=yield this.qchatAuth.doLogin(r)}catch(e){if(this.logger.warn("qchat connect:: login failed",e),0===this.retryCount)throw this.doDisconnect(ot.ACTIVE,"FailedToInitializeLogin"),e;return void this.doDisconnect(ot.OFFLINE,"ReconnectLoginFailed")}this.status="logined",n.loginResult.appkey=this.options.appkey,this.eventBus.emit("logined",n.loginResult),this.emit("logined",n.loginResult),n.multiLoginResults&&n.multiLoginResults.length>0&&this.emit("multiSpotLogin",n.multiLoginResults),this.resetConnectStatus(),this.ping();try{yield this.cloudStorage.init()}catch(e){this.logger.error("NIM:login cloudStorage init failed ",e)}yield this.qchatAuth.sync()}))}login(e={}){return this.connect(e)}setOptions(e){validate({account:{type:"string"},appkey:{type:"string"},token:{type:"string"},linkAddresses:{type:"array",itemType:"string",min:1},needReconnect:{type:"boolean",required:!1},reconnectionAttempts:{type:"number",required:!1},debugLevel:{type:"enum",values:I,required:!1}},e),this.logger.log("QChat::setOptions options is",e),this.account=e.account,this.options=Object.assign(Object.assign({},Oi),e)}setOtherOptions(e){var t;(null===(t=null==e?void 0:e.QChatMedia)||void 0===t?void 0:t.neroom)&&this.qchatMedia.setNeroom(e.QChatMedia.neroom)}onMessage(e){var t,r;const n=super.onMessage(e);if(!n)return;const a=n.raw.ser,i=this.sendingCmdMap.get(a);if(i&&i.cmd===n.cmd){const{callback:e,timer:r,params:o}=i;if(clearTimeout(r),n.params=o,this.sendingCmdMap.delete(a),"heartbeat"===n.cmd)return void e[0]();const s=null===(t=this[n.service])||void 0===t?void 0:t.process(n);s&&"function"==typeof s.then?s.then((t=>{e[0](t)})).catch((t=>{e[1](t)})):(this.logger.log("imsocket:: handlerFn without promise",n.service,n.cmd),e[0]())}else null===(r=this[n.service])||void 0===r||r.process(n)}disconnect(){switch(this.status){case"connected":case"logined":return this.sendCmd("qchatExit").then((()=>{super.doDisconnect(ot.ACTIVE,"UserActiveDisconnect")}));case"connecting":case"waitReconnect":return super.doDisconnect(ot.ACTIVE,"UserActiveDisconnect"),Promise.resolve();case"unconnected":case"destroyed":return Promise.resolve()}}logout(){return this.disconnect()}destroy(){return QChat.instance=null,super.destroy()}kickOtherClients(e){return validate({deviceIds:{type:"array",itemType:"string"}},e),this.qchatAuth.kick(e)}}QChat.instance=null;let xi=console;const Ui={clear(){try{uni.clearStorageSync()}catch(e){xi.error("uni-app::ws: clearStorage ",e)}},getItem:e=>uni.getStorageSync(e),setItem:(e,t)=>uni.setStorageSync(e,t),removeItem:e=>uni.removeStorageSync(e)};const ji={setLogger(e){xi=e},platform:"UNIAPP",localStorage:Ui,request:function request(e,t){return new Promise(((r,n)=>{uni.request(Object.assign(Object.assign({method:"GET",url:e},t),{success:function(e){e={data:e.data,status:e.statusCode,errMsg:e.errMsg,header:e.header},r(e)},fail:function(e){n(e)}}))}))},WebSocket:class WebSocket{constructor(e,t=""){if(this.CONNECTING=0,this.OPEN=1,this.CLOSING=2,this.CLOSED=3,this.onclose=function(e){xi.log("Adapter uniapp: sockets on close ",e)},this.onerror=function(e){xi.error("Adapter uniapp: sockets error ",e)},this.onmessage=function(e){},this.onopen=function(e){},!e)throw new Error("Failed to construct 'socket': url required");this.url=e.replace(/:443(\/|$)/,"$1"),this.protocol=t,this.readyState=this.CONNECTING;const r=this.protocol?{protocols:this.protocol}:{};if("function"==typeof getApp){const e=getApp();if(e&&e.globalData&&e.globalData.__NIM_SDK_SOCKET_INTANCE_STATE)throw xi.warn("warning: uniapp create socket:: Multiple websockets are created in uniapp, may lead to unexpected results"),new Error("Create websocket failed cause multiple websockets are not supported in uniapp")}uni.connectSocket(Object.assign(Object.assign({url:this.url},r),{fail:e=>{this.errorHandler(e)},success:()=>{if("function"==typeof getApp){const e=getApp();e&&e.globalData&&(e.globalData.__NIM_SDK_SOCKET_INTANCE_STATE="CREATED")}}})),uni.onSocketOpen((e=>{this.readyState=this.OPEN,this.onmessage&&this.onmessage({type:"open",header:e})})),uni.onSocketError((e=>{if("function"==typeof getApp){const e=getApp();e&&e.globalData&&delete e.globalData.__NIM_SDK_SOCKET_INTANCE_STATE}this.errorHandler(e)})),uni.onSocketClose((e=>{xi.log("uniapp socket closed"),this.readyState=this.CLOSED;const{code:t,reason:r,wasClean:n}=e;if("function"==typeof this.onclose&&this.onclose&&this.onclose({code:t,reason:r,wasClean:n,type:"close"}),"function"==typeof getApp){const e=getApp();e&&e.globalData&&delete e.globalData.__NIM_SDK_SOCKET_INTANCE_STATE}})),uni.onSocketMessage((e=>{const{data:t,origin:r,ports:n,source:a}=e;this.onmessage&&this.onmessage({data:t,origin:r,ports:n,source:a,type:"message"})}))}close(){uni.closeSocket({code:1e3,reason:"user force close websocket",complete:()=>{}})}send(e){if(this.readyState!==this.OPEN)throw new Error(`Adapter uniapp: socket sendMsg when readyState=${this.readyState}`);if(!("string"==typeof e||e instanceof ArrayBuffer))throw new TypeError("Adapter uniapp: socket sendMsg only String/ArrayBuffer supported");uni.sendSocketMessage({data:e})}errorHandler(e){this.readyState=this.CLOSED,this.onerror&&this.onerror({type:"error",message:e&&e.errMsg}),e.errMsg&&"[object Array]"===Object.prototype.toString.call(e.errMsg)&&(e.errMsg.indexOf("断裂管道")>0||e.errMsg.indexOf("broken pipe")>0)&&this.onclose&&this.onclose({code:1006,reason:e&&e.errMsg,type:"close"})}},uploadFile:function uploadFile(e){return __awaiter(this,void 0,void 0,(function*(){return yield new Promise(((t,r)=>{const n=uni.uploadFile({url:e.commonUploadHost?`${e.commonUploadHost}/${e.nosToken.bucket}`:"https://nos.netease.com/nim",formData:{Object:decodeURIComponent(e.nosToken.objectName),"x-nos-token":e.nosToken.token,"x-nos-entity-type":"json"},name:"file",fileType:e.type,filePath:e.filePath,success(n){if(200==n.statusCode)try{const r=JSON.parse(n.data);r.name=e.filePath,r.ext=r.name.lastIndexOf(".")>-1?r.name.slice(r.name.lastIndexOf(".")+1).toLowerCase():"",t(r)}catch(e){r(new Error(`Upload Error parse result error: ${n.data}`))}else r(new Error(`Upload error ${n.statusCode}: ${n.errMsg}`))},fail(e){r(e)}});try{e.onUploadStart&&e.onUploadStart(n)}catch(e){xi.error("Adapter uploadFile: options.onUploadStart error",e&&e.message),n.abort(),r(e)}e.onUploadProgress&&n.onProgressUpdate((function(t){e.onUploadProgress&&e.onUploadProgress({total:t.totalBytesExpectedToSend,loaded:t.totalBytesSent,percentage:t.progress,percentageText:t.progress+"%"})}))}))}))},getSystemInfo:function getSystemInfo(){const e=uni.getSystemInfoSync()||{};return{os:e.osName||"UNIAPP_UNKNOW",osVer:e.osVersion,browser:e.browserName||"",browserVer:e.browserVersion||"",hostEnv:e.hostName,hostEnvVer:e.hostVersion,hostInfo:e.uniPlatform,pushDeviceInfo:{PRODUCT:e.model,DEVICE:e.model,MANUFACTURER:e.brand}}}};return QChat.setAdapters(ji),QChat}));
